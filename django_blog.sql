-- phpMyAdmin SQL Dump
-- version 2.11.9.2
-- http://www.phpmyadmin.net
--
-- 主机: 127.0.0.1:3306
-- 生成日期: 2010 年 10 月 13 日 06:28
-- 服务器版本: 5.1.28
-- PHP 版本: 5.2.6

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- 数据库: `django_blog`
--

-- --------------------------------------------------------

--
-- 表的结构 `article`
--

CREATE TABLE IF NOT EXISTS `article` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `caption` char(100) DEFAULT NULL,
  `shortContent` text COMMENT '内容截取',
  `content` text,
  `tags` text COMMENT '标签',
  `times` int(11) DEFAULT NULL,
  `date` char(100) DEFAULT NULL,
  `degree` int(11) DEFAULT NULL,
  `cate_id` int(3) DEFAULT NULL,
  `password` char(100) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `cate_id` (`cate_id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=249 ;

--
-- 导出表中的数据 `article`
--

INSERT INTO `article` (`id`, `caption`, `shortContent`, `content`, `tags`, `times`, `date`, `degree`, `cate_id`, `password`) VALUES
(3, 'apache配置文件中文版', '<p>None</p>', '<p># Apache服务器主配置文件. 包括服务器指令的目录设置. # 详见   # # 请在理解用途的基础上阅读各指令。 # # 再读取此文档后，服务器将继续搜索运行 # E:/Program Files/Apache Group/Apache/conf/srm.conf  # E:/Program Files/Apache Group/Apache/conf/access.conf # 除非用ResourceConfig或AccessConfig覆盖这儿的标识 # # 配置标识由三个基本部分组成: # 1. 作为一个整体来控制Apache服务器进程的标识 (the ''global environment''). # 2. 用于定义主（默认）服务器参数的标识。 # 响应虚拟主机不能处理的请求。 # 同时也提供所有虚拟主机的设置值。 # 3. 虚拟主机的设置。在一个Apache服务器进程中配置不同的IP地址和主机名。 # # 配置和日志文件名：指定服务器控制文件命名时， # 以 &quot;/&quot; (或 &quot;drive:/&quot; for Win32)开始，服务器将使用这些绝对路径。 # 如果文件名不是以&quot;/&quot;开始的，预先考虑服务器根目录-- # 因此 &quot;logs/foo.log&quot;，如果服务器根目录是&quot;/usr/local/apache&quot;， # 服务器将解释为 &quot;/usr/local/apache/logs/foo.log&quot;. # # 注: 指定的文件名需要用&quot;/&quot;代替&quot;\\&quot;。 # (例, &quot;c:/apache&quot; 代替 &quot;c:\\apache&quot;). # 如果省略了驱动器名，默认使用Apache.exe所在的驱动器盘符 # 建议指定盘符，以免混乱。 #  ### 部分 1: 全局环境 # # 本部分的表示将影响所有Apache的操作 # 例如，所能处理的并发请求数或配置文件地址 #  # # ServerType 可取值 inetd 或 standalone. Inetd 只适用于Unix平台 # ServerType standalone  # # ServerRoot: 目录树的根结点。服务器配置、出错信息、日志文件都保存在根目录下。 # # 不要再目录末尾加&quot;/&quot; # ServerRoot &quot;C:/Program Files/Apache Group/Apache&quot;  # # Pidfile: 服务器用于记录启动时进程ID的文件。 # PidFile logs/httpd.pid  # # ScoreBoardfile: 用于保存内部服务器进程信息的文件。 # 并非必须。 但是如果指定了（此文件当运行Apache时生成） # 那么必须确保没有两个Apache进程共享同一个scoreboard文件。 # ScoreBoardFile logs/apache_runtime_status  # # 在标准配置下，服务器将顺序读取 httpd.conf(此文件可通过命令行中-f参数指定）， # srm.conf 和 access.conf。  # 目前后两个文件是空的。为了简单起见，建议将所有的标识放在一个文件中。  # 以下两条注释的标识，是默认设置。 # 要让服务器忽略这些文件可以用 &quot;/dev/null&quot; (for Unix)  # 或&quot;nul&quot; (for Win32) 作为参数。 # #ResourceConfig conf/srm.conf #AccessConfig conf/access.conf  # # Timeout: 接受和发送timeout的时间 # Timeout 300  # # KeepAlive: 是否允许保持连接（每个连接有多个请求） # &quot;Off&quot; -无效 # KeepAlive On  # # MaxKeepAliveRequests: 每个连接的最大请求数。 # 设置为0表示无限制 # 建议设置较高的值，以获得最好的性能。 # MaxKeepAliveRequests 100  # # KeepAliveTimeout: 同一连接同一客户端两个请求之间的等待时间。 # KeepAliveTimeout 15  # # 在Win32下,Apache每次产生一个子进程来处理请求。 # 如果这个进程死了，会自动产生另一个子进程。 # 所有的进入请求在子进程中多线程处理。 # 以下两个标识控制进程的运行 #  # # MaxRequestsPerChild: 每个子进程死亡之前最大请求数 # 如果超过这个请求数，子程序会自动退出，避免延期使用导致内存溢出或其他问题。 # 大部分系统，并不需要此设置， # 但是部分，象Solaris，确实值得注意。 # 对Win32, 可设置为0 (无限制) # 除非有另外的考虑。 # # 注: 此值不包括在每个连接初始化请求后，&quot;keptalive&quot;请求 # 例如, 如果一个子进程处理一个初始化请求和10个后续&quot;keptalive&quot;请求， # 在这个限制下，只会记为一个请求。 # MaxRequestsPerChild 0  # # ThreadsPerChild: 服务器所允许的并发线程数。 # 此值的设置取决于服务器的响应能力（约多的请求在同一时间激活，则每个请求的处理时间越慢） # 和服务器所允许消耗的系统资源。 # ThreadsPerChild 50  # # Listen: 允许将Apache绑顶到指定的IP地址和端口，作为默认值的辅助选项。 # 参见 <virtualhost> # #Listen 3000 #Listen 12.34.56.78:80  # # BindAddress: 通过此选项可支持虚拟主机。 # 此标识用于告诉服务器监听哪个IP地址。 # 包括：&quot;*&quot;, IP地址, 或域名. # 参见 <virtualhost> 和 Listen directives. # BindAddress 166.111.178.144  # # Apache模块编译成标准的Windows结构。 # # 以下模块绑定到标准的Apache二进制windows分布。 # 要修改标准操作，取消以下行的注释并且修改指定模块列表。  # # 警告：这是高级选项。可能导致服务器崩溃。 # 没有专家的指导，不要轻易修改。 # #ClearModuleList #AddModule mod_so.c mod_mime.c mod_access.c mod_auth.c mod_negotiation.c #AddModule mod_include.c mod_autoindex.c mod_dir.c mod_cgi.c mod_userdir.c #AddModule mod_alias.c mod_env.c mod_log_config.c mod_asis.c mod_imap.c #AddModule mod_actions.c mod_setenvif.c mod_isapi.c  # # 动态共享对象（Dynamic Shared Object，DSO）  # # 要使用基于DSO的功能模块，需要替换此处相应的 # `LoadModule'' 行。这样在使用之前这些包含的标识都将生效。 # 有关DSO及至的详细资料请看Apache1.3版中的README.DSOSO。 # 运行&quot;apche -l&quot;将列表显示Apache内奸的模块（类似标准的连接已经生效） # # 注：模块载入的顺序很重要。没有专家的建议，不要修改以下的顺序。 # #LoadModule anon_auth_module modules/ApacheModuleAuthAnon.dll #LoadModule dbm_auth_module modules/ApacheModuleAuthDBM.dll #LoadModule digest_auth_module modules/ApacheModuleAuthDigest.dll #LoadModule cern_meta_module modules/ApacheModuleCERNMeta.dll #LoadModule digest_module modules/ApacheModuleDigest.dll #LoadModule expires_module modules/ApacheModuleExpires.dll #LoadModule headers_module modules/ApacheModuleHeaders.dll #LoadModule proxy_module modules/ApacheModuleProxy.dll #LoadModule rewrite_module modules/ApacheModuleRewrite.dll #LoadModule speling_module modules/ApacheModuleSpeling.dll #LoadModule info_module modules/ApacheModuleInfo.dll #LoadModule status_module modules/ApacheModuleStatus.dll #LoadModule usertrack_module modules/ApacheModuleUserTrack.dll  # # ExtendedStatus 在服务器状态句柄被呼叫时控制是产生&ldquo;完整&rdquo;的状态信息(ExtendedStatus On) # 还是仅返回基本信息(ExtendedStatus Off) # 默认是：Off # #ExtendedStatus On  ### 部分 2: 主服务器配置 # # 此部分的标识用于主服务器所有的设置值， # 响应任何<virtualhost>定义不处理的请求 # 这些值同时给你稍后在此文件中定义的<virtualhost>提供默认值。 # # 所有的标识可能会在<virtualhost>中出现。 # 对应的默认值会被虚拟主机重新定义覆盖。 #  # # Port: Standalone服务器监听的端口。  # 在Apache能够监听指定端口前，需要在防火墙中进行设置。 # 其它运行httpd的服务器也可能影响此端口。 Disable # 如果遇到问题，请关闭所有的防火墙、安全保护和其他的服务。 # Windos NT的&quot;NETSTAT -a&quot;指令会有助于问题的分析。 # Port 80 </virtualhost></virtualhost></virtualhost></virtualhost></virtualhost></p>', '相信', 2009, '2009-05', 164, 2, ''),
(4, '本站程序的重写!', NULL, '终于做完了这个站点! 我相信这个站点很受百度和谷歌的喜爱~~~', NULL, 2009, '2009-05', 107, 1, ''),
(5, '走进威迅', NULL, '2007.5.31...我去威迅了,威迅是从事培训Java，.Net工程师的一个职业学校........听说它在整个全国还颇有名气，，，头顶烈日，满怀激动的心情来到了沙坪坝区欣阳广场的四楼,,,,,,,,\r\n\r\n  我这次去的主要目的是了解下威迅，，看看神秘的威迅..........一进威迅的客厅，，，我就看见了有着和我同年龄段的许多面孔，其中一位嘴里还含着棒棒糖。最初，我还以为他们是威迅的学员或者是像我一样了解威迅的，这时，其中的一位女同志向我走来，“同学，请问你找谁，我是这里的程老师”。听到这句话，我就楞住了....“噢，你好！程老师，我想咨询关于学习软件开发 ”。然后，程老师说自己有点事，先离开了....让我等她一会儿。。。 我很是无聊的打量着客厅里威迅的宣传海报，，，这时，，那位正在吃着棒棒糖的朋友向我打了个招呼，并向我介绍了他自己 .........”哇塞！真的是“自古英雄出少年，他是这里培训SoftWare开发的老师”，，，，，我很是崇拜他，，，，我们聊到了3P技术，，我从中提到了PHP技术，而且说了很多关于PHP的优势，，，也说了很多关于ASP技术的缺点.......他的脸色一下子就铁青了，，，变得非常激动和非常可怕，，，感觉我和他已经发生纠纷了，，，，，他很NB的说了句“PHP已经过时了，早落后了”。听到这句话，我真的很想跑上去揍他一顿也，，我也激动了起来“说PHP过时简直就是笑掉大牙，现在连Yahoo,Google,Baidu等大型著名网站都是采用的PHP程序开发的”。。\r\n\r\n  最后，我转移了话题........我们又聊到了Discuz! 他说了很多关于Discuz!的好,,,,,,,,,,这时的我才发现这个所谓的老师真有问题--------我恍然大悟Discuz!不也有PHP技术开发的吗！\r\n\r\n  这次去了威迅，感觉很是遗憾,,,,,,也在我心中留下了几个疑点: 1,我看到的老师，大多和我年龄相仿........ 2.一个培训SoftWare开发的老师，连PHP技术都不了解,,,实在是另人难以置信..... 3.一个以培训Java,.Net技术人才的学校，居然连自己学校的官方网站都没使用到Jsp,.Net技术（他们学校官方网站是采用ASP技术开发的）...\r\n\r\n', NULL, 2009, '2009-05', 110, 1, ''),
(6, '以前那个空间不能放本站了', NULL, '程序在今天上午就完工了..上传至服务器上,很多的功能都无法实现,空间商说服务器权限不够...建议换linux的空间!  无语中...花了很大的功夫才转移....真是郁闷', NULL, 2009, '2009-05', 90, 1, ''),
(7, 'Flash与后台', NULL, ' 1.LoadVars(XML)\r\n    2.Flash Remoting\r\n    3.Webservice\r\n    4.XMLSocket\r\n\r\n 一.LoadVars篇\r\n  我之所以把XML也放在这里说,是因为XML和LoadVars数据交互的方式大体相同,就是传递时的数据内容有点不一样而已! \r\n  我现在列出在开发过程最常用的"用户密码验证"实例,加以说明!\r\n\r\n// Flash代码;  \r\n//=======================================================; \r\n//定义LoadVars对象; \r\nvar data_lv = new LoadVars();  \r\n//提交的用户名变量和参数值; \r\ndata_lv.username = "kinglong";  \r\n//提交的密码变量和参数值; \r\ndata_lv.password = "king";  \r\n//提交后返回结果; \r\ndata_lv.onLoad = function(success){  \r\n   //success,数据提交是否成功;  \r\n   //这个只是表示数据传输是否成功,并不是用户验证的结果;  \r\n   if(success){  \r\n      trace("数据提交成功!");  \r\n      //result也是用户验证返回的实际结果!  \r\n     if(this.result=="true"){  \r\n         trace("yes");  \r\n      }else{  \r\n         trace("no"); \r\n       } \r\n    }else{ \r\n       trace("数据提交失败!"); \r\n    } \r\n} \r\n//数据提交方法调用; \r\n//第一参数就是提交的页面地址;  \r\n//第二参数就是返回结果对象(只要是LoadVars对象就可以了);  \r\n//第三参数就是提交方式(这个和html中form表单类似,分为"post"和"get"两种方式)  \r\ndata_lv.sendAndLoad("http://www.klstudio.com/save.asp",data_lv,"post"); \r\n//=======================================================;  \r\n//后台服务端页面处理及返回内容;  \r\n//=======================================================; \r\n//接收flash提交过来的变量和接收一个页面提交过来的变量一致的; \r\nRequest("username") 就是flash端username变量传过来的值"kinglong"; \r\nRequest("password") 就是flash端password变量传过来的值"kinglong"; \r\n....数据库验证.....  \r\n//如果用户验证通过 \r\n&result=true \r\n//如果用户验证失败 \r\n&result=false  \r\n//整个页面返回内容就是上面那一行内容,&result对应用着flash端的result变量;  \r\n//如果是多个返回值的话,就是&result=xxx&result1=xxx这种形式就可以了; \r\n如有不清楚的地方,你可查看flash帮助文档! \r\n至于XML的方式,请对应地查看flash帮助文档就可以了!\r\nLoadVars方式的优点:\r\n  1.flash代码实现起来简单,方便. \r\n  2.服务端接收页面和接收一个表单过来的数据一样处理,不需要专门的技术,所有服务端程序都可以实现!\r\n\r\nLoadVars方式的缺点: \r\n1.传递的变量不宜过多.\r\n  2.变量传递的值不能过长.\r\n  3.变量传递值只能使用"字符串"这一种数据类型,数据类型单一. \r\n  4.数据返回值当中不能有"&"字符,因此比较复杂的返回值都需进行URL编码处理.\r\n\r\n　　Flash Remoting这种数据接口是四个之中效率最高的！\r\n  其优点:\r\n    1.支持数据类型比较多(Converting from application server data types to ActionScript);\r\n    2.传递数据量比较大;\r\n    3.运行效率是现有几个当中最高的；\r\n    4.对各种后台的支持也比较好;\r\n    5.其还有调试模块(NetConnection Debugger)\r\n    \r\n  其缺点：\r\n    1.需要flash端装Flash Remoting MX Components(这个是免费提供的);\r\n    2.需要后台服务端装相应版本的Flash Remoting模块才可以使用,MM提供的模块有j2ee和.net两个版本是要收费的,好在网上还有两个开源的(OpenAMF,AMFPHP);\r\n    3.好像Remoting对虚拟主机的支持不太好(可以去google搜索一下，有没有解决方法).\r\n  Flash端代码说明：(我这里用as1.0版本为例，其他版本到MM站查找)\r\n  \r\n//加载Remoting Component代码,这个是必须的; \r\n  #include "NetServices.as" \r\n  //加载Remoting 调试模块代码,这个是可选择的,用NetConnection Debugger查看调试信息; \r\n  #include "NetDebug.as" \r\n  if (inited == null){   \r\n    inited = true;  \r\n    //设置默认网关; \r\n    NetServices.setDefaultGatewayUrl("http://localhost:8500/flashservices/gateway");  \r\n    //建立网关连接; \r\n    gateway_conn = NetServices.createGatewayConnection();  \r\n    //获取一个服务; \r\n    myService = gateway_conn.getService("myservice", this);  \r\n  } \r\n   \r\n  //定义调用方法的函数; \r\n  function getString(name){ \r\n    //调用Remoting的getString方法; \r\n    myService.getString(name); \r\n  }  \r\n  //定义返回结果的函数; \r\n  function getString_Result(result){ \r\n    //result就为返回的结果; \r\n    trace(result); \r\n  } \r\n  //定义返回状态的函数,此为可选的; \r\n  function getString_Status(error){  \r\n    trace("getString_Status"); \r\n    trace(error.code); \r\n    trace(error.description);  \r\n    trace(error.details);  \r\n  } \r\n   \r\n  //调用函数; \r\n  getString("kinglong");\r\n  服务端方法定义(我这里以Coldfusion Component为例,其他版本请参考相应的资料)\r\n\r\n<!---文件名为myservice.cfc---> \r\n<cfcomponent displayname="我的服务">  \r\n <!---定义了getString方法,需将access设为remote,否则Flash remoting无法调用此方法---> \r\n <cffunction name="getString" access="remote" returntype="string">  \r\n  <cfargument name="name" type="string" required="true">  \r\n  <cfset myResult = arguments.name & ",欢迎你!">  \r\n  <cfreturn myResult>  \r\n </cffunction>  \r\n</cfcomponent> \r\n', NULL, 2009, '2009-05', 108, 2, ''),
(8, '夫80后者，初从文，未及义务教育之免费', NULL, '夫80后者，初从文，未及义务教育之免费，不逮高等学校之分配，适值扩招，过五关，斩六将，硕博相继，数年乃成，负债十万。觅生计，十年无休，披星戴月，秉烛达旦，蓄十万。   \r\n   楼市暴涨，不足购房，遂投股市，翌年缩至万余，抑郁成疾。医保曰，不符大病之条例，拒赔。乃倾其所有，入院一周病无果，因欠费被逐院门。友怜之，赊三鹿一包，冲而饮，卒。\r\n   遗舍利子一颗.家人视为珍宝,欲献故宫博物馆,马未都曰:一年此物为奇珍,然今日之时,遍地此物,其孰能为珍乎?\r\n\r\n', NULL, 2009, '2009-05', 79, 1, ''),
(9, 'php无级分类(递归实现)', NULL, '<?php\r\n/** \r\n * @author ：康云川  webSite:www.kangyunchuan.cn Qq:334192009  \r\n */ \r\n\r\n$link = mysql_connect(''localhost'',''root'',''123456'');\r\nmysql_select_db(''menu'',$link);\r\nmysql_query(''set names utf8'');\r\nfunction classfiy($parentid){\r\n $queryString = "select * from tree1 where parentid=$parentid order by id desc";\r\n $rs = mysql_query($queryString);\r\n while (($row = mysql_fetch_array($rs))){\r\n  echo("<ul>");\r\n  echo ("<li>");\r\n  echo $row[''topic''];\r\n  echo ("</li>");\r\n  classfiy($row[''id'']);\r\n  echo("</ul>");\r\n \r\n }\r\n \r\n}\r\nclassfiy(0);\r\n\r\n?>\r\n\r\n      ', NULL, 2009, '2009-05', 111, 2, ''),
(10, '好女不嫁通信郎', NULL, ' \r\n \r\n嫁汉不嫁通信郎，一年四季到处忙，春夏秋东不见面， 回家一包烂衣裳！ \r\n我是一个通信郎，背井离乡在外闯，白天累得腿发软， 晚上仍为资料忙； \r\n思乡痛苦心里藏，四海漂泊习为常，长年累月在外奔， 不能回家陪爹娘， \r\n终身大事无心管，亲戚朋友摧喜糖，心中有苦说不出， 回答只能笑来搪； \r\n工资一点泪成行，怎能买起商品房，压力大得气难喘， 前途在哪路迷茫；  \r\n恋人分别各一方，妹盼大哥早还乡，相思之苦妹难咽， 距离拉得爱情黄； \r\n好女不嫁通信郎，一年四季守空房，家中琐事无暇想， 内心愧对爹和娘， \r\n朦胧月色撒地上，兄弟把酒聚一堂，后悔走上这条路， 同舟共济把帆扬。  \r\n表面风光，内心彷徨； 容颜未老，心已苍桑； \r\n成就难有，郁闷经常； 比骡子累，比蚂蚁忙 \r\n', NULL, 2009, '2009-05', 76, 1, ''),
(11, '基于反向代理的Web缓存加速', NULL, '对于一个日访问量达到百万级的网站来说，速度很快就成为一个瓶颈。除了优化内容发布系统的应用本身外，如果能把不需要实时更新的动态页面的输出结果转化成静态网页来发布，速度上的提升效果将是显著的，因为一个动态页面的速度往往会比静态页面慢2－10倍，而静态网页的内容如果能被缓存在内存里，访问速度甚至会比原有动态网页有2－3个数量级的提高。\r\n\r\n\r\n动态缓存和静态缓存的比较 \r\n基于反向代理加速的站点规划\r\n\r\n基于apache mod_proxy的反向代理加速实现 \r\n基于squid的反向代理加速实现 \r\n面向缓存的页面设计 \r\n后台的内容管理系统的页面输出遵守可缓存的设计，这样就可以把性能问题交给前台的缓存服务器来解决了，从而大大简化CMS系统本身的复杂程度。\r\n\r\n\r\n\r\n静态缓存和动态缓存的比较 \r\n\r\n静态页面的缓存可能有2种形式：其实主要区别就是CMS是否自己负责关联内容的缓存更新管理。\r\n\r\n静态缓存：是在新内容发布的同时就立刻生成相应内容的静态页面，比如：2003年3月22日，管理员通过后台内容管理界面录入一篇文章后，就立刻生成http://www.chedong.com/tech/2003/03/22/001.html这个静态页面，并同步更新相关索引页上的链接。\r\n\r\n\r\n动态缓存：是在新内容发布以后，并不预先生成相应的静态页面，直到对相应内容发出请求时，如果前台缓存服务器找不到相应缓存，就向后台内容管理服务器发出请求，后台系统会生成相应内容的静态页面，用户第一次访问页面时可能会慢一点，但是以后就是直接访问缓存了。\r\n\r\n如果去ZDNet等国外网站会发现他们使用的基于Vignette内容管理系统都有这样的页面名称：0,22342566,300458.html。其实这里的0,22342566,300458就是用逗号分割开的多个参数：\r\n第一次访问找不到页面后，相当于会在服务器端产生一个doc_type= 0&doc_id=22342566&doc_template=300458的查询，\r\n而查询结果会生成的缓存的静态页面： 0,22342566,300458.html\r\n\r\n静态缓存的缺点：\r\n\r\n复杂的触发更新机制：这两种机制在内容管理系统比较简单的时候都是非常适用的。但对于一个关系比较复杂的网站来说，页面之间的逻辑引用关系就成为一个非常非常复杂的问题。最典型的例子就是一条新闻要同时出现在新闻首页和相关的3个新闻专题中，在静态缓存模式中，每发一篇新文章，除了这篇新闻内容本身的页面外，还需要系统通过触发器生成多个新的相关静态页面，这些相关逻辑的触发也往往就会成为内容管理系统中最复杂的部分之一。 \r\n旧内容的批量更新： 通过静态缓存发布的内容，对于以前生成的静态页面的内容很难修改，这样用户访问旧页面时，新的模板根本无法生效。 \r\n在动态缓存模式中，每个动态页面只需要关心，而相关的其他页面能自动更新，从而大大减少了设计相关页面更新触发器的需要。\r\n\r\n\r\n以前做小型应用的时候也用过类似方式：应用首次访问以后将数据库的查询结果在本地存成一个文件，下次请求时先检查本地缓存目录中是否有缓存文件，从而减少对后台数据库的访问。虽然这样做也能承载比较大的负载，但这样的内容管理和缓存管理一体的系统是很难分离的，而且数据完整性也不是很好保存，内容更新时，应用需要把相应内容的的缓存文件删除。但是这样的设计在缓存文件很多的时候往往还需要将缓存目录做一定的分布，否则一个目录下的文件节点超过3000，rm *都会出错。\r\n\r\n\r\n这时候，系统需要再次分工，把复杂的内容管理系统分解成：内容输入和缓存这2个相对简单的系统实现。\r\n\r\n\r\n后台：内容管理系统，专心的将内容发布做好，比如：复杂的工作流管理，复杂的模板规则等…… \r\n前台：页面的缓存管理则可以使用缓存系统实现\r\n\r\n\r\n所以分工后：内容管理和缓存管理2者，无论哪一方面可选的余地都是非常大的：软件（比如前台80端口使用SQUID对后台8080的内容发布管理系统进行缓存），缓存硬件，甚至交给akamai这样的专业服务商。\r\n\r\n\r\n\r\n\r\n面向缓存的站点规划\r\n\r\n一个利用SQUID对多个站点进行做WEB加速http acceleration方案：\r\n\r\n原先一个站点的规划可能是这样的：\r\n200.200.200.207 www.chedong.com \r\n200.200.200.208 news.chedong.com \r\n200.200.200.209 bbs.chedong.com \r\n200.200.200.205 images.chedong.com\r\n\r\n面向缓存服务器的设计中：所有站点都通过外部DNS指向到同一个IP：200.200.200.200/201这2台缓存服务器上（使用2台是为了冗余备份） \r\n工作原理：\r\n外部请求过来时，设置缓存根据配置文件进行转向解析。这样，服务器请求就可以转发到我们指定的内部地址上。\r\n\r\n在处理多虚拟主机转向方面：mod_proxy比squid要简单一些：可以把不同服务转向后后台多个IP的不同端口上。\r\n而squid只能通过禁用DNS解析，然后根据本地的/etc/hosts文件根据请求的域名进行地址转发，后台多个服务器必须使用相同的端口。\r\n\r\n使用反向代理加速，我们不仅可以得到性能上的提升，而且还能获得额外的安全性和配置的灵活度：\r\n\r\n配置灵活性提高：可以自己在内部服务器上控制后台服务器的DNS解析，当需要在服务器之间做迁移调整时，就不用大量修改外部DNS配置了，只需要修改内部DNS实现服务的调整。 \r\n数据安全性增加：所有后台服务器可以很方便的被保护在防火墙内。 \r\n后台应用设计复杂程度降低：原先为了效率常常需要建立专门的图片服务器images.chedong.com和负载比较高的应用服务器 bbs.chedong.com分离，在反向代理加速模式中，所有前台请求都通过缓存服务器：实际上就都是静态页面，这样，应用设计时就不用考虑图片和应用本身分离了，也大大降低了后台内容发布系统设计的复杂程度，由于数据和应用都存放在一起，也方便了文件系统的维护和管理。\r\n\r\n\r\n基于Apache mod_proxy的反向代理缓存加速实现\r\n\r\nApache包含了mod_proxy模块，可以用来实现代理服务器，针对后台服务器的反向加速\r\n\r\n安装apache 1.3.x 编译时：\r\n--enable-shared=max --enable-module=most\r\n\r\n注：Apache 2.x中mod_proxy已经被分离成mod_proxy和mod_cache：同时mod_cache有基于文件和基于内存的不同实现\r\n\r\n创建/var/www/proxy，设置apache服务所用户可写\r\n\r\nmod_proxy配置样例：反相代理缓存＋缓存\r\n架设前台的www.example.com反向代理后台的www.backend.com的8080端口服务。\r\n修改：httpd.conf\r\n<VirtualHost *>\r\nServerName www.example.com\r\nServerAdmin admin@example.com\r\n\r\n# reverse proxy setting\r\nProxyPass / http://www.backend.com:8080/\r\nProxyPassReverse / http://www.backend.com:8080/\r\n\r\n# cache dir root\r\nCacheRoot "/var/www/proxy"\r\n# max cache storage\r\nCacheSize 50000000\r\n# hour: every 4 hour \r\nCacheGcInterval 4\r\n# max page expire time: hour\r\nCacheMaxExpire 240\r\n# Expire time = (now - last_modified) * CacheLastModifiedFactor \r\nCacheLastModifiedFactor 0.1\r\n# defalt expire tag: hour\r\nCacheDefaultExpire 1\r\n# force complete after precent of content retrived: 60-90%\r\nCacheForceCompletion 80\r\n\r\nCustomLog /usr/local/apache/logs/dev_access_log combined\r\n</VirtualHost>\r\n\r\n\r\n\r\n基于Squid的反向代理加速实现\r\n\r\nSquid是一个更专用的代理服务器，性能和效率会比Apache的mod_proxy高很多。\r\n如果需要combined格式日志补丁：\r\nhttp://www.squid-cache.org/mail- ... ev/200301/0164.html\r\n\r\nsquid的编译：\r\n./configure --enable-useragent-log --enable-referer-log --enable-default-err-language=Simplify_Chinese --enable-err-languages="Simplify_Chinese English" --disable-internal-dns \r\nmake\r\n#make install\r\n#cd /usr/local/squid\r\nmake dir cache\r\nchown squid.squid *\r\nvi /usr/local/squid/etc/squid.conf\r\n\r\n在/etc/hosts中：加入内部的DNS解析，比如：\r\n192.168.0.4 www.chedong.com \r\n192.168.0.4 news.chedong.com\r\n192.168.0.3 bbs.chedong.com\r\n\r\n---------------------cut here----------------------------------\r\n# visible name\r\nvisible_hostname cache.example.com\r\n\r\n# cache config: space use 1G and memory use 256M\r\ncache_dir ufs /usr/local/squid/cache 1024 16 256 \r\ncache_mem 256 MB\r\ncache_effective_user squid\r\ncache_effective_group squid\r\n\r\n\r\nhttp_port 80\r\nhttpd_accel_host virtual\r\nhttpd_accel_single_host off\r\nhttpd_accel_port 80\r\nhttpd_accel_uses_host_header on\r\nhttpd_accel_with_proxy on\r\n\r\n# accelerater my domain only\r\nacl acceleratedHostA dstdomain .example1.com\r\nacl acceleratedHostB dstdomain .example2.com\r\nacl acceleratedHostC dstdomain .example3.com\r\n# accelerater http protocol on port 80\r\nacl acceleratedProtocol protocol HTTP\r\nacl acceleratedPort port 80\r\n# access arc\r\nacl all src 0.0.0.0/0.0.0.0\r\n\r\n# Allow requests when they are to the accelerated machine AND to the\r\n# right port with right protocol\r\nhttp_access allow acceleratedProtocol acceleratedPort acceleratedHostA\r\nhttp_access allow acceleratedProtocol acceleratedPort acceleratedHostB\r\nhttp_access allow acceleratedProtocol acceleratedPort acceleratedHostC\r\n\r\n# logging\r\nemulate_httpd_log on\r\ncache_store_log none\r\n\r\n# manager\r\nacl manager proto cache_object\r\nhttp_access allow manager all\r\ncachemgr_passwd pass all\r\n\r\n\r\n----------------------cut here---------------------------------\r\n\r\n创建缓存目录：\r\n/usr/local/squid/sbin/squid -z\r\n\r\n启动squid\r\n/usr/local/squid/sbin/squid\r\n\r\n停止squid：\r\n/usr/local/squid/sbin/squid -k shutdown\r\n\r\n启用新配置：\r\n/usr/local/squid/sbin/squid -k reconfig\r\n\r\n通过crontab每天0点截断/轮循日志：\r\n0 0 * * * (/usr/local/squid/sbin/squid -k rotate) \r\n\r\n\r\n\r\n\r\n可缓存的动态页面设计\r\n\r\n什么样的页面能够比较好的被缓存服务器缓存呢？如果返回内容的HTTP HEADER中有"Last-Modified"和"Expires"相关声明，比如：\r\nLast-Modified: Wed, 14 May 2003 13:06:17 GMT\r\nExpires: Fri, 16 Jun 2003 13:06:17 GMT\r\n前端缓存服务器在期间会将生成的页面缓存在本地：硬盘或者内存中，直至上述页面过期。\r\n\r\n因此，一个可缓存的页面： \r\n页面必须包含Last-Modified: 标记\r\n一般纯静态页面本身都会有Last-Modified信息，动态页面需要通过函数强制加上，比如在PHP中：\r\n// always modified now\r\nheader("Last-Modified: " . gmdate("D, d M Y H:i:s") . " GMT");\r\n\r\n\r\n必须有Expires或Cache-Control: max-age标记设置页面的过期时间：\r\n对于静态页面，通过apache的mod_expires根据页面的MIME类型设置缓存周期：比如图片缺省是1个月，HTML页面缺省是2天等。\r\n<IfModule mod_expires.c> \r\nExpiresActive on\r\nExpiresByType image/gif "access plus 1 month"\r\nExpiresByType text/css "now plus 2 day"\r\nExpiresDefault "now plus 1 day"\r\n</IfModule>\r\n\r\n对于动态页面，则可以直接通过写入HTTP返回的头信息，比如对于新闻首页index.php可以是20分钟，而对于具体的一条新闻页面可能是1天后过期。比如：在php中加入了1个月后过期：\r\n// Expires one month later\r\nheader("Expires: " .gmdate ("D, d M Y H:i:s", time() 3600 * 24 * 30). " GMT");\r\n\r\n\r\n如果服务器端有基于HTTP的认证，必须有Cache-Control: public标记，允许前台 \r\nASP应用的缓存改造 首先在公用的包含文件中(比如include.asp)加入以下公用函数： <%\r\n'' Set Expires Header in minutes\r\nFunction SetExpiresHeader(ByVal minutes) \r\n'' set Page Last-Modified Header:\r\n'' Converts date (19991022 11:08:38) to http form (Fri, 22 Oct 1999 12:08:38 GMT)\r\nResponse.AddHeader "Last-Modified", DateToHTTPDate(Now())\r\n\r\n'' The Page Expires in Minutes\r\nResponse.Expires = minutes\r\n\r\n'' Set cache control to externel applications\r\nResponse.CacheControl = "public"\r\nEnd Function \r\n\r\n'' Converts date (19991022 11:08:38) to http form (Fri, 22 Oct 1999 12:08:38 GMT)\r\nFunction DateToHTTPDate(ByVal OleDATE)\r\nConst GMTdiff = #08:00:00#\r\nOleDATE = OleDATE - GMTdiff\r\nDateToHTTPDate = engWeekDayName(OleDATE) & _\r\n", " & Right("0" & Day(OleDATE),2) & " " & engMonthName(OleDATE) & _\r\n" " & Year(OleDATE) & " " & Right("0" & Hour(OleDATE),2) & _\r\n":" & Right("0" & Minute(OleDATE),2) & ":" & Right("0" & Second(OleDATE),2) & " GMT"\r\nEnd Function \r\n\r\nFunction engWeekDayName(dt)\r\nDim Out\r\nSelect Case WeekDay(dt,1)\r\nCase 1:Out="Sun"\r\nCase 2:Out="Mon"\r\nCase 3:Out="Tue"\r\nCase 4:Out="Wed"\r\nCase 5:Out="Thu"\r\nCase 6:Out="Fri"\r\nCase 7:Out="Sat"\r\nEnd Select\r\nengWeekDayName = Out\r\nEnd Function\r\n\r\nFunction engMonthName(dt)\r\nDim Out\r\nSelect Case Month(dt)\r\nCase 1:Out="Jan"\r\nCase 2:Out="Feb"\r\nCase 3:Out="Mar"\r\nCase 4:Out="Apr"\r\nCase 5:Out="May"\r\nCase 6:Out="Jun"\r\nCase 7:Out="Jul"\r\nCase 8:Out="Aug"\r\nCase 9:Out="Sep"\r\nCase 10:Out="Oct"\r\nCase 11:Out="Nov"\r\nCase 12:Out="Dec"\r\nEnd Select\r\nengMonthName = Out\r\nEnd Function\r\n%>\r\n然后在具体的页面中，比如index.asp和news.asp的“最上面”加入以下代码：HTTP Header\r\n\r\n<!--#include file="../include.asp"-->\r\n<%\r\n''页面将被设置20分钟后过期\r\nSetExpiresHeader(20)\r\n%>\r\n\r\n\r\n如何检查目前站点页面的可缓存性（Cacheablility）呢？可以参考以下2个站点上的工具：\r\nhttp://www.ircache.net/cgi-bin/cacheability.py\r\n\r\n\r\n附：SQUID性能测试试验\r\n\r\nphpMan.php是一个基于php的man page server，每个man page需要调用后台的man命令和很多页面格式化工具，系统负载比较高，提供了Cache Friendly的URL，以下是针对同样的页面的性能测试资料：\r\n测试环境：Redhat 8 on Cyrix 266 / 192M Mem \r\n测试程序：使用apache的ab(apache benchmark)：\r\n测试条件：请求50次，并发50个连接\r\n测试项目：直接通过apache 1.3 (80端口) vs squid 2.5(8000端口：加速80端口) \r\n\r\n测试1：无CACHE的80端口动态输出：\r\nab -n 100 -c 10 http://www.chedong.com:81/phpMan.php/man/kill/1\r\nThis is ApacheBench, Version 1.3d <$Revision: 1.1 $> apache-1.3\r\nCopyright (c) 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/\r\nCopyright (c) 1998-2001 The Apache Group, http://www.apache.org/\r\n\r\nBenchmarking localhost (be patient).....done\r\nServer Software: Apache/1.3.23 \r\nServer Hostname: localhost\r\nServer Port: 80\r\n\r\nDocument Path: /phpMan.php/man/kill/1\r\nDocument Length: 4655 bytes\r\n\r\nConcurrency Level: 5\r\nTime taken for tests: 63.164 seconds\r\nComplete requests: 50\r\nFailed requests: 0\r\nBroken pipe errors: 0\r\nTotal transferred: 245900 bytes\r\nHTML transferred: 232750 bytes\r\nRequests per second: 0.79 [#/sec] (mean)\r\nTime per request: 6316.40 [ms] (mean)\r\nTime per request: 1263.28 [ms] (mean, across all concurrent requests)\r\nTransfer rate: 3.89 [Kbytes/sec] received\r\n\r\nConnnection Times (ms)\r\nmin mean[ /-sd] median max\r\nConnect: 0 29 106.1 0 553\r\nProcessing: 2942 6016 1845.4 6227 10796\r\nWaiting: 2941 5999 1850.7 6226 10795\r\nTotal: 2942 6045 1825.9 6227 10796\r\n\r\nPercentage of the requests served within a certain time (ms)\r\n50% 6227\r\n66% 7069\r\n75% 7190\r\n80% 7474\r\n90% 8195\r\n95% 8898\r\n98% 9721\r\n99% 10796\r\n100% 10796 (last request)\r\n\r\n测试2：SQUID缓存输出\r\n/home/apache/bin/ab -n50 -c5 "http://localhost:8000/phpMan.php/man/kill/1"\r\nThis is ApacheBench, Version 1.3d <$Revision: 1.1 $> apache-1.3\r\nCopyright (c) 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/\r\nCopyright (c) 1998-2001 The Apache Group, http://www.apache.org/\r\n\r\nBenchmarking localhost (be patient).....done\r\nServer Software: Apache/1.3.23 \r\nServer Hostname: localhost\r\nServer Port: 8000\r\n\r\nDocument Path: /phpMan.php/man/kill/1\r\nDocument Length: 4655 bytes\r\n\r\nConcurrency Level: 5\r\nTime taken for tests: 4.265 seconds\r\nComplete requests: 50\r\nFailed requests: 0\r\nBroken pipe errors: 0\r\nTotal transferred: 248043 bytes\r\nHTML transferred: 232750 bytes\r\nRequests per second: 11.72 [#/sec] (mean)\r\nTime per request: 426.50 [ms] (mean)\r\nTime per request: 85.30 [ms] (mean, across all concurrent requests)\r\nTransfer rate: 58.16 [Kbytes/sec] received\r\n\r\nConnnection Times (ms)\r\nmin mean[ /-sd] median max\r\nConnect: 0 1 9.5 0 68\r\nProcessing: 7 83 537.4 7 3808\r\nWaiting: 5 81 529.1 6 3748\r\nTotal: 7 84 547.0 7 3876\r\n\r\nPercentage of the requests served within a certain time (ms)\r\n50% 7\r\n66% 7\r\n75% 7\r\n80% 7\r\n90% 7\r\n95% 7\r\n98% 8\r\n99% 3876\r\n100% 3876 (last request)\r\n\r\n结论：No Cache / Cache = 6045 / 84 = 70\r\n结论：对于可能被缓存请求的页面，服务器速度可以有2个数量级的提高，因为SQUID是把缓存页面放在内存里的（因此几乎没有硬盘I/O操作）。\r\n\r\n小节：\r\n\r\n大访问量的网站应尽可能将动态网页生成静态页面作为缓存发布，甚至对于搜索引擎这样的动态应用来说，缓存机制也是非常非常重要的。 \r\n在动态页面中利用HTTP Header定义缓存更新策略。 \r\n利用缓存服务器获得额外的配置和安全性 \r\n日志非常重要：SQUID日志缺省不支持COMBINED日志，但对于需要REFERER日志的这个补丁非常重要：http://www.squid-cache.org/mail- ... ev/200301/0164.html\r\n\r\n参考资料：\r\n\r\n\r\nHTTP代理缓存\r\nhttp://vancouver-webpages.com/proxy.html\r\n\r\n可缓存的页面设计\r\nhttp://linux.oreillynet.com/pub/ ... /cachefriendly.html\r\n\r\n\r\n相关RFC文档：\r\n\r\n\r\nRFC 2616: \r\nsection 13 (Caching) \r\nsection 14.9 (Cache-Control header) \r\nsection 14.21 (Expires header) \r\nsection 14.32 (Pragma: no-cache) is important if you are interacting with HTTP/1.0 caches \r\nsection 14.29 (Last-Modified) is the most common validation method \r\nsection 3.11 (Entity Tags) covers the extra validation method \r\n\r\n可缓存性检查：\r\nhttp://www.web-caching.com/cacheability.html\r\n\r\n\r\n缓存设计要素：\r\nhttp://vancouver-webpages.com/CacheNow/detail.html\r\n\r\nZOPE上的几篇使用APACHE MOD_PROXY MOD_GZIP加速的文档\r\nhttp://www.zope.org/Members/anser/apache_zserver/\r\nhttp://www.zope.org/Members/softsign/ZServer_and_Apache_mod_gzip\r\nhttp://www.zope.org/Members/rbeer/caching \r\n \r\n\r\n如果您对本帖内容有任何质疑，或者您在阅读/下载 本帖内容时遇到困难 请在站务管理版里发帖提出。点这里进入反馈。', NULL, 2009, '2009-05', 101, 2, ''),
(12, '简述在FLASH读取XML的数据(转)', NULL, '在FLASH中,使用XML接口获取外部数据是最有效的方法之一.(通常还有WebSerivce接口和LoadVars方法)\r\n下面来看一个简单的XML文档(city.xml)\r\n这个文档描述的是城市地区的信息\r\n<?xml version="1.0" encoding="gb2312"?>\r\n<root>\r\n<city pnum="500000" code="021" name="上海" />\r\n<city pnum="600000" code="010" name="北京" />\r\n<city pnum="1000000" code="057" name="浙江" />\r\n</root>\r\n简单介绍一下XML文档格式的书写规范: \r\n第一行:\r\n这是一个XML文档的描述信息.其中定义了该XML文档的一些基本属性,包括:版本信息(version),使用的字符编码(encoding).\r\n\r\n第二行:\r\n(虽然在FLASH中我们用不到节点的任何属性,但是合式的XML文档必须要求一个根节点)\r\n在XML文档中,这是一个根节点.XML规定所有标签必须有闭合.所以,在最后一行使用对应的标签来闭合.同样,单行的XML节点也需要闭合,例如:其中"/"符号就表示单行的节点闭合."name","code","pnum"是节点的属性,写法就是:属性名="属性值" 这样的名/值对.至于节点名和属性名都是可以自定义的,也就是说可以任意命名.但是还是建议要尽量规范\r\n\r\n""节点是""的子节点,相应的""叫做""的父节点\r\n\r\n在这个XML文档中有3个子节点,我们数据就存储在这3个子节点的属性中,分别有:城市名称(name),城市代码(code),城市人口数目(pnum)\r\n我们要做的最终目的就是在FLASH中获取这些节点的属性值\r\n\r\n下面来看一个FLASH调用XML的实例\r\n\r\nSystem.useCodepage = true;\r\nvar doc:XML = new XML();\r\ndoc.load("city.xml");\r\ndoc.ignoreWhite = true;\r\ndoc.onLoad = function(success){\r\nif(success){\r\n   trace(doc.childNodes[0].childNodes[0].attributes.name);\r\n   trace(doc.childNodes[0].childNodes[1].attributes.name);\r\n   trace(doc.childNodes[0].childNodes[2].attributes.name);\r\n}\r\n}\r\n分析:\r\n\r\nSystem.useCodepage = true;\r\n如果在XML文档中使用了中文编码,例如"gb2312".那么在FLASH中必须启用使用页面编码的指令.\r\n\r\nvar doc:XML = new XML();\r\n建立一个XML实例.赋予"doc"这个对象.\r\n\r\ndoc.load("city.xml");\r\n"load()"-XML对象的一个方法:加载XML数据到"doc"这个对象当中.\r\n提供XML数据的方式并不是限制于.xml的文件,任何符合XML书写格式的文档都可以,通常,我们是使用程序来提供XML数据的,例如"http://www.51ww.com/city.aspx?country=china"\r\n\r\ndoc.ignoreWhite = true;\r\n"ignoreWhite"-XML对象的一个属性:指定XML文档忽略空白,因为在XML中一个换行在FLASH中会被视为一个节点\r\n\r\ndoc.onLoad = function(success){}\r\n"onLoad"-XML对象的一个方法.将会返回一个布尔值"true或false".用来判断XML是否被成功加载.如果加载成功则会返回"true",反之则返回"false"\r\n此处为该方法使用了一个函数,其参数"success"用来贮存上述的布尔值\r\n\r\nif(success){}\r\n一个判断语句:如果加载成功(即success的值为"true"),则触发括号内的动作\r\n\r\ntrace(doc.childNodes[0].childNodes[0].attributes.name);\r\n输出doc(此时"city.xml"中的数据已经包含到doc这个XML对象当中)这个XML对象的第一个节点下的第一个子节点的"name"属性值\r\nchildNodes-XML对象的一个属性,它的值的类型是数组型.XML的一个节点可以在FLASH中通过这个属性来表示其包含的数据.\r\n由于FLASH中数组的长度计算是由"0"开始,所以我们XML文档中的第一个节点就存储在数组的"0"位置.而不是"1"\r\n所以,我们取出XML文档的第一个节点-"",就应该表示成这样"childNodes[0]"\r\n同样,我们取出XML对象根节点("")下的第一个子节点(""),就表示成doc.childNodes[0].childNodes[0]\r\n相应的,取出第二个子节点:doc.childNodes[0].childNodes[1]\r\n第三个子节点:doc.childNodes[0].childNodes[2]\r\n(这一步中,需要涉及到FLASH中数组对象的使用原理)\r\n\r\n在FLASH与XML的数据交互中,可能数据的表现是最难的一步.\r\n针对上面数据表现方式,我们可以充分利用数组的便利性来做\r\n假如已经获得一个XML对象"doc"\r\n\r\n\r\n首先,我们将这个XML中使用到的数据转换为一个数组对象来表示\r\nvar myList:Array = doc.childNodes[0].childNodes;//直接将XML文档根节点下的的所有子节点放到一个数组中\r\ntrace(myList[0].attributes.name+","+myList[0].attributes.code+","+myList[0].attributes.pnum);//输出第一个"city"节点所有的属性值\r\ntrace(myList[1].attributes.name+","+myList[1].attributes.code+","+myList[1].attributes.pnum);//输出第二个"city"节点所有的属性值\r\ntrace(myList[2].attributes.name+","+myList[2].attributes.code+","+myList[2].attributes.pnum);//输出第三个"city"节点所有的属性值\r\n\r\n输出结果:\r\n\r\n上海,021,500000\r\n北京,010,600000\r\n浙江,057,1000000\r\n\r\n/*以上完整的代码为*/\r\nSystem.useCodepage = true;\r\nvar doc:XML = new XML();\r\ndoc.load("city.xml");\r\ndoc.ignoreWhite = true;\r\ndoc.onLoad = function(success){\r\nif(success){\r\n   var myList:Array = doc.childNodes[0].childNodes;\r\n   trace(myList[0].attributes.name+","+myList[0].attributes.code+","+myList[0].attributes.pnum);\r\n   trace(myList[1].attributes.name+","+myList[1].attributes.code+","+myList[1].attributes.pnum);\r\n   trace(myList[2].attributes.name+","+myList[2].attributes.code+","+myList[2].attributes.pnum);\r\n}\r\n}\r\n/*代码结束*/\r\n为了在FLASH中其他的位置都能够访问到我们所需要的XML数据,我们可以将myList数组对象放置到上下文的任意位置\r\n例如:\r\n\r\nSystem.useCodepage = true;\r\nvar doc:XML = new XML();\r\nvar myList:Array = new Array();//预先建立一个数组对象用来放置XML节点数据,以便FLASH其他位置的代码都能够访问\r\ndoc.load("city.xml");\r\ndoc.ignoreWhite = true;\r\ndoc.onLoad = function(success){\r\nif(success){\r\n   myList = doc.childNodes[0].childNodes;//当XML加载成功后对上文的myList数组对象进行赋值.\r\n}\r\n}\r\n\r\n\r\n//使用一个按钮动作来获取数组对象中的一个CITY节点信息\r\nbtName.onPress = function(){\r\ntrace(_root.myList[0].attributes.name+","+_root.myList[0].attributes.code+","+_root.myList[0].attributes.pnum);\r\n}\r\n这样的写法当然还不满足我们一些复杂的需求,而且代码过冗长.\r\n使用函数来返回我们需要的信息,应该是最正确的做法,我们来实现它\r\n按下按钮时,向函数递交一个城市代码,返回城市名和人口信息\r\n\r\nSystem.useCodepage = true;\r\nvar doc:XML = new XML();\r\nvar myList:Array = new Array();//预先建立一个数组对象用来放置XML节点数据,以便FLASH其他位置的代码都能够访问\r\ndoc.load("city.xml");\r\ndoc.ignoreWhite = true;\r\ndoc.onLoad = function(success){\r\nif(success){\r\n   myList = doc.childNodes[0].childNodes;//当XML加载成功后对上文的myList数组对象进行赋值.\r\n}\r\n}\r\n\r\n//函数开始\r\nfunction getCityInfo(code){   //构建一个函数的写法是:function 函数名(参数){//脚本代码}\r\nvar cityName:String;//建立一个字符窜变量来存储城市名\r\nvar pepCount:String;//建立一个字符窜变量来存储居民数量\r\nfor(var i=0;i   if(code eq myList[i].attributes.code){\r\n    cityName = myList[i].attributes.name;\r\n    pepCount = myList[i].attributes.pnum;\r\n   }\r\n}\r\nreturn "城市:"+cityName+",人口:"+pepCount //返回一段文字表达信息\r\n}\r\n\r\n//函数结束\r\n\r\n     /*按钮的动作*/\r\nbtName.onPress = function(){\r\ntrace(getCityInfo("010"));//输出函数的返回结果,(在函数的参数中提交城市代码-"010")\r\n}\r\n \r\n', NULL, 2009, '2009-05', 121, 2, ''),
(14, '合理使用通配符', NULL, '      在进行模糊查找时，经常会使用like关键字进行匹配查找，虽然使用like进行模糊查找非常方便，但是这也会很大程度地降低查询的效率。例如，从student表中查询所有姓名中包含“明”的学生，使用下面的查询语句是合理的：\r\n\r\nselect * from student where name like ''%明%''\r\n\r\n但是如果要查找所有姓“刘”的学生（假设学生名字中不含“刘”字），采用以下两种方法都能够实现。\r\n\r\n方法1：\r\n\r\nselect * from student where name like  ''%刘%''\r\n\r\n方法2：\r\n\r\nselect * from student where name like  ''刘%''\r\n\r\n虽然方法2只比方法1少了一个“%”符号，但查询效率却有明显的提高。\r\n', NULL, 2009, '2009-05', 111, 2, ''),
(15, 'php数字分页类--带偏移量', NULL, '      <?php\r\n/**************************\r\n * @author :康云川 webSite:www.kangyunchuan.cn QQ:334192009 E-mail:zonko@163.com\r\n * @name :数字分页类......\r\n * @copyright :©2009 康云川\r\n * 日期:2009-5-4\r\n */\r\nclass Page{\r\n public $page;//偏移量\r\n public $total;//记录总数\r\n public $page_size;//每页显示几条记录\r\n public $get;//GET\r\n private $start;//for循环的初始\r\n private $total_page;//总页数\r\npublic function action(){\r\n $total_page = ceil($this->total/$this->page_size);\r\n if(empty($this->start)) $start = 1;\r\n $this->start = $this->get - $this->page;\r\n if($this->start < 1) $this->start = 1;\r\n if($this->get >= $this->page) $this->page = $this->get + $this->page;\r\n $this->page;\r\n if($this->page > $total_page) $this->page = $total_page;\r\n return $this->total_page = $total_page;\r\n}\r\npublic function write(){\r\n Page::action();\r\n $total_page = $this->total_page;\r\n echo "<a href=''?page=1''>First</a>&nbsp";\r\n for($i=$this->start;$i<=$this->page;$i++){\r\n  if($i == $this->get){\r\n   echo "$i&nbsp";\r\n  }\r\n  else{\r\n   echo "<a href=''?page=$i''>$i</a>&nbsp";\r\n  }\r\n }\r\n \r\n echo "<a href=''?page=$total_page''>Last</a>&nbsp";\r\n }\r\n}\r\n?>\r\n\r\n', NULL, 2009, '2009-05', 160, 2, ''),
(16, '旧版网站不再更新', NULL, '  旧版网站不再更新,请访问http://www.phpcq.com\r\n\r\n      \r\n      \r\n      ', NULL, 2009, '2009-05', 84, 1, '');
INSERT INTO `article` (`id`, `caption`, `shortContent`, `content`, `tags`, `times`, `date`, `degree`, `cate_id`, `password`) VALUES
(17, 'Linux下安装apache,php,mysql', NULL, '      我先安装了MySQL,这个安装不需要多讲，但是要注意的是，安装完MySQL后mysql.user表内应该有2条数据。2条数据的user是root，但host因该分别我locahost和%。很多人本机可以登录但是远程连接不上就是因为没有host=%这条记录。 \r\n      安装完了MySQL接下来就是apache2，我下载的是2.0.54，使用如下命令配置：\r\n　　./configure --prefix=/usr/local/apache2 --enable-so --enable-rewrite\r\n\r\n大家注意--prefix=/usr/local/apache2 有的文档上写的是--prefix=/usr/local/apache，这个是apache1的配置，这里需要加上2， --enable-so --enable-rewrite会让apache加载rewrite.so，如果你需要别的.so，请自行加载。\r\n\r\n      接下来就是php，我使用的是5.0.4，配置命令如下：\r\n\r\n./configure --prefix=/usr/local/php5 --with-apxs2=/usr/local/apache2/bin/apxs --with-config-file-path=/usr/local/lib --enable-track-vars --with-xml --enable-pdo --with-mysql --with-pdo-mysql=/usr/bin/mysql --with-mysql-sock=/tmp/mysql.sock\r\n这里--enable-pdo是指使用PDO连接MySQL，--with-pdo-mysql=/usr/bin/mysql指定mysql的路径。--with-mysql-sock=/tmp/mysql.sock指定mysql.sock的路径。如果大家找不到路径请用 find / -name xxxx来查找。\r\n\r\n      最后就是安装pdo，配置命令如下：\r\n\r\n./configure --with-php-config=/usr/local/php/bin/php-config --with-pdo-mysql=/usr/local/mysql\r\n\r\n\r\n以上的安装完成后还需要修改一下配置文件\r\n\r\nhttpd.conf\r\n\r\n找到 AddType application/x-gzip .gz .tgz 在其下添加如下内容\r\nAddType application/x-httpd-php .php\r\nAddType application/x-httpd-php-source .phps\r\n\r\n去掉LoadModule xxxxx moudule/xxxxx.so前面的#来开启所需要的.so文件。\r\n\r\n \r\n\r\n写在后面\r\n\r\n有时候我们因为不熟悉，多次make install了php，这样就会在http.conf内就会有多个\r\n\r\nLoadModule php5_module modules/libphp5.so\r\n\r\n所以安装完后请检查该文件，是否只有一个LoadModule php5_module modules/libphp5.so\r\n\r\n\r\n如果我们的配置命令写错了，已经执行了make,那么请先执行make clean再执行./configure后再make。否则make出来的还是老的。\r\n\r\n-----------------------------------------------------------------------------------------------------------------------------------\r\n\r\n一删除apache+php+mysql：\r\n\r\n    判断是不是rpm安装如：rpm -q php 返回php版本，则是rpm安装，用 rpm -e php --nodeps 即可彻底删除系统自带的php    如果不返回PHP版本则是二进制安装，直接删除目录就可以！同理apache mysql也一样！    二安装apache    下载httpd-2.2.4.tar.gz    tar xzvf httpd-2.2.4.tar.gz\r\n    cd httpd-2.2.4\r\n    ./configure --prefix=/usr/local/apache2 --enable-so --enable-mods-shared=all --enable-cgi --enable-rewrite --enable-deflate --with-mpm=worker\r\n    make\r\n    make install    三 安装mysql    # chmod 755 mysql-5.0.45-linux-i686-glibc23.tar.gz //设置mysql-5.0.45-linux-i686-glibc23.tar.gz属性为755\r\n    # tar xzvf mysql-5.0.45-linux-i686-glibc23.tar.gz //解压\r\n    # cp -r mysql-5.0.45-linux-i686-glibc23 /usr/local //\r\n    # cd /usr/local/mysql   //在/usr/local下\r\n    # mv mysql-5.0.45-linux-i686-glibc23 mysql //把mysql-5.0.45-linux-i686-glibc23命名为mysql\r\n    # cd mysql //\r\n    # groupadd mysql // 建立mysql组\r\n    # useradd mysql -g mysql //建立mysql用户并且加入到mysql组中\r\n    # cp /usr/local/mysql/support-files/my-medium.cnf /etc/my.cnf\r\n    在 support-files目录下有4个模版文件，我们选择其中一个座位Mysql的配置文件，覆盖/etc/my.cnf(系统默认的配置，其中设置了性能参数和Mysql的一些路径参数)\r\n    # cd /usr/local/mysql 进入mysql目录\r\n    # ./scripts/mysql_install_db --user=mysql //初试化表并且规定用mysql用户来访问。初始化表以后就开始给mysql和root用户设定访问权限\r\n    # chown -R root //设定root能访问/usr/local/mysql\r\n    # chown -R mysql data //设定mysql用户能访问/usr/local/mysql/data 里面存的是mysql的数据库文件.这个目录是在/etc/my.cnf中有配置，在mysql_install_db时产生。\r\n    # chown -R mysql data/ //设定mysql用户能访问/usr/local/mysql/data/mysql下的所有文件\r\n    # chgrp -R mysql //设定mysql组能够访问/usr/local/mysql\r\n    # /usr/local/mysql/bin/mysqld_safe --user=mysql & 运行mysql 如果没有问题的话,应该会出现类似这样的提示:\r\n    [1] 42264\r\n    # Starting mysqld daemon with databases from /usr/local/mysql/var\r\n    如果出现 mysql ended这样的语句，表示Mysql没有正常启动，你可以到log中查找问题，Log文件的通常在/etc/my.cnf中配置。大多数问题是权限设置 不正确引起的。\r\n    # /usr/local/mysql/bin/mysqladmin -u root password yourpassword //默认安装密码为空，为了安全你必须马上修改.\r\n    # cp support-files/mysql.server /etc/rc.d/init.d/mysqld 设置使mysql每次启动都能自动运行\r\n    # chmod 700 /etc/init.d/mysqld\r\n    # chkconfig --add mysqld\r\n    # chkconfig --level 345 mysqld on\r\n    # service mysqld start //启动mysqld服务\r\n    # netstat -atln //查看3306端口是否打开。要注意在防火墙中开放该端口。    四安装php    1. 安装zlib (安装libpng和gd前需要先安装zlib)，\r\n    # tar zxvf zlib-1.2.3.tar.gz\r\n    # cd zlib-1.2.3\r\n    # ./configure\r\n    # make;make install    2. 安装libpng，\r\n    # tar zxvf libpng-1.2.12.tar.gz\r\n    # cd libpng-1.2.12\r\n    # ./configure\r\n    # make;make install    3. 安装freetype，\r\n    # tar zxvf freetype-2.2.1.tar.gz\r\n    # cd freetype-2.1.10\r\n    # ./configure --prefix=/usr/local/freetype\r\n    # make;make install    4. 安装jpeg，\r\n    # tar zxvf jpegsrc.v6b.tar.gz\r\n    # cd jpeg-6b\r\n    # mkdir /usr/local/jpeg\r\n    # mkdir /usr/local/jpeg/bin\r\n    # mkdir /usr/local/jpeg/lib\r\n    # mkdir /usr/local/jpeg/include\r\n    # mkdir /usr/local/jpeg/man\r\n    # mkdir /usr/local/jpeg/man/man1\r\n    # ./configure --prefix=/usr/local/jpeg --enable-shared --enable-static\r\n    # make;make install    5. 安装gd，\r\n    # tar zxvf gd-2.0.35.tar.gz\r\n    # cd gd-2.0.35\r\n    # ./configure --prefix=/usr/local/gd --with-jpeg=/usr/local/jpeg --with-freetype=/usr/local/freetype --with-png --with-zlib\r\n    //编译过程中会看到如下信息\r\n    ** Configuration summary for gd 2.0.33:    Support for PNG library: yes\r\n    Support for JPEG library: yes\r\n    Support for Freetype 2.x library: yes\r\n    Support for Fontconfig library: no\r\n    Support for Xpm library: no\r\n    Support for pthreads: yes\r\n    //可以看到png 、 jpeg 、 freetype都已经安装上了\r\n    # make\r\n    # make install    6. 正式安装php\r\n    # tar zxvf php-5.2.3.tar.gz\r\n    # cd php-5.2.3\r\n    # ./configure --prefix=/usr/local/php5 --with-apxs2=/usr/local/apache2/bin/apxs --with-mysql=/usr/local/mysql --with-gd=/usr/local/gd --with-zlib --with-libpng --with-jpeg=/usr/local/jpeg --with-freetype=/usr/local/freetype --enable-sockets --with-iconv --enable-mbstring --enable-track-vars --enable-force-cgi-redirect --with-config-file-path=/usr/local/php5/etc\r\n    # make\r\n    # make install    7.整合php和apache\r\n    cp php.ini-dist /usr/local/php5/etc/php.ini\r\n    vi /usr/local/php5/etc/php.ini\r\n    将extension=php_mysql.dll前面的#去掉\r\n    注意在/usr/local/apache2/conf/httpd.conf加上下代码使apache执行PHP    AddType application/x-httpd-php .php\r\n    AddType application/x-httpd-php3 .php3\r\n    AddType application/x-httpd-php4 .php4\r\n    AddType application/x-httpd-php-source .phps    8. 安装ZendOptimizer\r\n    # tar zxvf ZendOptimizer-3.0.1-linux-glibc21-i386.tar.gz\r\n    # cd ZendOptimizer-3.0.1-linux-glibc21-i386\r\n    # ./install.sh\r\n\r\n', NULL, 2009, '2009-05', 164, 2, ''),
(21, '“5.12”汶川大地震周年纪念', NULL, '   一年前的5月12日，山川抖动、大地战栗，霎那间的震撼撕碎了绿色的家园，万千幢耸立的大厦化作断壁残垣，无数个鲜活的生命瞬间撒手人寰……地震的余波还未散尽，神州大地已响起了救援的集结号，来自五湖四海善良的军民汇成了千军万马，他们与时间赛跑、与灾难搏斗，在废墟中，用一双双温暖的手，筑起“大难兴邦”的不倒长城。 \r\n　　一年后的今天，孩子的面庞重又绽放出微笑，男人女人们重又挺起了坚强的脊梁。他们擦去泪水、按捺悲伤，将无尽的伤痛化为无穷的力量，与全国人民一道，在废墟上一砖一瓦建起新的家园。365天不算漫长、365天是一段永恒的回忆；69225不是一个简单的数字，69225是同胞不灭的生命印迹。逝去的生命无法挽回，生者的脚步还在继续；痛苦的记忆应该忘却，坚强的精神还要传承。来到这里的人们，请保持肃静。让我们，一起缅怀逝者、关爱生者、继续前行！', NULL, 2009, '2009-05', 68, 1, ''),
(22, 'Flex技术的2大弊端', NULL, '  Flex是Adobe公司推出的开放源码框架，为富互联网应用解决了诸多问题,也有许多的技术人士,预言Flex将会淘汰至今流行的Ajax技术...但是也有反对的:1.Flex很占用网络宽带资源.2.搜索引擎对Flex并不友好,可能会降低站点排名等....', NULL, 2009, '2009-05', 104, 2, ''),
(23, 'PHP:HTTP验证的例子', NULL, '<?php\r\n/**\r\n * @author :康云川 Website:www.kangyunchuan.cn QQ:334192009 E-mail:zonko@163.com\r\n */\r\n if ($_SERVER[''PHP_AUTH_USER''] != 123 || $_SERVER[''PHP_AUTH_PW''] != 123){\r\n	header(''WWW-Authenticate:Basic realm="Please input your username and password!'');\r\n	echo "<title>Error!</title><p style=color:#FF0000;font-family:Arial, Helvetica, sans-serif>\r\n		You have no Popedom!Out</p>";\r\n	exit();\r\n	}\r\n?>', NULL, 2009, '2009-05', 150, 2, ''),
(24, 'PHP中用EOD可以不转义双引号', NULL, '运行下代码,EOD会很受欢迎的....\r\n<?php\r\n  echo <<<EOD\r\n		<script language="javaScript">alert("It''s successfully!");</script>\r\nEOD; \r\n?>  ', NULL, 2009, '2009-05', 151, 2, ''),
(25, 'PHP中使浏览器不缓存,及时发送最新信息', NULL, 'header("Expires: Mon, 26 Jul 1997 05:00:00 GMT");\r\nheader("Last-Modified:" .gmdate("D, d M Y H:i:s"). "GMT"); \r\nheader("Cache-Control: no-cache, must-revalidate");\r\nheader("Pragma: no-cache");\r\n      ', NULL, 2009, '2009-05', 151, 2, ''),
(170, '服务器负载均衡参考模型', NULL, '  由于首页程序有点bug，请点击详情查看模型....\r\n  \r\n服务器负载均衡参考图，有必要加一个缓存数据层,数据库层之间的服务器必须同步。\r\n[img]src="/Download/service.jpg" width="450" height="241"[/img]\r\n\r\n      \r\n      ', NULL, 2009, '2009-11', 150, 2, ''),
(171, '如何使用正则表达式', NULL, '1.2   如何使用正则表达式\r\n    如果认真思考一下那些问题场景，你就会发现它们不外乎两种情况：一种是查找特定的信息（搜索），另一种是查找并编辑特定的信息（替换）。事实上，从根本上来讲，那正是正则表达式的两种基本用途：搜索和替换。\r\n给定一个正则表达式，它要么匹配一些文本（进行一次搜索），要么匹配并替换一些文本（进行一次替换）。\r\n1.2.1 用正则表达式进行搜索\r\n    正则表达式的主要用途之一是搜索变化多端的文本，比如刚才描述的搜索单词car的场景：你要把car、CAR、Car，或CaR都找出来，但这只是整个问题比较简单的一部分（又许多搜索工具都可以完成不区分字母大小写的搜\r\n索）。比较困难的部分是确保scar、carry和incarcerate之类的单词不会被匹配到。一些比较高级的编辑器提供了"Match Only Whole Word（仅匹配整\r\n个单词）"选项，但还有许多编辑器并不具备这一功能，而你往往无法在你正在编辑的文档里做出这种调整。使用正则表达式而不是纯文本car进行搜索就可以解决这个问题。\r\n ※  提示 ：想知道如何解决这个问题吗？你们其实已经见过答案了--它就是我们刚才给出的示例语句：\\b[Cc][Aa][Rr]\\b\r\n    请注意，“等于”比较（比如说，用户给出的电子邮件地址是否匹配这\r\n个正则表达式？）本质上也是一种搜索操作，这种搜索操作会对用户所提供\r\n的整个字符串进行搜索以寻找一个匹配。与此相对的是子字符串搜索，子字符串搜索时“搜索”这个词的普通含义。\r\n1.2.1 用正则表达式进行替换\r\n    正则表达式搜索的威力非常强大，非常有用，而且比较容易学习和掌握。\r\n许多示例都与“匹配”有关。不过，正则表达式的真正威力体现在替换操作方面，比如我们刚才所描述的需要把URL地址字符串替换为可点击的URL地址场景：这需要先把相关文本里的URL地址字符串找出来（比如说，通过搜索\r\n以http://或https://开头、以句号、逗号或空白字符结尾的字符串），再把找到的URL地址字符串替换为HTML语言的"<A HREF=...> ... </A>"元素，如下所示：\r\n    http://www.phpcq.com/\r\n    替换结果：\r\n    <A HREF="http://www.phpcq.com">http://www.phpcq.com/</A>\r\n    绝大多数应用程序的 "Search and Replace"（搜索和替换）选项都可以完成这种替换操作，但使用一个正则表达式来完成这个任务将简单得让人难以置信。      ', NULL, 2009, '2009-11', 158, 2, ''),
(172, '什么是正则表达式', NULL, '1.3  什么是正则表达式\r\n    现在，你已经知道正则表达式是用来干什么的了，我们再来给它下个定义。简单的说，正则表达式是一些用来匹配和处理文本的字符串。正则表达式是用正则表达式语言创建的，这种语言的用途就是为了解决我们前面所描述的种种问题。与其他程序设计语言一样，正则表达式语言也有需要你们去学习的特殊语法和指令。\r\n    正则表达式语言并不是一种完备的程序设计语言，它甚至算不上是一种能够直接安装并运行的程序。更准确地说，正则表达式语言是内置于其他语言或软件产品里的“迷信”语言。好在现在几乎所有的语言或工具都支持正则表达式，但是正则表达式与你正在使用的语言或工具可以说毫无相似之处。正则表达式语言虽然也被称为一种语言，但它与人们对语言的印象相去甚远。\r\n    注意：正则表达式起源于1950年代在数学领域的一些研究工作。几年之后，计算机领域借鉴那些研究工作的成果和思路开发出了Unix世界里的Perl语言和grep等工具程序。在许多年里，正则表达式只流行于Unix平台（Unix程序员用它们来解决我们前面所描述的各种问题），但这种情况早已发生了变化，现在几乎所有的计算平台都支持正则表达式，只是具体方式和支持程度略有差异而已。\r\n    说完这些掌故，我们再来看几个例子。下面都是合法的正则表达式（我们稍后再解释它们的用途）：\r\n    □.\r\n    □www\\.phpcq\\.com\r\n    □[a-zA-Z0-9_.]*\r\n    □<[Hh]1>.*</[Hh]1>\r\n    □\\r\\n\\r\\n\r\n    □\\d{3,3}-\\d{3,3}-\\d{4,4}\r\n    请注意，语法是正则表达式最容易掌握的部分，真正的挑战是学会如何运用那些语法把实际问题分解为一系列正则表达式并最终解决。与学习其他程序设计语言一样，只靠读书是学不会如何灵活运用语法正则的，你必须通过亲身实践才能真正掌握它们。      ', NULL, 2009, '2009-11', 165, 2, ''),
(173, 'debian系统-php环境搭建以及分区加密 ,服务器备份常用命令', NULL, 'vgdisplay 查看硬件卷状态大小等\r\n在root 下 新建一个  .ssh 文件  把证书文件cp进去\r\nlvdisplay   查看逻辑卷\r\n lvremove 去掉挂载卷\r\nswapoff -a  关闭交换分区\r\n<\r\n如 交换分区 太大 \r\n initramfs-tools/conf.d/resume  删除  resume 文件  启动默认项  \r\nupdate-initramfs -u  重新生产启动项\r\n>\r\nserver43:/etc# nano fstab   进入后 注释掉 挂载分区\r\nurl.redirect = ( "^(.*)" => " http://star1a.139p.com.cn$1" )\r\nreboot  重启\r\n<\r\n如 交换分区 太大 \r\nlvremove /dev/server44/swap_1   移除\r\nserver43:~# lvcreate -L 200M -n swap_1 server43  并重新添加一个\r\nmkswap /dev/server44/swap_1  格式化成系统格式\r\n\r\n>\r\n挂载点		名字		格式	尺寸\r\n/		LogVol00<默认>	ext3	20G\r\n/mysql		lv_mysql	ext3	20G~60G      15\r\n/mysql/log	lv_mysql_log	ext3	至少20G	  10		\r\n/mysql/backup	lv_mysql_backup	ext3	20G         5\r\n/home/www	10G\r\n/mysql		20\r\n/mysql/log	20\r\n/mysql/backup	10\r\nserver43:~# lvcreate -L 200M -n lv_mysql server43\r\nserver43:~# lvcreate -L 200M -n lv_mysql_log server43\r\nserver43:~# lvcreate -L 200M -n lv_mysql_backup server43\r\nserver43:~# lvcreate -L 200M -n lv_home_www server43\r\nserver43:/# mkfs -t ext3 /dev/server43/lv_mysql  格式化分区\r\n新建立 mkdir mysql 文件\r\nserver43:/# mount /dev/server43/lv_mysql /mysql  将lv_mysql分区挂载到 mysql文件下\r\nnano /etc/fstab  修改 启动文件\r\n/dev/mapper/server43-lv_mysql /mysql           ext3    defaults        0       2\r\n/dev/mapper/server43-lv_mysql_log /mysql/log           ext3    defaults        $\r\n/dev/mapper/server43-lv_mysql_backup /mysql/backup  \r\nreboot 重启\r\naptitude dist-upgrade  更新 aptitude\r\naptitude install cryptsetup 下载加密软件\r\n如下载速度太慢 可以修改下载地点\r\nserver44:/etc/apt# nano sources.list\r\n修改成  tw（台湾）\r\ndeb http://ftp.tw.debian.org/debian lenny main non-free contrib\r\naptitude update  必须更新\r\n2.将逻辑卷格式化为加密设备(中途会提示输入大写的YES确认，以及设置一个密码用于加密数据)\r\ncryptsetup luksFormat /dev/server43/lv_home_www\r\n3.打开刚刚创建的加密设备(中途会提示输入密码，就是上一步设置的密码)\r\ncryptsetup luksOpen /dev/vg_main/lv_home_www home_www\r\n4.在加密设备上创建文件系统\r\nmkfs -t ext3 /dev/mapper/home_www\r\n5.将加密的文件系统挂到/home/www目录上备用\r\nmkdir /home/www\r\nmount /dev/mapper/home_www /home/www\r\n1.安装时间校正工具\r\naptitude install ntpdate\r\n2.校准系统时间\r\n/usr/sbin/ntpdate pool.ntp.org\r\n安装 php 环境\r\naptitude install mysql-server lighttpd php5-cgi php5-cli php5-mysql\r\n关闭 web服务器 以及  mysql\r\n把 root 下的3个备份文件转换成可执行文件 chmod +x mountfs chmod +x snapdb chmod +x umountfs\r\n把 /var/lib/mysql 下的文件 移动到\r\n并把 权限设置成mysql\r\nln -s ../conf-available/11-sea.conf 11-sea.conf\r\n连接配置文件\r\n修改mysql 配置文件\r\n/etc/mysql/my.cnf\r\n重启mysql \r\n创建外部 管理登陆账号\r\nshow grants;\r\nselect password(''ndasdnsao2323^&Y%$ds'');\r\nGRANT ALL PRIVILEGES ON *.* TO ''jizhe''@''%'' IDENTIFIED BY PASSWORD ''\r\n*21451345FC123EC53DFB82C1DB5AA199425A16C4'' \r\nWITH GRANT OPTION\r\n安装svn 迁出游戏代码\r\n修改/home/www   为 www权限\r\nsvn co https://svn.gamefps.com/sc/code/branches/server\r\n 修改 ip /etc/nerwork/interfser\r\nphp.ini memory_limit = 256M    \r\n/etc/php5/conf.d/eaccelerator.ini\r\neaccelerator.so\r\n /usr/lib/php5/20060613/eaccelerator.so\r\n/home/www/cache/eaccelerator\r\nchown -R www-data /home/www/cache/eaccelerator\r\n重启lighttpd\r\n/etc/php5/conf.d/eaccelerator.ini\r\n运行phpinfo\r\n搜索eaccelerator\r\n备份服务器配置与安装\r\n在备份服务器上安装mysql\r\naptitude install mysql-server\r\n在root 文件夹下 建立 my.conf\r\n复制到 my.conf 中\r\n\r\n[mysqld]\r\nlog-slave-updates\r\nreplicate-ignore-db = mysql\r\nbinlog-ignore-db = mysql\r\nexpire_logs_days = 2\r\nskip-bdb\r\nskip-innodb\r\nreport-host    = backup138\r\nbind-address    = 127.0.0.1\r\n\r\n[mysqld1]\r\nserver-id      = 9001\r\nport           = 9001\r\npid-file       = /home/mysqls/1/run/mysqld.pid\r\nsocket        = /home/mysqls/1/run/mysqld.sock\r\ndatadir       = /home/mysqls/1/data\r\nlog-bin       = /home/mysqls/1/log/mysql-bin.log\r\nlog_error     = /home/mysqls/1/log/error.log\r\n\r\n\r\n[mysqld2]\r\nserver-id      = 9002\r\nport           = 9002\r\npid-file       = /home/mysqls/2/run/mysqld.pid\r\nsocket         = /home/mysqls/2/run/mysqld.sock\r\ndatadir        = /home/mysqls/2/data\r\nlog-bin        = /home/mysqls/2/log/mysql-bin.log\r\nlog_error        = /home/mysqls/2/log/error.log\r\n\r\n\r\nmysqld_multi report  查看配置文件是否生效\r\n\r\n停掉 mysql服务器\r\n\r\n在home 目录下建立相应的文件夹 以及把他们的权限改成 chown mysql:mysql mysqls\r\n\r\nmysqld_multi start  \r\nmysqld_multi report  这里已近生效\r\n\r\n进入mysql 运行一下语句\r\n\r\nCHANGE MASTER TO MASTER_HOST = ''125.67.235.197'',MASTER_PORT = 33106,\r\nMASTER_USER = ''repl'',MASTER_PASSWORD = '''', MASTER_LOG_FILE=''mysql-bin.000032'', \r\nMASTER_LOG_POS=23059091;\r\n\r\n在125.67.235.197  把第一份数据 导入 到data\r\n\r\n\r\n      \r\n      \r\n      \r\n      ', NULL, 2009, '2009-11', 180, 2, ''),
(30, '我的通信技术生涯', NULL, '   在大学里学习通信技术的这段时间,是我有史来最孤独,最狼狈的日子.....多门课程都是以不及格而告终,无论老师怎样的指引,我都无法踏入“正途”,始终都坚持走着自己路线--LAMP，选择了她,我生活不再那么孤独...\r\n      ', NULL, 2009, '2009-05', 138, 1, ''),
(31, '给C++初学者的50个忠告——同样适用于PHP初学者(转)', NULL, '1.把C++当成一门新的语言学习（和C没啥关系！真的。）； \r\n2.看《Thinking In C++》，不要看《C++变成死相》； \r\n3.看《The C++ Programming Language》和《Inside The C++ Object         Model》,不要因为他们很难而我们自己4.不要被VC、BCB、BC、MC、TC等词汇所迷惑——他们都是集成开发环境，而我们要学的是一门语言； \r\n5.不要放过任何一个看上去很简单的小编程问题——他们往往并不那么简单，或者可以引伸出很多知识点； \r\n6.会用Visual C++，并不说明你会C++； \r\n7.学class并不难，template、STL、generic         programming也不过如此——难的是长期坚持实践和不遗余力的博览群书； \r\n8.如果不是天才的话，想学编程就不要想玩游戏——你以为你做到了，其实你的C++水平并没有和你通关的能力一起变高——其实可以时刻记住：学C++是为了编游戏的；         \r\n9.看Visual C++的书，是学不了C++语言的； \r\n10.浮躁的人容易说：XX语言不行了，应该学YY；——是你自己不行了吧！？ \r\n11.浮躁的人容易问：我到底该学什么；——别问，学就对了； \r\n12.浮躁的人容易问：XX有钱途吗；——建议你去抢银行； \r\n13.浮躁的人容易说：我要中文版！我英文不行！——不行？学呀！ \r\n14.浮躁的人容易问：XX和YY哪个好；——告诉你吧，都好——只要你学就行； \r\n15.浮躁的人分两种：a)只观望而不学的人；b)只学而不坚持的人； \r\n16.把时髦的技术挂在嘴边，还不如把过时的技术记在心里； \r\n17.C++不仅仅是支持面向对象的程序设计语言； \r\n18.学习编程最好的方法之一就是阅读源代码； \r\n19.在任何时刻都不要认为自己手中的书已经足够了； \r\n20.请阅读《The Standard C++ Bible》(中文版：标准C++宝典)，掌握C++标准； \r\n21.看得懂的书，请仔细看；看不懂的书，请硬着头皮看； \r\n22.别指望看第一遍书就能记住和掌握什么——请看第二遍、第三遍； \r\n23.请看《Effective C++》和《More Effective C++》以及《Exceptional C++》； \r\n24.不要停留在集成开发环境的摇篮上，要学会控制集成开发环境，还要学会用命令行方式处理程序； \r\n25.和别人一起讨论有意义的C++知识点，而不是争吵XX行不行或者YY与ZZ哪个好； \r\n26.请看《程序设计实践》，并严格的按照其要求去做； \r\n27.不要因为C和C++中有一些语法和关键字看上去相同，就认为它们的意义和作用完全一样； \r\n28.C++绝不是所谓的C的“扩充”——如果C++一开始就起名叫Z语言，你一定不会把C和Z语言联系得那么紧密； \r\n29.请不要认为学过XX语言再改学C++会有什么问题——你只不过又在学一门全新的语言而已； \r\n30.读完了《Inside The C++ Object Model》以后再来认定自己是不是已经学会了C++； \r\n31.学习编程的秘诀是：编程，编程，再编程； \r\n32.请留意下列书籍：《C++面向对象高效编程（C++ Effective Object-Oriented Software         Construction）》《面向对象软件构造(Object-Oriented Software         Construction)》《设计模式（Design Patterns）》《The Art of Computer Programming》；         \r\n33.记住：面向对象技术不只是C++专有的； \r\n34.请把书上的程序例子亲手输入到电脑上实践，即使配套光盘中有源代码； \r\n35.把在书中看到的有意义的例子扩充； \r\n36.请重视C++中的异常处理技术，并将其切实的运用到自己的程序中； \r\n37.经常回顾自己以前写过的程序，并尝试重写，把自己学到的新知识运用进去； \r\n38.不要漏掉书中任何一个练习题——请全部做完并记录下解题思路； \r\n39.C++语言和C++的集成开发环境要同时学习和掌握； \r\n40.既然决定了学C++,就请坚持学下去，因为学习程序设计语言的目的是掌握程序设计技术，而程序设计技术是跨语言的； \r\n41.就让C++语言的各种平台和开发环境去激烈的竞争吧，我们要以学习C++语言本身为主； \r\n42.当你写C++程序写到一半却发现自己用的方法很拙劣时，请不要马上停手；请尽快将余下的部分粗略的完成以保证这个设计的完整性，然后分析自己的错误并重新设计和编写（参见43）；         \r\n43.别心急，设计C++的class确实不容易；自己程序中的class和自己的class设计水平是在不断的编程实践中完善和发展的； \r\n44.决不要因为程序“很小”就不遵循某些你不熟练的规则——好习惯是培养出来的，而不是一次记住的； \r\n45.每学到一个C++难点的时候，尝试着对别人讲解这个知识点并让他理解——你能讲清楚才说明你真的理解了； \r\n46.记录下在和别人交流时发现的自己忽视或不理解的知识点； \r\n47.请不断的对自己写的程序提出更高的要求,哪怕你的程序版本号会变成Version 100.XX； \r\n48.保存好你写过的所有的程序——那是你最好的积累之一； \r\n49.请不要做浮躁的人； \r\n50.请热爱C++!      \r\n      ', NULL, 2009, '2009-05', 108, 2, ''),
(32, '新手的快速成长之道---(PHPCHINA)', NULL, '\r\n 我学程序设计的时间其实不算短了，不过总不长进。一直想写一点东西纪念一下，只是总怕误了别人的子弟，不敢乱说。一开始是真不懂，没什么好说的。到后来学得多了，想说，但发现反而懂得更少了，愈加不敢说。这好比程序设计上的死循环，学得越多，不懂得越多，越不敢说，如此反复。今天终于鼓起勇气来写，可还是战战兢兢，怕是指点迷津不成，倒把人带入歧途，那罪过就大了。\r\n\r\n    看到很多新手在论坛里摸爬滚打，弄得焦头烂额，不知所措。心中免不了感慨，新手如何才能快速进阶，新手成长之道到底是什么？孟岩老师指出“思考力和解决问题的能力”是程序员的核心竞争力。这里现学现卖，盗一下版——习惯和方法是新手的成长之道。\r\n\r\n    只有拥有好习惯，掌握好方法的人才能以很快的速度掌握一门技巧。这是一种能力，所谓天赋不过如此。一个天赋异禀的少年经过世外高人的稍加点拨，传以武学秘笈，不出几年，江湖上便多了一个神功盖世的少年侠客，足以使那些学武学到胡子花白却只会几手粗浅功夫的老江湖汗颜。学习编程同样需要“天赋”，这“天赋”不但与生俱来的，还可以后天养成。说到底所谓“天赋”是一种习惯，一种方法。有了好的习惯使用正确的方法，你同样能很快长成为一代大侠。\r\n\r\n    现在网络是非常的发达，几乎所有的小问题都能在网上找出一大堆的答案来。很多新手一遇到问题，立马就去上网去搜一把，顺便复制粘贴一下，勤快的就着代码运行一下看看有没有错误，没甚大错就拿来用了。遇到问题时不是去思索一下自己该如何去解决，有几种解决方案可以实现，哪种方案效率最高，哪种方案兼容性最好，而是一搜了之。久而久之搜答案成了习惯，思考力和分析力也在你的习惯中沦陷了。\r\n\r\n    还有一些新手写代码一出错，从来不自己试着解决，而是马上就去论坛求救，弄得整个论坛“救命”声一片，不知道的还以为论坛发生了“天灾”。其实有些错误，错误提示昭然已揭，都明摆着告诉你错在哪里了，很多人却视而不见。更有甚者写代码丢三落四，龙飞凤舞，不是少了一个等号就是多了一个括号，弄得编译器苦不堪言，叫苦连天，他还在那里抓耳挠腮，为报错百思不得其解。写程序不能失于严谨，而严谨恰好也是一种习惯。\r\n\r\n    除了脑袋真的有点贵恙的，其实每个正常人都有“天赋”，但是“天赋”很容易被你宠坏，“天赋”是需要好的习惯不断去锻炼的。\r\n\r\n    有人说我说得轻巧，尽会忽悠人，折腾一些不知疾苦的话来敷衍了事。其实每个新手都希望能快速掌握“神功”成为大侠，只是不知道哪些是好习惯，哪些是坏习惯，明知是坏习惯改正却无从下手。 善哉！终于有人问到点子上来了，终于有人不去问一些语法错误了，终于有人不到处喊救命了。幸甚幸甚。\r\n\r\n    论坛就是用来交流探讨的，在你遇到困惑，身处迷宫或是走在三岔路口之时，去问问前辈们的解决之道，高人们的轻轻一指，尤如仙人指路，能使你得道成仙。关键是你要问得其法，问得其要，问得所求。那一指的风情，正中要害，把你从困惑中解救出来，也包含了对问题的解决之道。领悟之后，当你再次遇到类似的问题，如果不能举一返三，至少也可以现学现卖。\r\n\r\n    另外，在领悟指点的同时，原理的基础的著作应该多去读读，深入理解。这是夯实基础的，万丈高楼平地起，基础万万不能差。原理让你白了来龙去脉，好比打通了任督二脉，日后练功自然事半功倍。\r\n\r\n    养成好习惯，掌握好方法，领悟学习之道，你一样可以快速成长为武功盖世的大侠。 \r\n      ', NULL, 2009, '2009-05', 106, 1, ''),
(33, '天赋是可以后天培养的', NULL, '程序员应该具有的基本能力:\r\n1.善于解决问题的能力,灵活发挥自己的想象\r\n2.仔细,谨慎..因为你敲的每一个字符都会决定程序是否能正常运行\r\n3.坚持不懈的精神,无论遇到什么困难,都始终不放弃\r\n4.善于交流,你应该知道巴比伦塔的失败吧!\r\n5.有计划,有目标  ', NULL, 2009, '2009-05', 82, 1, ''),
(34, 'PHP在国内的发展', NULL, ' php的确很不错，很强大,,在国内虽然有Discuz!这个知名的社区软件为PHP语言做典范，但某些方面目前在国内 发展得不太乐观！ \r\n  微软N久没更新的asp 在各大高校都比php受欢迎! 而且时不时都有些asp或java的fans辱骂php....这一点可以看出他们对php的不了解,只有说人家垃圾的，自己才是垃圾...\r\n  这到底是哪里出了问题?  在中国尤其是搞开源,无论好坏...都会遭人骂~~\r\n  可想在国内 支持开源的思想并不强烈... \r\n     \r\n      \r\n      ', NULL, 2009, '2009-05', 131, 1, ''),
(35, 'Linux操作系统学习线路图', NULL, ' 如果你正在学习Linux操作系统，不知从哪里入手，可以参考下面给出的9点建议，还有一点是本人附加的，Linux程序工程师非常吃香，以后肯定是个火红职业。不管怎样，只要努力的学，后果很美好。\r\n\r\n1.掌握至少50个以上的常用命令。\r\n\r\n比如：安装和登录命令：login、 shutdown、 halt、 reboot 、mount、umount 、chsh\r\n\r\n文件处理命令：file、 mkdir、 grep、dd、 find、 mv 、ls 、diff、 cat、 ln\r\n\r\n系统管理相关命令： df、 top、 free、 quota 、at、 lp、 adduser、 groupadd kill、 crontab、 tar、  unzip、 gunzip 、last\r\n\r\n网络操作命令：ifconfig、 ip 、ping 、 netstat 、telnet、 ftp、 route、 rlogin rcp 、finger 、mail 、nslookup\r\n\r\n系统安全相关命令： passwd 、su、 umask 、chgrp、 chmod、chown、chattr、sudo、 pswho\r\n\r\n2.熟悉Gnome/KDE等X-windows桌面环境操作。\r\n\r\n3.掌握.tgz、.rpm等软件包的常用安装方法。\r\n\r\n4.学习添加外设，安装设备驱动程序(比如网卡）。\r\n\r\n5.熟悉Grub/Lilo引导其及简单的修复操作。\r\n\r\n6.熟悉Linux文件系统和目录结构。\r\n\r\n7.掌握vi，gcc,gdb等常用编辑器，编译器，调试器。\r\n\r\n8.理解shell别名、管道、I/O重定向、输入和输出以及shell脚本编程。\r\n\r\n9.学习Linux环境下的组网。 \r\n     \r\n      ', NULL, 2009, '2009-05', 140, 2, ''),
(39, '快要到放暑假的时间了', NULL, '  快要到放暑假的时间了,不想回去...突然冒出两个想法,真难决定啊!1,成天窝在宿舍里---闭关(呵呵,学习很牛X的武功秘籍).2,找一个兼职,赚点外块.\r\n  我到底该怎么做呢?Yi...还真难解决.', NULL, 2009, '2009-05', 103, 1, ''),
(40, '邹哥网站的PR指数降低了', NULL, '     邹哥网站的PR指数降低了,不知道它最近在搞什么东东..网站都快2个月没更新了,以前的PR指数为2，现在已经为1了,,,以前他对我说过,他转行了..不做程序员了...程序员不做了,网站的内容也不更新了...就连QQ都很久没登录了(也可能是隐身的)..\r\n   周围大多数朋友也都转行了(做管理的做管理,做销售的做销售,当老师的当老师),只有我还在挣扎着...\r\n   我不做它,还能做啥呢？以后的时间还长着呢!\r\n     \r\n      ', NULL, 2009, '2009-05', 107, 1, ''),
(42, '一直想看一本书<<搜索引擎优化高级编程PHP版>>', NULL, ' 一直想看一本书<<搜索引擎优化高级编程PHP版>>这些日子资金有点紧张,暂时还没有买书的想法,而且这本书我在网上都搜遍了...就是没电子版的, 好不容易下到了这本书的范例文件---呵呵也不错啊,将就看....等有钱了,再上淘宝淘一本!    ', NULL, 2009, '2009-05', 151, 1, ''),
(43, '夜深了, 没有一点睡意,迟迟不能入眠...', NULL, '  夜深了, 没有一点睡意,迟迟不能入眠...究竟在想什么呢?\r\n自己也不是很清楚,反正现在有点晕晕的感觉,对前途也感到了\r\n一点迷茫.还是坚持走着自己的路线,跟着计划走吧!不要胡思乱想,小心因此而乱了方正,踏入这行业,是自己的选择,无怨无悔...\r\n  不要半途而废,马上就要正式踏上职业规划之路了.要拿出以前的求知精神,因激情所在,生活才充满了幸福.一旦失去,你就\r\n会觉得没有什么更有意义的事情值得你去探索了.\r\n  保存实力的最好方法就是保持与社会同步,只有同步了你才有实力去探索.     ', NULL, 2009, '2009-05', 152, 1, ''),
(44, '勇哥来看我了', NULL, '  今天晚上,勇哥来看我了,还带着一个MM...2年多不见,我们彼此间的变化都很大,但他依然是那么健谈--不愧是做销售的...\r\n  我们谈到了以前,也谈到了将来...2人共喝了1瓶啤酒,哈哈!\r\n  ', NULL, 2009, '2009-05', 95, 1, ''),
(45, '这两天在写一个MVC框架', NULL, '  这两天在写一个MVC框架...很Lj的框架就快完工了,高手你就飘过,等写完后...再给大家一起分享,这个框架暂时只能支持Mysql数据库系统,,,因为我只写了Mysql的类库,若要支持更多的数据库,,,那么还得写其它的扩展库...    ', NULL, 2009, '2009-05', 108, 1, ''),
(46, 'kangyunchuan.cn域名快过期了', NULL, '  kangyunchuan.cn域名快过期了,不打算续费了......', NULL, 2009, '2009-05', 79, 1, ''),
(47, '工厂方法模式', NULL, '<?php\r\n/**\r\n * @author :Eggshell Website:www.kangyunchuan.cn QQ:334192009 E-mail:zonko@163.com\r\n * @name :Factory mode....\r\n * @copyright :Have no ...\r\n * Date:Sun May 24 14:24:18 CST 2009\r\n */\r\ninterface abstracted{\r\n	public function realCreate();\r\n}\r\n//女人类\r\nclass Woman{\r\n	public function action(){\r\n		echo ''女人爱哭!'';\r\n	}\r\n}\r\n//男人类\r\nclass Man{\r\n	public function action(){\r\n		echo ''男人爱干活'';\r\n	}\r\n}\r\n//创建女人\r\nclass WomanCreator implements abstracted {\r\n	public $chromosome;//染色体\r\n	public function realCreate(){\r\n		if ($this->chromosome == "xx") {\r\n			return new Woman();\r\n		}\r\n	}\r\n}\r\n//创建男人\r\nclass ManCreator implements abstracted {\r\n	public $chromosome;\r\n	public function realCreate(){\r\n		if ($this->chromosome == "xy" || $this->chromosome == "xyy") {\r\n			return new Man();\r\n		}\r\n	}\r\n}\r\n//人类工厂\r\nclass PersonFactory{\r\n	public function create($what){\r\n		$create = $what."Creator";\r\n		return $create = new $create();	\r\n	}\r\n}\r\n$create = new PersonFactory();\r\n$instance = $create->create(''Woman'');\r\n$instance->chromosome = "xx";\r\n$instance->realCreate()->action();\r\n?>\r\n      ', NULL, 2009, '2009-05', 101, 2, ''),
(48, '简单MVC框架', NULL, '    才完工不久的MVC框架,有点仿PEAR DB,只支持MYsql数据库系统\r\n下载地址:http://www.PHPDesigner.org/Download/MVC-Framework.rar\r\n      \r\n      \r\n      ', NULL, 2009, '2009-05', 267, 3, ''),
(83, '现在在工作了!', NULL, '   现在在工作了! 已经厌倦了的校园生活,,,GUN 远点....  ', NULL, 2009, '2009-07', 87, 1, ''),
(84, '小学生读西游记的感受和体会', NULL, ' 1、义气害死人。妖怪们都太讲义气，抓到唐僧总是要等哥们、姐们一起来吃，结果是耽误了时间，事没办成。\r\n2、不要太讲程序。妖怪抓到了唐僧非要先烧水，再把他洗干净，然后再吃，结果效率太低，丧失了机遇。\r\n3、别把上级不当回事。孙悟空再能，也逃不脱如来佛的手心。\r\n九点体会：\r\n1、领导都是肉头。以唐僧为代表的不辩忠奸，不辩是非，腻腻歪歪，优柔寡断。\r\n2、能干的人都有紧箍咒。孙悟空能干，必须有办法管着。\r\n3、捣乱的人都是上面派来的，结果还没啥事。妖怪都是天上来的，折腾了个够，最后都回去了。\r\n4、老同志的事情一定要办好。唐僧因为没有把通天河老乌龟交办的事情当回事，最后翻了船，这就是轻视老同志的代价。\r\n5、虔诚善良的人最容易被吃掉。\r\n6、好吃懒做的人得到实惠最多。\r\n7、重担都压在老实人身上。\r\n8、妖魔鬼怪都是有背景的。 \r\n\r\n西游记告诉我们：\r\n有背景的妖怪最后都被领导救走，\r\n没背景的妖怪都被打死 。     ', NULL, 2009, '2009-07', 79, 1, ''),
(52, '程序式的情书!', NULL, '程序式的情书\r\n我能抽象出整个世界．．． \r\n但是我不能抽象出你．．． \r\n因为你在我心中是那么的具体．．． \r\n所以我的世界并不完整．．． \r\n我可以重载甚至覆盖这个世界里的任何一种方法．．． \r\n但是我却不能重载对你的思念．．． \r\n也许命中注定了 你在我的世界里永远的烙上了静态的属性．．． \r\n而我不慎调用了爱你这个方法．．． \r\n当我义无返顾的把自己作为参数传进这个方法时．．． \r\n我才发现爱上你是一个死循环．．． \r\n它不停的返回对你的思念压入我心里的堆栈．．． \r\n在这无尽的黑夜中．．． \r\n我的内存里已经再也装不下别人．．． \r\n我不停的向系统申请空间．．． \r\n但却捕获一个异常－－－我爱的人不爱我．．． \r\n为了解决这个异常．．． \r\n我愿意虚拟出最后一点内存．．． \r\n把所有我能实现的方法地址压入堆栈．．． \r\n并且在栈尾压入最后一个方法－－－将字符串＂我爱你，你爱我吗？＂传递给你．．． \r\n如果返回值为真－－我将用尽一生去爱你．．． \r\n否则－－我将释放掉所有系统资源．．      \r\n      ', NULL, 2009, '2009-05', 84, 1, ''),
(53, '小站在搜索引擎的收录情况', NULL, '  刚才我去百度和谷歌看了下我这个站的收录数据,在百度中的结果很不理想:共收录了19篇页面,居然只有1篇是最新快照...其它的都是1个月前的,不知道是哪里出了问题.而在谷歌的结果还能使人满意:共收录了165篇页面,并且都是最新的快照...\r\n   等段时间在关注关注吧!  ', NULL, 2009, '2009-05', 99, 1, ''),
(54, 'Factory mode', NULL, '<?php\r\n/**\r\n * @author :Eggshell Website:www.kangyunchuan.cn QQ:334192009 E-mail:zonko@163.com\r\n * @name :Abstract factory\r\n * @copyright :Have no ...\r\n * Date:Sun May 24 22:11:03 CST 2009\r\n */\r\ninterface Pcreator{\r\n	public function createP($Pname);\r\n}\r\nclass MeEat{\r\n	public $name = "egg";\r\n}\r\nclass YouEat{\r\n	public $name = "bread";\r\n}\r\nclass MeInstance{\r\n	public $spare = "one";\r\n}\r\nclass YouInatance{\r\n	public $spare = "zero";\r\n}\r\nclass abstractCreator{\r\n	public function getCreate($who){\r\n		$creatorClassName = $who."Creator";\r\n		return new $creatorClassName();\r\n	}\r\n}\r\nclass MeCreator implements Pcreator {\r\n	public function createP($Pname){\r\n		$pClassName = "Me".$Pname;\r\n		return new $pClassName();\r\n	}\r\n}\r\nclass YouCreator implements Pcreator {\r\n	public function createP($Pname){\r\n		$pClassName = "You".$Pname;\r\n		return new $pClassName();\r\n	}\r\n}\r\n$abstractCreator = new abstractCreator();\r\necho $abstractCreator->getCreate("Me")->createP("Instance")->spare;\r\n?>      ', NULL, 2009, '2009-05', 129, 2, ''),
(55, 'HTML 5取代Flash？', NULL, ' Opera的CEO Jon von Tetzchner声称下一代的HTML标准语言将让Adobe的Flash技术变得多余，他表示相比私有的Flash，HTML 5中的开放标准提供了一个传递富媒体内容的可行方法。\r\n \r\n 从2004年起，Opera，Apple和Mozilla开始共同制定HTML 5标准。HTML 5包含大量修改，如新的控制音频和视频内容的API。Von Tetzchner称HTML 5处理富媒体内容特性让应用最普遍的Flash变得可有可无，用户不再需要Flash做Web标准能做的事情。Von Tetzchner称这并不意味着要杀死Flash，他说，我喜欢Adobe，他们是一家很棒的公司。我想Flash将会存在很长的时间，但很自然Web标准也在进化....用户可以选择用Web标准或Flash去传递富媒体内容。\r\n\r\n      ', NULL, 2009, '2009-05', 122, 2, ''),
(56, '端午节回家了', NULL, '  端午节回家了,家里的粽子就是要好吃很多...想起儿时,每逢端午的时候,就吵着父母包粽子...记得起上初中二年级时,奶奶过世了,而我们那里流传一句:"倘若家中有亲人过世,在3年之内是不能包粽子的".在那时段里,邻家的吃的都是粽子,而我们家的呢,缺是糯米饭,虽然粽子的主要原材料也是糯米,但糯米饭就是没粽子好吃!\r\n  回首黯然,现在粽子没儿时的粽子有味道了,没那么好吃了!\r\n  \r\n  ', NULL, 2009, '2009-05', 111, 1, ''),
(57, '刚才有一位陌生人加我的Q', NULL, '  刚才有一位陌生人加我的Q,他说他是Td love cms系统的使用者, 我们聊了许久,他其中说到了我很bu中听的一句话" 学好英语，日语，，别搞技术，，你可以有技术，，但不能搞技术，搞技术没前途"。\r\n  那位仁兄也许说得很有道理,但我始终都无法接受...貌似被雷劈的感觉,那滋味很怪怪的,但我始终都那么认为"地球上总会有着属于自己的那么一个角落"。\r\n  也许明天谁也想不到,谁也无法意料...\r\n      ', NULL, 2009, '2009-05', 131, 1, ''),
(58, '转行了--新的目标开始了', NULL, '  呵呵.发现新的陆地,转行了--新的目标开始了... \r\n      ', NULL, 2009, '2009-05', 96, 1, ''),
(59, '今天是小朋友的节日', NULL, '   呵呵,六一.儿童节到了...', NULL, 2009, '2009-06', 94, 1, ''),
(60, '本站日IP已有100了', NULL, '  这个站，在我这些日子里的精心呵护下,日IP已达到100了...还要继续努力.. ', NULL, 2009, '2009-06', 78, 1, ''),
(61, '方便别人等于方便自己', NULL, '  那是一个漆黑的夜晚，没有月亮，也没有星星。我因为有急事要去一个住在郊区的同事家，为赶时间，便抄近路走入一条偏僻的小巷。我心里害怕的咚咚直响。真后悔不该走这条路，可是事已至此，只得硬着头皮向前走。走着走着，突然，我发现前面有一处光亮，似乎是一个人提着一个灯笼在走，我疾步赶了上去，正想打声招呼，却发现他是一个盲人，一手拿着一根竹竿小心翼翼的探路，一手提着一只灯笼。我纳闷了，忍不住问他：“您自己看不见，为什么要提个灯笼赶路？”\r\n    盲人缓缓的说道：“这个问题不止一个人问我了，其实道理很简单，我提灯笼并不是为自己照路，而是让别人容易看到我，不会误撞到我，这样就可保护自己的安全。而且，这么多年来，由于我的灯笼为别人带来光亮，为别人引路，人们也常常热情的搀扶我，引领我走过一个又一个沟坎，使我免受许多危险。你看，我这不是既帮助了别人，也帮助了自己吗？所以，每到晚上出门，我总提着一盏灯笼。\r\n    盲人说完，继续吧嗒吧嗒往前走，我跟在他身边，在也没有说一句话，只是每有路障，我都小心翼翼的扶他一把。该拐弯了，我想对盲人说句感谢的话，却不知该怎样表达才好，末了，我只说了一句：“您好走？”这时，我发现天空似乎亮了好多......      ', NULL, 2009, '2009-06', 98, 1, ''),
(62, '今天本站的日ip已快达到400了', NULL, '   今天本站的日ip已快达到400了,继续往前冲吧!呵呵~', NULL, 2009, '2009-06', 81, 1, ''),
(63, 'RewriteEngine', NULL, 'RewriteEngine on 开启RewriteEngine\r\nDirectoryIndex index.do  index.php index.html 首页默认索引  \r\norder deny,allow\r\nAddType application/x-httpd-php .do .cgi  .php php扩展\r\nphp_flag magic_quotes_gpc off 不转义数据\r\n\r\n#rewritecond %{REQUEST_URI} ^[^\\.]+$\r\n#rewritecond %{QUERY_STRING} ^(.*)$\r\n#rewriterule ^([^\\/\\?]+)$ get.php?user=$1¶ms=%1 $1引用前边正则里的第一个圆括号里的内容\r\n\r\n\r\n#RewriteRule ^page/([\\d]+)/([\\w]+)/$ /index.php [L]\r\n#RewriteRule  ^([\\d]+)/([\\w]+)/$ /get.php    [L]\r\nRewriteRule  (\\d+)/(\\w+)/$ /get.php?id=$1&action=$2   [L]\r\n    \r\n      ', NULL, 2009, '2009-06', 124, 1, ''),
(82, '郁闷！', NULL, ' 前段时间,我还说我这个站没备案一直都没被封,感觉很良好!那知道，4天前我这个站就被封了,,本想备案，哪知道我的身份证号码被以前的kangyunchuan.cn使用过，而那域名早已过期了无法获得域名注册证书,并且在过期之前没注销该备案信息,, 汗!备案管理系统的用户名也丢失了...本想这下可完了,,,猜了好几天，今天终于的猜出了备案管理系统的用户名...终于备好案了!!\r\n  下次我不会租用国内的主机了,换港澳或国外的吧!  ', NULL, 2009, '2009-07', 107, 1, ''),
(64, '以前的一些东西', NULL, 'Mysql中统计数据记录最常用两种方法： \r\n 1."select count(*) as counter from online";\r\n 2. mysql_num_rows();\r\n        ', NULL, 2009, '2009-06', 98, 2, ''),
(65, '当懒惰已成为习惯...', NULL, '  每个人都有自己的理想,当然拥有自己的理想就不一定要去实现,拥有理想同时也拥有了目标的雏形...需要不断的探索才能领悟出一些道理,当懒惰已成了习惯,推辞已成了借口....那么什么事情做起来就显得很费力,愚钝,从此自己的目标已飘然而过,就成为了一个幻想.....   ', NULL, 2009, '2009-06', 104, 1, ''),
(66, 'Td-Love CMS系统', NULL, '  Td-Love CMS系统由本人开发,现已被国内N家著名站点收录,由于开发时间仓促...程序有很多不足的地方，但可直接使用于实际项目或入门学习，还请大家多多包涵....\r\n  华军下载地址:http://web.newhua.com/soft/3510.htm\r\n  河源下载地址:http://www.cngr.cn/soft/83/sort0466/2009/2009042339238.html\r\n  \r\n    \r\n      ', NULL, 2009, '2009-06', 151, 2, '');
INSERT INTO `article` (`id`, `caption`, `shortContent`, `content`, `tags`, `times`, `date`, `degree`, `cate_id`, `password`) VALUES
(67, 'js和css应在html中分离', NULL, ' 平时在我们开发中,可能没怎么注意这些东东\r\n web应用中js,css等外部文件单独存放的好处:\r\n1.方便管理,代码重用性.\r\n2.减少下载时间(浏览器只会下载一次且保存在缓存中)提高速度.\r\n3.减少代码的臃肿性\r\n第一点我就不用多说了,相信大家都清楚..\r\n第二点--js不单独存放:\r\n<html>\r\n<head>\r\n<script language="javascript">\r\nalert("浏览器每次都会下载我!");\r\n</script>\r\n</head>\r\n<body>\r\n</body>\r\n</html>\r\n第二点--js文件单独存放:\r\n<html>\r\n<head>\r\n<!--这里的js文件浏览器不会每次下载.下载一次保存至缓存中-->\r\n<script src="js.js" language="javascript"></script>\r\n</head>\r\n<body>\r\n</body>\r\n</html>\r\n第三点至于代码的臃肿性:你应发现,将js代码或css代码和html代码写在一起时感觉很凌乱不堪,眼花缭乱...整个代码的可读性很差!\r\n      ', NULL, 2009, '2009-06', 155, 2, ''),
(68, 'Discuz!核心代码分析(1)', NULL, '本站原创,未经许可严谨转载\r\ncommon.inc.php文件\r\n<?php\r\nerror_reporting(0);//屏蔽脚本错误\r\nset_magic_quotes_runtime(0);//关闭php的魔法引用\r\n$mtime = explode('' '', microtime());//返回当前Unix 时间戳和微秒数并使用空格作为分隔符拆分到数组$mtime\r\n$discuz_starttime = $mtime[1] + $mtime[0];//将页面执行的开始时刻的时间戳保存至$discuz_starttime\r\ndefine(''SYS_DEBUG'', FALSE);//当前脚本是否运行在系统出错状态\r\ndefine(''IN_DISCUZ'', TRUE);//定义DZ程序代码的运行范围\r\ndefine(''DISCUZ_ROOT'', substr(dirname(__FILE__), 0, -7));//DZ脚本程序的根目录\r\ndefine(''MAGIC_QUOTES_GPC'', get_magic_quotes_gpc());//当前php运行环境中对get,post.cookies的变量值是否执行php魔法应用的设置\r\n!defined(''CURSCRIPT'') && define(''CURSCRIPT'', '''');//检查当前是否定义CURSCRIPT常量,若没有将其定义为空\r\n\r\nif(PHP_VERSION < ''4.1.0'') {\r\n	/*\r\n	本段代码:保持版本低于4.1.0的php环境的预定义变量名的兼容性\r\n	在4.1.0前的版本,要么依赖register_globals或$HTTP_*_VARS的形式变量\r\n	在4.1.0后的版本,$_* 如($_GET)才生效\r\n	*/\r\n	$_GET = &$HTTP_GET_VARS;\r\n	$_POST = &$HTTP_POST_VARS;\r\n	$_COOKIE = &$HTTP_COOKIE_VARS;\r\n	$_SERVER = &$HTTP_SERVER_VARS;\r\n	$_ENV = &$HTTP_ENV_VARS;\r\n	$_FILES = &$HTTP_POST_FILES;\r\n}\r\n\r\nif (isset($_REQUEST[''GLOBALS'']) OR isset($_FILES[''GLOBALS''])) {\r\n	/*\r\n	本段代码:检测是否设置$_REQUEST[''GLOBALS'']或$_FILES[''GLOBALS''],若存在,\r\n	程序将提示尝试请求的数据可能是不脏数据,并退出....\r\n	*/\r\n	exit(''Request tainting attempted.'');\r\n}\r\n\r\nrequire_once DISCUZ_ROOT.''./include/global.func.php'';//载入global.func.php文件\r\ngetrobot();//此自定义函数判断客户端HTTP_USER_AGENT的值而得知正在访问的客户端是否为搜索引擎机器人\r\n\r\nif(defined(''NOROBOT'') && IS_ROBOT) {\r\n	/*\r\n	若定义了NOROBOT常量或\r\n	检测访问当前页的客户端是否为搜索引擎机器人,若是机器人则退出....\r\n	最终含义为不希望被搜索引擎看到的页面....\r\n	*/\r\n	exit(header("HTTP/1.1 403 Forbidden"));\r\n}\r\n      ', NULL, 2009, '2009-06', 281, 2, ''),
(77, '很久以前的--没事翻出来了', NULL, '  人人都会的技术，就不叫技术.人人都有的证书,那证书也不过是一张\r\nwaste paper而已,接受过高等教育你又会怎样呢？那不过只是你的一个经历，在当今社会你不得不承认这一铁的事实,昔日的辉煌,成就不了你未来的人生。。\r\n  技术是源于不断的更新，不要因为懒惰而逃避.学习是一辈子的事情.想起在暑假里，父母为了我的爱好，为了能实现我的一个梦想，把家里仅有的积蓄都拿了出来，让我去认识了一门新的技术，我很感谢他们，我很欣慰我有这么好的父母.我不会辜负他们的期望，在这这经济危机的时段里，师兄师姐面临的都是失业，所谓一毕业就失业，我开始后悔，后悔以前丢掉那么好的工作，反而又回到校园.....这可能也是我人身中的一个成长历程吧！\r\n\r\n 该来的始终要来！记得昨天群里一位技术老大哥发出了内心的哀叹:"我的工资一下子被降了700块，\r\n为了度过互联网的冬天和经济危机". 大伙都看到了这么一条信息，都给被吓到了“这工资\r\n也降得太离谱了吧！”.没办法，咋们要接受事实吧！想起真的很可怕......    \r\n      ', NULL, 2009, '2009-06', 127, 1, ''),
(70, '很经典', NULL, '1.社会不在乎你的尊严,尊严要靠你履行自己的工作职责来争取\r\n2 没人在乎你的意见,你可以发表,但大多数时间是废话\r\n3 不要以为只有你有压力,你的主管也许压力比你更大,\r\n4 不要把对你好的人当好人,也不要把对你恶的人当恶人\r\n5 正常的锻炼当锻炼,非常的锻炼当磨练\r\n6 受了委屈,不要到处去说,那是弱者,\r\n7 不要把太多注意力放在OFFICE里的漂亮女孩身上,那会引起很多人不满,漂亮女孩子谁都喜欢,如果识相的话,不要在老板面前和女孩子调情。\r\n8 你可以把辞职报告很潇洒的交到老板手里,潇洒的告诉他,你不干了,但你转身走,老板把你的辞职报告扔在纸篓里,告诉秘书，明天再叫XX来上班,工资再低点。\r\n9 不要喊零工资就业,劳动力本身也是有价格的,你喊零工资,人家怎么活啊。\r\n10 如果可以,先不谈恋爱,双方都很辛苦,如果住在一起,那就相互鼓励,风雨总会过去.\r\n再额外送一句给刚出来上班的漂亮的女孩子,一个女孩子在职场生存的话,必须要有四样宝贝,智慧,学识,情趣,最后才是美丽,如果你只有美丽,那就离臭男人远点.\r\n你目前的困境不是你的错,不是你父母的错,是政Z府F的错.你既然生活在这样的时代,那么,也只好适应他      ', NULL, 2009, '2009-06', 111, 1, ''),
(71, '学习安全技术', NULL, ' 这些天很闷,在了解一些计算机安全技术//\r\n使用了灰鸽子软件,也抓了一些JJ...感觉很兴奋,\r\n同时也深感,作为一名计算机技术相关人员,学习安全技术\r\n是必不可少的!     ', NULL, 2009, '2009-06', 118, 1, ''),
(72, '-_-!', NULL, '  有着清晰的计划,也有着现实的目标...缺因在此,而不知明天,整天彷徨和浮躁,这时需要的是理性! ', NULL, 2009, '2009-06', 81, 1, ''),
(74, 'PHP生成统计图', NULL, '<html>\r\n<head>\r\n</head>\r\n<style type="text/css">\r\n#td{margin-bottom:200px;background:#006600;width:30px;}\r\n</style>\r\n<body>\r\n<?\r\n/**\r\n * @author :Eggshell QQ:334192009\r\n * @name :php生成统计图\r\n */\r\n$as = array(100,210,220,260,300,320,80,70,20,15);\r\n?>\r\n<table width="54" height="295" border="0">\r\n<tr valign="bottom">\r\n<?for($i=0;$i<10;$i++){?>\r\n<td>\r\n<table width="41" height="152" border="0">\r\n<tr>\r\n<td><div id="td" style="height:<?=$as[$i]?>px;"><?=$as[$i]?></div></td>\r\n</tr>\r\n</table>\r\n</td>\r\n<?}?>\r\n</tr>\r\n</table>\r\n</body>\r\n</html>     ', NULL, 2009, '2009-06', 178, 2, ''),
(75, 'APACHE防止多线程下载', NULL, '  mod_limitipconn.c是一个非官方的apache模块，可以用来作为WEB文件的下载限制\r\n，但是它是使用ExtendedStatus On形式，工作在应用层。当同一个IP的连接到达\r\n限制的时候，apache对get请求发送：\r\n\r\nHTTP/1.1 503 Service Temporarily Unavailable\r\n\r\n从而使用户不能下载，但并不能阻止这种攻击，仍旧允许连接的。不过这个东东对\r\n网管来说还是很有用的，特别是下载站的网管。简单介绍一下安装（动态模块方式\r\n安装，假设你的apache已经装在/usr/local/apache目录下）：\r\n\r\n下载：http://dominia.org/djao/limit/mod_limitipconn-0.04.tar.gz\r\n\r\n# tar xzf mod_limitipconn-0.04.tar.gz\r\n# cd mod_limitipconn-0.04\r\n# vi Makefile\r\n\r\n把第一行的：\r\n\r\nAPXS = apxs\r\n\r\n改为\r\n\r\nAPXS = /usr/local/apache/bin/apxs\r\n\r\n然后：\r\n\r\n# make\r\n# make install\r\n\r\n修改apache配置文件：\r\n\r\n# vi /usr/local/apache/conf/httpd.conf\r\n\r\nExtendedStatus On ###make install时这句前面的#没有去掉，一定要去掉\r\n\r\n###make install已经加了下面两句，确认存在就行了\r\nLoadModule limitipconn_module libexec/mod_limitipconn.so\r\nAddModule mod_limitipconn.c\r\n\r\n###下面就是对web目录下的文件下载限制\r\n\r\n\r\nMaxConnPerIP 3 ###限制web根目录同一个IP只能同时开3进程下载\r\n\r\n# 还有其它选项，如：\r\n# NoIPLimit image/*\r\n# OnlyIPLimit audio/mpeg video\r\n# 可以设置多个Location\r\n\r\n \r\n\r\n重启apache，用多线程的下载工具下载时，大于3个线程，其余的将得到信息：\r\n\r\nHTTP/1.1 503 Service Temporarily Unavailable\r\n\r\n或者根据User_Agent判断，把已知的多线程工具都给deny 掉\r\nin httpd.conf\r\n.....\r\nBrowserMatch "NetAnt" badguy\r\nBrowserMatch "GetRight" badguy\r\nBrowserMatch "JetCar" badguy\r\nBrowserMatch "Mass Downloader" badguy\r\nBrowserMatch "ReGet" badguy\r\nBrowserMatch "DLExpert" badguy\r\nBrowserMatch "FlashGet" badguy\r\nBrowserMatch "Offline Explorer" badguy\r\nBrowserMatch "Teleport" badguy\r\n...........\r\n\r\norder deny,allow\r\ndeny from env=badguy\r\nallow from all\r\n\r\n\r\n注意httpd里面应该有 mod_setenvif模块。    ', NULL, 2009, '2009-06', 130, 2, ''),
(76, '夜深了...我刚忙完!', NULL, '  很久都没写过程序了,心血来潮--发现小站上差一个用户订阅的功能,于是乎就开始摸索了...\r\n  花了近2个小时,搞得人困马乏,果然成功源自于不断的探索与坚持,功能终于完善了!    ', NULL, 2009, '2009-06', 92, 1, ''),
(78, '关于备案', NULL, ' 谈到网站备案,各大idc服务商都与客户交流过,网站做好后一定要备案,不备案会被封的.\r\n 谈到这里,我觉得还真有点奇怪...我现在这个空间和域名是邹哥送给我的,以前放的是一个DZ的论坛\r\n，空间和域名都快1年了,都还没备案...到现在还没被封!O(∩_∩)O~~   \r\n      \r\n      \r\n      \r\n      ', NULL, 2009, '2009-06', 112, 1, ''),
(79, '加密功能测试(密码为1234)', NULL, '  加密功能测试!\r\n      \r\n      \r\n      \r\n      \r\n      \r\n      ', NULL, 2009, '2009-06', 196, 2, '1234'),
(80, '珍惜...', NULL, '  刚上床了,不经意的发现裤袋里软软的,不知道是什么东西,结果掏出来一看，是今天下午-你裙子上掉下的小花,我轻轻抚摸着她,生怕把她惊吓到了...心里沾沾自喜--问着她那散发出迷人的香味,感觉挺爽的!\r\n 过不了几天,你就要离开学校了..我真的很舍不得你啊,我现在真的是离不开你了,你也对我说过,以后我们不能相隔太远,其实我也何尝不是这样的想的呢.上天好不容易把我们安排在一起(现在),我会好好珍惜的,呵呵！寝室关灯了，不写了...这辈子，我“吃”定你了,(*^__^*) 嘻嘻……\r\n      ', NULL, 2009, '2009-06', 115, 1, 'com'),
(85, '谈工作感受(1)', NULL, '  在都亚科技已经有两周了,这两周以来...感觉到了很多,公司里就我一个程序员(美工也包了),每天大多是与前台页面打交道,偶尔做做新功能的开发,不断的在ECSHOP的基础上做反复的修改,有时呢还要用用PS,其实这些我都觉得还没什么,最牛x的地方就是,一个底部版权文字之间的空格,老总居然还拿着尺子向我比划--"这字符间的空格最好在9毫米,好像那两个字之间的空格已经是10毫米了,能否减少1毫米",我很是无语的操作着...', NULL, 2009, '2009-07', 135, 1, ''),
(87, 'ecshop中jQuery致命冲突解决方案', NULL, '  主要就是Ecshop的AJAX传输类，transport.js中重写了object的对象原型，从而导致了与jq框架的冲突。\r\n解决：\r\n1. 删除transport.js中587行 - 636行中关于object.prototype.toJSONString的定义\r\n2. 自定义一个方法用于object对象的json序列化\r\n如下\r\nfunction obj2str(o)\r\n{\r\n  //开始\r\n      var r = [];\r\n   if(typeof o =="string") return "\\""+o.replace(/([\\''\\"[url=file://\\\\])/g,]\\\\])/g,"\\\\$1").replace(/(\\n)/g,"\\\\n").replace(/(\\r)/g,"\\\\r").replace(/(\\t)/g,"\\\\t")+"\\[/url]"";\r\n   if(typeof o =="undefined") return "undefined";\r\n   if(typeof o == "object"){    \r\n    if(o===null) return "null";\r\n    else if(!o.sort){\r\n     for(var i in o)\r\n     {  \r\n      if(i!="toJSONString") //增加判断，清除对object原型的定义加入到json中\r\n      r.push("\\""+i+"\\""+":"+obj2str(o));\r\n     }\r\n     r="{"+r.join()+"}";\r\n    }else{\r\n     for(var i =0;i<o.length;i++)\r\n      r.push(obj2str(o))\r\n     r="["+r.join()+"]"\r\n    }\r\n    return r;\r\n   }\r\n   return o.toString();\r\n  //结束   \r\n}\r\n3. 在模板页和js脚本中所有对于obj.toJSONString()的地方，一概替换为obj2str(obj)\r\n4. 重写好后发现compare.js, 主要重写其中的定时器功能。 将以下代码替换到compare.js中\r\nvar Compare = new Object();\r\nCompare = {\r\n  add : function(goodsId, goodsName, type)\r\n  {\r\n    var count = 0;\r\n    for (var k in this.data)\r\n    {\r\n      if (typeof(this.data[k]) == "function")\r\n      continue;\r\n      if (this.data[k].t != type) {\r\n        alert(goods_type_different.replace("%s", goodsName));\r\n        return;\r\n      }\r\n      count++;\r\n    }\r\n    if (this.data[goodsId])\r\n    {\r\n      alert(exist.replace("%s",goodsName));\r\n      return;\r\n    }\r\n    else\r\n    {\r\n      this.data[goodsId] = {n:goodsName,t:type};\r\n    }\r\n    this.save();\r\n    this.init();\r\n  },\r\n  init : function(){\r\n    this.data = new Object();\r\n    var cookieValue = document.getCookie("compareItems");\r\n    if (cookieValue != null) {\r\n      this.data = cookieValue.parseJSON();\r\n    }\r\n    if (!this.compareBox)\r\n    {\r\n      this.compareBox = document.createElement("DIV");\r\n      var submitBtn = document.createElement("INPUT");\r\n      this.compareList = document.createElement("UL");\r\n      this.compareBox.id = "compareBox";\r\n      this.compareBox.style.display = "none";\r\n      this.compareBox.style.top = "200px";\r\n      this.compareBox.align = "center";\r\n      this.compareList.id = "compareList";\r\n      submitBtn.type = "button";\r\n      submitBtn.value = button_compare;\r\n   this.compareBox.appendChild(this.compareList);\r\n      this.compareBox.appendChild(submitBtn);\r\n      submitBtn.onclick = function() {\r\n        var cookieValue = document.getCookie("compareItems");\r\n        var obj = cookieValue.parseJSON();\r\n        var url = document.location.href;\r\n        url = url.substring(0,url.lastIndexOf(''/'')+1) + "compare.php";\r\n        var i = 0;\r\n        for(var k in obj)\r\n        {\r\n          if(typeof(obj[k])=="function")\r\n          continue;\r\n          if(i==0)\r\n            url += "?goods[]=" + k;\r\n          else\r\n            url += "&goods[]=" + k;\r\n          i++;\r\n        }\r\n        if(i<2)\r\n        {\r\n          alert(compare_no_goods);\r\n          return ;\r\n        }\r\n        document.location.href = url;\r\n      }\r\n      document.body.appendChild(this.compareBox);\r\n    }\r\n    this.compareList.innerHTML = "";\r\n    var self = this;\r\n    for (var key in this.data)\r\n    {\r\n      if(typeof(this.data[key]) == "function")\r\n        continue;\r\n      var li = document.createElement("LI");\r\n      var span = document.createElement("SPAN");\r\n      span.style.overflow = "hidden";\r\n      span.style.width = "100px";\r\n      span.style.height = "20px";\r\n      span.style.display = "block";\r\n      span.innerHTML = this.data[key].n;\r\n      li.appendChild(span);\r\n      li.style.listStyle = "none";\r\n      var delBtn = document.createElement("IMG");\r\n      delBtn.src = "themes/default/images/drop.gif";\r\n      delBtn.className = key;\r\n      delBtn.onclick = function(){\r\n        document.getElementById("compareList").removeChild(this.parentNode);\r\n        delete self.data[this.className];\r\n        self.save();\r\n        self.init();\r\n      }\r\n      li.insertBefore(delBtn,li.childNodes[0]);\r\n      this.compareList.appendChild(li);\r\n    }\r\n    if (this.compareList.childNodes.length > 0)\r\n    {\r\n      this.compareBox.style.display = "";\r\n      this.timer = window.setInterval("flowdiv(''compareBox'')", 50);\r\n    }\r\n    else\r\n    {\r\n      this.compareBox.style.display = "none";\r\n      window.clearInterval(this.timer);\r\n      this.timer = 0;\r\n    }\r\n  },\r\n  save : function()\r\n  {\r\n    var date = new Date();\r\n    date.setTime(date.getTime() + 99999999);\r\n    document.setCookie("compareItems", obj2str(this.data));\r\n  },\r\n  lastScrollY : 0\r\n}\r\n\r\n//用于定时器的自动滚动的层\r\nlastScrollY=0;\r\nfunction flowdiv(domid){\r\n　　　var diffY;\r\n　　　　if (document.documentElement && document.documentElement.scrollTop)\r\n　　　　　　diffY = document.documentElement.scrollTop;\r\n　　　　else if (document.body)\r\n　　　　　　diffY = document.body.scrollTop\r\n　　　　else\r\n　　　　　　{/*Netscape stuff*/}\r\n　　　　//alert(diffY);\r\n　　　　percent=.1*(diffY-lastScrollY); \r\n　　　　if(percent>0) percent=Math.ceil(percent); \r\n　　　　else percent=Math.floor(percent); \r\n　　　　document.getElementById(domid).style.top=parseInt(document.getElementById(domid).style.top)+percent+"px";\r\n　　　　lastScrollY=lastScrollY+percent; \r\n　　　　//alert(lastScrollY);\r\n}    ', NULL, 2009, '2009-07', 445, 2, ''),
(88, 'SPL库-观察者模式', NULL, '<?php\r\n/**\r\n * @author :KangYunChuan\r\n * @name :观察者模式\r\n *\r\n */\r\nclass DemoSubject implements SplSubject {\r\n	private $observers,$value;\r\n	public function __construct(){\r\n		$this->observers = array();\r\n	}\r\n	public function attach(SplObserver $observer){\r\n		/**\r\n		 * 把SplObserver对象存入数组\r\n		 */\r\n		$this->observers[] = $observer;\r\n	}\r\n	public function detach(SplObserver $observer){\r\n		if ($idx = array_search($observer,$this->observers,true)) {\r\n			unset($this->observers[$idx]);\r\n		}\r\n	}\r\n	public function notify(){\r\n		/**\r\n		 * 遍历SplObserver对象生成的数组\r\n		 */\r\n			foreach ($this->observers as $observer){\r\n				$observer->update($this);\r\n			}\r\n	}\r\n	public function setValue($value){\r\n		$this->value = $value;\r\n		$this->notify();\r\n	}\r\n	public function getValue(){\r\n		return $this->value;\r\n	}\r\n}\r\nclass DemoObserver implements SplObserver {\r\n	public function update(SplSubject $subject){\r\n		echo ''The new value is ''.$subject->getValue();\r\n	}\r\n}\r\n$subject = new DemoSubject();\r\n$observer = new DemoObserver();\r\n$subject->attach($observer);\r\n$subject->setValue(5);\r\n?>      ', NULL, 2009, '2009-08', 153, 2, ''),
(89, 'PHP开源电子商务系统-ecshop', NULL, ' 用ecshop已经有一段时间了,在二次开发中,发现ecshop也有不人性化的地方.\r\n 对于它不人性化的地方,我在使用过程中遇到的两点:1.模板中所使用的公共lbi库没有做好关联,以至于修改模板时做烦琐的工作.2.添加文章时不能自定义时间,当然每个程序都有它的缺点!\r\n      \r\n      ', NULL, 2009, '2009-08', 106, 2, ''),
(90, '没时间写日志!', NULL, '  上班太忙了,没时间写日志!     ', NULL, 2009, '2009-08', 88, 1, ''),
(91, 'PHP反射API-实例', NULL, ' <?php\r\n/**\r\n *@name :PHP利用反射机制获取用户自声明的类--反射API\r\n *@author :PHPCQ.COM\r\n */\r\nclass UserClass{\r\n	public function userMethod($userParameter = ''default''){\r\n		\r\n	}\r\n}\r\nforeach (get_declared_classes() as $class){\r\n	$reflection = new ReflectionClass($class);\r\n	if ($reflection->isUserDefined()) {//判断是否是自声明的类\r\n		Reflection::export($reflection);//打印出该类的一些资料\r\n	}\r\n}     ', NULL, 2009, '2009-08', 186, 2, ''),
(92, 'PHP反射API--利用反射技术实现的插件系统架构', NULL, ' <?php\r\n/**\r\n * @name :PHP反射API--利用反射技术实现的插件系统架构\r\n * @author :PHPCQ.COM\r\n */\r\ninterface Iplugin{\r\n        public static function getName();\r\n}\r\nfunction findPlugins(){\r\n        $plugins = array();\r\n        foreach (get_declared_classes() as $class){\r\n                $reflectionClass = new ReflectionClass($class);\r\n                if ($reflectionClass->implementsInterface(''Iplugin'')) {\r\n                        $plugins[] = $reflectionClass;\r\n                }\r\n        }\r\n        return $plugins;\r\n}\r\nfunction computeMenu(){\r\n        $menu = array();\r\n        foreach (findPlugins() as $plugin){\r\n                if ($plugin->hasMethod(''getMenuItems'')) {\r\n                        $reflectionMethod = $plugin->getMethod(''getMenuItems'');\r\n                        if ($reflectionMethod->isStatic()) {\r\n                                $items = $reflectionMethod->invoke(null);\r\n                        } else {\r\n                                $pluginInstance = $plugin->newInstance();\r\n                                $items = $reflectionMethod->invoke($pluginInstance);\r\n                        }\r\n                        $menu = array_merge($menu,$items);\r\n                }\r\n        }\r\n        return $menu;\r\n}\r\nfunction computeArticles(){\r\n        $articles = array();\r\n        foreach (findPlugins() as $plugin){\r\n                if ($plugin->hasMethod(''getArticles'')) {\r\n                        $reflectionMethod = $plugin->getMethod(''getArticles'');\r\n                        if ($reflectionMethod->isStatic()) {\r\n                                $items = $reflectionMethod->invoke(null);\r\n                        } else {\r\n                                $pluginInstance = $plugin->newInstance();\r\n                                $items = $reflectionMethod->invoke($pluginInstance);\r\n                        }\r\n                        $articles = array_merge($articles,$items);\r\n                }\r\n        }\r\n        return $articles;\r\n}\r\nrequire_once(''plugin.php'');\r\n$menu = computeMenu();\r\n$articles  = computeArticles();\r\nprint_r($menu);\r\nprint_r($articles);\r\n\r\n\r\n//plugin.php 代码如下\r\n<?php\r\nclass MycoolPugin implements Iplugin {\r\n        public static function getName(){\r\n                return ''MycoolPlugin'';\r\n        }\r\n        public static function getMenuItems(){\r\n                return array(array(''description''=>''MycoolPlugin'',''link''=>''/MyCoolPlugin''));\r\n        }\r\n        public static function getArticles(){\r\n                return array(array(''path''=>''/MycoolPlugin'',''title''=>''This is a really cool article'',''text''=>xxxxxxxxx''));\r\n        }\r\n}     \r\n      ', NULL, 2009, '2009-08', 219, 2, ''),
(93, 'MVC框架-前端控制器-原理', NULL, '<?php\r\n/**\r\n * @name :前端控制器.front.php\r\n * @author :PHPCQ.COM\r\n *\r\n */\r\nclass FrontController{\r\n	protected $_controller,$_action,$_params,$_body;\r\n	static $_instance;\r\n	public static function getInstance(){\r\n		if (!(self::$_instance instanceof  self)) {\r\n			self::$_instance = new self();\r\n		}\r\n		return self::$_instance;\r\n	}\r\n	private function __construct(){\r\n		$request = $_SERVER[''REQUEST_URI''];\r\n		$splits = explode(''/'',trim($request,''/''));\r\n		$this->_controller = !empty($splits[0])?$splits[0]:''index'';\r\n		$this->_action = !empty($splits[1])?$splits[1]:''index'';\r\n		if (!empty($splits[2])) {\r\n			$keys = $values = array();\r\n			for ($index = 2,$cnt = count($splits);$idx < $cnt;$idx++){\r\n				if ($idx % 2 == 0) {\r\n					$keys[] = $splits[$idx];\r\n				} else {\r\n					$values[] = $splits[$idx];\r\n				}\r\n			}\r\n			$this->_params = array_combine($keys,$values);\r\n			//print_r($this->_params);\r\n		}\r\n	}\r\n	public function route(){\r\n		if (class_exists($this->getController())) {\r\n			$rc = new ReflectionClass($this->getController());\r\n			if ($rc->implementsInterface(''IController'')) {\r\n				if ($rc->hasMethod($this->getAction())) {\r\n					$controller = $rc->newInstance();\r\n					$method = $rc->getMethod($this->getAction());\r\n					$method->invoke($controller);\r\n				} else {\r\n					throw new Exception("Action");\r\n				}\r\n			} else {\r\n				throw new Exception("Interface");\r\n			} \r\n		} else {\r\n			throw new Exception("Controller");\r\n		}\r\n	}\r\n	public function getParams(){\r\n		return $this->_params;\r\n	}\r\n	public function getController(){\r\n		return $this->_controller;\r\n	}\r\n	public function getAction(){\r\n		return $this->_action;\r\n	}\r\n	public function getBody(){\r\n		return $this->_body;\r\n	}\r\n	public function setBody($body){\r\n		$this->_body = $body;\r\n	}\r\n}      ', NULL, 2009, '2009-08', 145, 2, ''),
(94, 'MVC框架-默认控制器-原理', NULL, '<?php\r\n/**\r\n * @name :默认控制器\r\n * @author :PHPCQ.COM\r\n *\r\n */\r\nclass index implements IController {\r\n	public function index(){\r\n		$fc = FrontController::getInstance();\r\n		$params = $fc->getParams();\r\n		$views = new View();\r\n		$views->name = $params[''name''];\r\n		$result = $views->render(''../views/index.php'');\r\n		\r\n		$fc->setBody($result);\r\n	}\r\n}      ', NULL, 2009, '2009-08', 113, 2, ''),
(95, 'MVC框架-VIEW模板类-原理', NULL, ' <?php\r\n/**\r\n * @name :模板类\r\n * @author :PHPCQ.COM\r\n */\r\nclass View extends ArrayObject {\r\n	public function __construct(){\r\n		parent::__construct(array(),ArrayObject::ARRAY_AS_PROPS);\r\n	}\r\n	public function render($file){\r\n		ob_start();\r\n		include(dirname(__FILE__).''/''.$file);\r\n		return ob_get_clean();\r\n	}\r\n}     ', NULL, 2009, '2009-08', 142, 2, ''),
(96, 'MVC框架-引导加载器-原理', NULL, '<?php\r\n/**\r\n * @name :引导加载器\r\n * @author :PHPCQ.COM\r\n */\r\n//导入组件\r\nrequire_once(''application/models/front.php'');\r\nrequire_once(''application/models/icontroller.php'');\r\nrequire_once(''application/models/view.php'');\r\n//导入控制器\r\nrequire_once(''application/controllers/index.php'');\r\n//初始化前端控制器\r\n$front = FrontController::getInstance();\r\n\r\n$front->route();\r\necho $front->getBody();      ', NULL, 2009, '2009-08', 144, 2, ''),
(97, 'MVC框架-模板文件', NULL, '  hello ,<?php echo $this->name;?>', NULL, 2009, '2009-08', 90, 2, ''),
(98, 'ecshop热门搜索关键词改进', NULL, '  为避免后台管理系统中--首页显示的搜索关键字,请用空格分隔多个关键字而无法组合英文词组的改进,我这里将用|分割词组\r\n\r\n找到includes/lib_main.php下的assign_template()函数,将\r\n\r\n   if (!empty($GLOBALS[''_CFG''][''search_keywords'']))\r\n    {\r\n        $searchkeywords = explode('' '', trim($GLOBALS[''_CFG''][''search_keywords'']));\r\n    }\r\n\r\n   修改成\r\n\r\n   if (!empty($GLOBALS[''_CFG''][''search_keywords'']))\r\n    {\r\n        $searchkeywords = explode(''|'', trim($GLOBALS[''_CFG''][''search_keywords'']));\r\n    }\r\n\r\n     ', NULL, 2009, '2009-08', 222, 2, ''),
(99, 'ecshop-SEO之路(英文站)', NULL, ' ecshop的seo技术做得非常出色...\r\n 但为了达到更好的效果,你不妨试试下面的操作!\r\n\r\n  URL对于SEO也有一定的影响,但大家往往忽略了--网页后缀扩展.如果URL是目录结构的就没必要了,如果URL是文件式(.html .asp .php .aspx .jsp)这类的后缀,那么此方法就很有实用价值了,用后缀做SEO的只对gg有效,例如我们的首推关键词是(dvd-box-set)http://127.0.0.1:8080/search-intro-best.html与http://127.0.0.1:8080/search-intro-best.dvd-box-set\r\n 哪个更好,相信你一下子就明白了!\r\n     \r\n      \r\n      ', NULL, 2009, '2009-08', 119, 2, ''),
(100, 'mysql数据库操作类', NULL, '<?php\r\n/**\r\n * 数据库操作类\r\n * @author:PHPCQ.COM PHP博客|PHP技术站\r\n */\r\n\r\nclass MySql {\r\n\r\n	var $user,$pass,$host,$db;\r\n	var $id,$data,$fields,$row,$row_num,$insertid,$version,$query_num=0;\r\n\r\n	function __construct($host,$user,$pass,$db)\r\n	{\r\n		$this->host = $host;\r\n		$this->pass = $pass;\r\n		$this->user = $user;\r\n		$this->db = $db;\r\n		$this->dbconnect($this->host, $this->user, $this->pass);\r\n		$this->selectdb($this->db);\r\n		if($this->version() >''4.1'')\r\n		mysql_query("SET NAMES utf8");\r\n	}\r\n	function dbconnect($host,$user,$pass)\r\n	{\r\n		$this->id = @ mysql_connect($host,$user,$pass) OR\r\n		sysMsg("连接数据库失败,可能是mysql数据库用户名或密码错误");\r\n	}\r\n	function selectdb($db)\r\n	{\r\n		@ mysql_select_db($db,$this->id) OR die("未找到指定数据库");\r\n	}\r\n\r\n	function query($sql)\r\n	{\r\n		$query = @ mysql_query($sql,$this->id) OR die("SQL语句执行错误：$sql <br />".$this->geterror());\r\n		$this->query_num();\r\n		return $query;\r\n	}\r\n\r\n	function fetch_array($query)\r\n	{\r\n		$this->data = @mysql_fetch_array($query);\r\n		return $this->data;\r\n	}\r\n	function query_num()\r\n	{\r\n		$this->query_num++;\r\n	}\r\n	function num_fields($query)\r\n	{\r\n		$this->fields = @mysql_num_fields($query);\r\n		return $this->fields;\r\n	}\r\n	function fetch_row($query)\r\n	{\r\n		$this->row = @mysql_fetch_row($query);\r\n		return $this->row;\r\n	}\r\n\r\n	function num_rows($query)\r\n	{\r\n		$this->row_num = @mysql_num_rows($query);\r\n		return $this->row_num;\r\n	}\r\n\r\n	function insert_id()\r\n	{\r\n		$this->insertid = mysql_insert_id();\r\n		return $this->insertid;\r\n	}\r\n	function version()\r\n	{\r\n		$this->version = mysql_get_server_info();\r\n		return $this->version;\r\n	}\r\n	function fetch_one_array($sql)\r\n	{\r\n		$query = $this->query($sql);\r\n		$this->data = $this->fetch_array($query);\r\n		return $this->data;\r\n	}\r\n	function geterror()\r\n	{\r\n		return mysql_error();\r\n	}\r\n}\r\n\r\n?>      \r\n      ', NULL, 2009, '2009-08', 119, 2, ''),
(101, '2元钱的成功！', NULL, '   在一次招聘会上，某著名外企人事经理说，他们本想招一个有丰富工作经验的资深会计人员，结果却破例招了一位刚毕业的女大学生，让他们改变主意的起因只是一个小小的细节：这个学生当场拿出了两块钱。\r\n　　\r\n　　人事经理说，当时，女大学生因为没有工作经验，在面试一关即遭到了拒绝，但她并没有气馁，一再坚持。她对主考官说：“请再给我一次机会，让我参加完笔试。”主考官拗不过她，就答应了她的请求。结果，她通过了笔试，由人事经理亲自复试。\r\n　　\r\n　　人事经理对她颇有好感，因她的笔试成绩最好，不过，女孩的话让经理有些失望。她说自己没工作过，惟一的经验是在学校掌管过学生会财务。找一个没有工作经验的人做财务会计不是他们的预期，经理决定收兵：“今天就到这里，如有消息我会打电话通知你。”女孩从座位上站起来，向经理点点头，从口袋里掏出两块钱双手递给经理：“不管是否录取，请都给我打个电话。”\r\n　　\r\n　　经理从未见过这种情况，问：“你怎么知道我不给没有录用的人打电话？”“您刚才说有消息就打，那言下之意就是没录取就不打了。”\r\n　　\r\n　　经理对这个女孩产生了浓厚的兴趣，问：“如果你没被录取，我打电话，你想知道些什么呢？”“请告诉我，在什么地方我不能达到你们的要求，在哪方面不够好，我好改进。”“那两块钱……”女孩微笑道：“给没有被录用的人打电话不属于公司的正常开支，所以由我付电话费，请您一定打。”经理也笑了，“请你把两块钱收回，我不会打电话了，我现在就通知你：你被录用了。”\r\n　　\r\n　　记者问：“仅凭两块钱就招了一个没有经验的人，是不是太感情用事了？”经理说：“不是。这些面试细节反映了她作为财务人员具有良好的素质和人品，人品和素质有时比资历和经验更为重要。第一，她一开始便被拒绝，但却一再争取，说明她有坚毅的品格。财务是十分繁杂的工作，没有足够的耐心和毅力是不可能做好的；第二，她能坦言自己没有工作经验，显示了一种诚信，这对搞财务工作尤为重要；第三，即使不被录取，也希望能得到别人的评价，说明她有直面不足的勇气和敢于承担责任的上进心。员工不可能把每项工作都做得很完美，我们接受失误，却不能接受员工自满不前；第四，女孩自掏电话费，反映出她公私分明的良好品德，这更是财务工作不可或缺的。”\r\n   ', NULL, 2009, '2009-08', 108, 1, ''),
(102, 'Mysql数据库备份-(PHP博客)', NULL, ' <?php\r\n/** \r\n * Mysql数据库备份的简单原理\r\n * @author:PHPCQ.COM PHP博客|PHP技术站 \r\n */ \r\n mysql_connect("localhost","root","123456");\r\n mysql_select_db("ucenter");\r\n$mysql = "set charset utf8;\\n";            \r\n$q1 = mysql_query("show tables");            \r\nwhile($t = mysql_fetch_array($q1)){       \r\n    $table = $t[0];       \r\n    $q2 = mysql_query("show create table `$table`");   \r\n          \r\n    $sql = mysql_fetch_array($q2);  \r\n     \r\n    $mysql .= "drop table if exists `$table`;".$sql[''Create Table''].";\\n";       \r\n \r\n      \r\n    $q3 = mysql_query("select * from `$table`");       \r\n    while($data = mysql_fetch_assoc($q3)){       \r\n        $keys = array_keys($data);  //给数组添加键\r\n       // var_dump($keys);     \r\n        $keys = array_map(''addslashes'',$keys);    //把回调函数作用于数组上\r\n           \r\n        $keys = join(''`,`'',$keys);    //把数组元素组合成字符串      \r\n\r\n        $keys = "`".$keys."`";  \r\n   // var_dump($data).''WWWWWWWWWWWWWWWWWWWW''; \r\n        $vals = array_values($data);   \r\n        var_dump($vals);     \r\n        $vals = array_map(''addslashes'',$vals);         \r\n        $vals = join("'',''",$vals);        \r\n        $vals = "''".$vals."''";       \r\n        $mysql .= "insert into `$table`($keys) values($vals);\\n";       \r\n    }       \r\n    $mysql.="\\n";                    \r\n}       \r\n$filename= "d:/".date(''Ymj'').".sql";          \r\n$fp = fopen($filename,''w'');          \r\nfputs($fp,$mysql);            \r\nfclose($fp);            \r\necho "数据备份成功,生成备份文件".$filename."";        ', NULL, 2009, '2009-08', 123, 2, ''),
(103, 'ecshop比较强大', NULL, '  这些日子,我一直在负责公司DVD站的开发，这个站的程序也接近了尾声,现在在做搜索引擎优化...由于此站是英文站,而ecshop的seo也做得非常出色,url参数地址，会根据产品的名称或产品的类别而组合,从而增加了对gg的友好性,而产品详细页的关键词描述也可以通过管理员后台而添加,但个别内页无法添加关键词与描述,为了更好的利于优化...我把它做了一些修改,代码明天贴出...(现在人在家里，代码在公司里)O(∩_∩)O~!', NULL, 2009, '2009-08', 114, 1, ''),
(104, 'ecshop内页关键词改进', NULL, ' /**  \r\n	* @author:PHPCQ.COM PHP博客|PHP技术站  \r\n	*/ \r\necshop内页关键词的实现如:search.php?intro=best,flow.php,message.php的改进 \r\n打开includes/lib_main.php\r\n找到函数:function assign_ur_here($cat = 0, $str = '''')\r\n elseif (''exchange'' == $filename)\r\n            {\r\n                $page_title = $GLOBALS[''_LANG''][''exchange''] . ''_'' . $page_title;\r\n                $args       = array(''wsid'' => ''0'');\r\n                $ur_here   .= '' <code>&gt;</code> <a href="exchange.php">'' .\r\n                                $GLOBALS[''_LANG''][''exchange''] . ''</a>'';\r\n            }\r\n      /* 其他的在这里补充 */\r\n      /*下面就是我自己补充的*/\r\n      elseif (''search'' == $filename)//获取当前页的地址参数...如:search.php?intro=best  得到search\r\n            {\r\n			$action = unserialize(base64_decode(trim($_GET[''encode''])));//对search.php产生的随机编码URL进行固定解码...\r\n			$action = $action[''intro''];\r\n				if($action == ''best[L]''){//热卖类内页 如:search.php?intro=best  得到best\r\n					$keywords = " ";//这里就是您的关键词\r\n					$description = " ";//这里是您的描述	\r\n				}        \r\n			}	\r\n		elseif (''flow'' == $filename)//获取当前页的地址参数...如:flow.php 得到flow\r\n            {\r\n					$keywords = "flow";//这里就是您的关键词\r\n					$description = "flow";//这里是您的描述	      \r\n			}\r\n		elseif (''message'' == $filename)//获取当前页的地址参数...如:message.php 得到message\r\n            {\r\n					$keywords = "message";//这里就是您的关键词\r\n					$description = "message";//这里是您的描述	      \r\n			}		\r\n			\r\n	/* 返回值    注意这句代码也要加以修改*/\r\n    return array(''title'' => $page_title, ''ur_here'' => $ur_here,\r\n    ''keywords''=> $keywords,''description'' => $description);\r\n    \r\n    \r\n    基本上的功能已经实现,你可以在需要参数的代码中增加:\r\n    $smarty->assign(''keywords'', $position[''keywords'']);      //页面关键词\r\n    $smarty->assign(''description'',$position[''description'']);  // 页面描述		', NULL, 2009, '2009-08', 146, 2, ''),
(105, '有时间的话一定做SEO', NULL, '关于百度搜索引擎:\r\n  这个站我也花了一点功夫,做了点站内优化.关键词一下子从200外,跑到了第8.\r\n  前天由于空间出了一点故障,关键词排名从第8跌倒了130,今天又从130爬到了11.\r\n  而在谷歌的排名一直很稳定.\r\n', NULL, 2009, '2009-08', 109, 2, ''),
(106, 'zend framework探迷之一', NULL, '为什么ＺＦ中不能__construct，取而代之的是init这样一个特殊函数。\r\n 这就要从ＰＨＰ的类的机制说起。ＰＨＰ中，当子类有自身的构造函数时，父类的构造函数是不会自动\r\n\r\n调用。因此当ＺＦ框架要完成带参实例化时，就无法将参数注入。因此不得以只能在ＺＦ中取消__construct，\r\n而通过一个init来模拟__construct，以实现其注入功能。\r\n\r\n以下是ＺＦ的ＡＣＴＩＯ，通过分析这段代码就很容易理解上述问题了。\r\n\r\n    public function __construct(Zend_Controller_Request_Abstract $request, \r\n    Zend_Controller_Response_Abstract $response, array $invokeArgs = array())\r\n    {\r\n        $this->setRequest($request)\r\n             ->setResponse($response)\r\n             ->_setInvokeArgs($invokeArgs);\r\n        $this->_helper = new Zend_Controller_Action_HelperBroker($this);\r\n        $this->init();\r\n    }\r\n\r\n     \r\n      ', NULL, 2009, '2009-08', 88, 2, ''),
(107, '数据库连接职责的集中控制', NULL, ' <?php\r\n/**\r\n * 数据库连接职责的集中控制\r\n * @author:PHP博客-技术-资源-技术站-面向对象 \r\n */\r\nclass Mysql{\r\n	/*数据库连接返回*/\r\n	private $connect;\r\n	private static $instance;\r\n	private function __construct(){\r\n		$this->connect = mysql_connect(''localhost'',''root'',''123456'') \r\n		or die(''数据库连接失败'');\r\n		mysql_select_db("blog");\r\n	}\r\n	private function __clone(){\r\n		\r\n	}\r\n	public function getInstance(){\r\n		if (!(self::$instance instanceof self)) {\r\n			self::$instance = new self();\r\n		}\r\n		return self::$instance;\r\n		\r\n	}\r\n	public function otherMethod(){\r\n		printf("otherMethod");\r\n	} \r\n}\r\n$db = Mysql::getInstance();\r\n$db->otherMethod();\r\n?> \r\n      \r\n      ', NULL, 2009, '2009-08', 100, 2, ''),
(108, '\\d与0-9造成的致命性问题', NULL, '  花了不少的的精力与心血,dvd站终于完工了,今天在国外服务器上测试的时候发现了一点不可想象的问题:网站在本地服务器都能正常运行,结果上传至国外服务器就发生了致命问题.\r\n 找了很久把rewrite中的[\\d]改成了[0-9]就可以正常运行了,不解的是在rewrite模块中 [\\d]与[0-9]是同一道理,  \r\n为何在本地测试服务器上[\\d]能正常运行,在国外服务器上就不能正常运行...揣摩中!      ', NULL, 2009, '2009-08', 94, 2, ''),
(110, 'php异常实例', NULL, '<?php\r\n/**\r\n * 这是一个数据库连接简单异常实例\r\n * @author:PHP博客|PHP技术博客|面向对象  www.phpcq.com\r\n *\r\n */\r\nclass DatabaseException extends Exception {\r\n	protected $databaseMessage;\r\n	public function __construct($messge=null,$code=0){\r\n		$this->databaseMessage = mysql_error();\r\n		parent::__construct($messge,$code);\r\n	}\r\n	public  function getDatabaseErrorMessage(){\r\n		return $this->databaseMessage;\r\n	}\r\n}\r\nfunction mysqlConnect(){\r\n	if (!@ mysql_connect("localhost","root","1234561")) {\r\n		throw new DatabaseException("Fatal error!");\r\n	}\r\n	\r\n}\r\ntry {\r\n	mysqlConnect();\r\n}\r\ncatch (DatabaseException $e){\r\n	echo $e->getMessage().''<br/>'';\r\n	echo $e->getDatabaseErrorMessage();\r\n}\r\n?>      \r\n      \r\n      ', NULL, 2009, '2009-08', 94, 2, ''),
(111, '数据库自定义异常', NULL, '<?\r\n/**\r\n * 数据库异常类-PHP异常处理\r\n * @author:PHP博客-技术-资源-技术站-面向对象PHPCQ.COM\r\n */\r\nclass DatabaseException extends Exception {\r\n	protected  $databaseConnectError;\r\n	public  $databaseSelectError;\r\n	public $databaseQueryError;\r\n	public   function __construct($message=null,$code=0){\r\n		$this->databaseConnectError = mysql_error().''More infomations!''.$this->getLine();\r\n		$this->databaseSelectError = mysql_error().''More infomations'';\r\n		$this->databaseQueryError = mysql_error().''More infomations'';\r\n		$this->databaseFetchError = mysql_error().''More infomations'';\r\n		$this->databaseNumError = mysql_error().''More infomations'';\r\n		parent::__construct($message,$code);\r\n	}\r\n	public function databaseConnectError(){\r\n		/**\r\n		 * 这里可以做更多的操作...比如将异常写入文件中方便查看\r\n		 */\r\n		$handle = fopen("1.txt","w");\r\n		fwrite($handle,$this->databaseConnectError);\r\n		return $this->databaseConnectError;\r\n	}\r\n	public function databaseSelectError(){\r\n		return $this->databaseSelectError;\r\n	}\r\n	public function databaseQueryError(){\r\n		return $this->databaseQueryError;\r\n	}	\r\n}\r\n\r\n?>      \r\n      \r\n      \r\n      \r\n      ', NULL, 2009, '2009-08', 94, 2, ''),
(112, 'Mysql数据库基本操作与异常实例', NULL, '<?php\r\n/**\r\n * Mysql数据库基本操作与异常实例,该数据库操作类并不完整...\r\n * @author:PHP博客-技术-资源-技术站-面向对象PHPCQ.COM\r\n *\r\n */\r\nclass Mysql{\r\n	public $connect;\r\n	public $data;\r\n	public function __construct($host,$username,$password,$dbName){\r\n		try {\r\n			$this->connect($host,$username,$password,$dbName);\r\n		} catch (DatabaseException $e){\r\n			echo $e->getMessage().''<br/>'';\r\n			echo $e->databaseConnectError();\r\n			echo $e->getLine();\r\n			echo $e->getFile();\r\n		}\r\n		try{\r\n			$this->selectDatabase($dbName);\r\n		} catch (DatabaseException $this){\r\n			echo $e->getMessage().''<br/>'';\r\n			echo $e->databaseSelectError().''<br/>'';\r\n		}\r\n	}\r\n	public function connect($host,$username,$password){\r\n		$this->connect = @ mysql_connect($host,$username,$password);\r\n		if (!$this->connect) {\r\n			throw new DatabaseException("Connect Error!");\r\n		}\r\n		\r\n	}\r\n	public function selectDatabase($dbName){\r\n		$select = @ mysql_select_db($dbName);\r\n		if (!$select) {\r\n			throw new DatabaseException("Select Error!");\r\n		}\r\n		\r\n	}\r\n	public function query($sql){\r\n		try{\r\n			$this->query = @ mysql_query($sql);\r\n			if (!$this->query) {\r\n				throw new DatabaseException("SQL Error!");;\r\n			}	\r\n			return $this->query;\r\n		} catch (DatabaseException $e){\r\n			echo $e->getMessage().''<br/>'';\r\n			echo $e->databaseQueryError().''<br/>'';\r\n		}\r\n	}\r\n	public function fetchArray($query){\r\n		$this->data = @ mysql_fetch_array($query);	\r\n		return $this->data;\r\n	}\r\n	public function __destruct(){\r\n		mysql_close($this->connect);\r\n	}\r\n\r\n}\r\n\r\n?>      \r\n      \r\n      \r\n      \r\n      \r\n      \r\n      ', NULL, 2009, '2009-08', 122, 2, ''),
(113, 'test', NULL, '&lt;img&nbsp;src=""&nbsp;/&gt;   \r\n      ', NULL, 2009, '2009-08', 138, 2, '10'),
(114, '数字分页偏移量-迭代器', NULL, '<?php\r\n/**\r\n * 给出参数--很试适用于数字分页--产生偏移量效果\r\n * @author:PHP博客|PHP技术|PHP资源|PHP技术站|面向对象 WWW.PHPCQ.COM\r\n */\r\n$array = array(1,2,3,4,5,6,7,8,9);\r\n/**\r\n * 实例化ArrayIterator迭代器\r\n */\r\n$arrIterator = new ArrayIterator($array);\r\n/**\r\n *LimitIterator需给出3个参数(迭代器,偏移量,限制数量)\r\n */\r\n$limitor = new LimitIterator($arrIterator,3,4);\r\n/**\r\n * 遍历对象\r\n */\r\nforeach ($limitor as $num){\r\n	/**\r\n	 * 输出LimitIterator构造后的值\r\n	 */\r\n	echo $num;	\r\n}\r\n//输出结果为4567      \r\n      \r\n      \r\n      \r\n      \r\n      \r\n      ', NULL, 2009, '2009-09', 115, 2, ''),
(115, '基于FilterIterator类来过滤数据', NULL, '<?php\r\n/**\r\n * 基于FilterIterator类来过滤数据\r\n * @author:PHP博客-技术-资源-技术站-面向对象\r\n *\r\n */\r\nclass CreateFilter extends FilterIterator {\r\n	//accept()方法必须为迭代器中的当前返回true或者false\r\n	public function accept(){\r\n		//这里是过滤任何大于3的项\r\n		return ($this->current() > 3);\r\n	}	\r\n}\r\n$array = new ArrayIterator(array(1,2,3,4,5,6));\r\n$iterator = new CreateFilter($array);\r\n\r\nprint_r(iterator_to_array($iterator));\r\n/**\r\n * 输出的值为:Array ( [3] => 4 [4] => 5 [5] => 6 ) \r\n */      \r\n?>      ', NULL, 2009, '2009-09', 97, 2, ''),
(116, 'RegexIterator匹配和修改迭代器的数据集', NULL, '<?php\r\n/**\r\n* 初定义数组...\r\n* @author:PHP博客-技术-资源-技术站-面向对象 \r\n */\r\n	$array = array(''apple'',''avocado'',''orange'',''pineapple'');\r\n	/**\r\n	 * 创建迭代器\r\n	 */\r\n	$arrIterator = new ArrayIterator($array);\r\n	/**\r\n	 * 使用正则表达式模式来匹配和修改迭代器的数据\r\n	 */\r\n	$iterator = new RegexIterator($arrIterator,''/^a/'');\r\n	\r\n	print_r(iterator_to_array($iterator));\r\n	/**\r\n	 * 输出结果:Array ( [0] => apple [1] => avocado ) \r\n	 */\r\n?>      ', NULL, 2009, '2009-09', 91, 2, ''),
(117, 'IteratorIterator类-SPL库', NULL, '<?php\r\n/**\r\n * SPL库最酷的迭代器之一:IteratorIterator类\r\n * @author:PHP博客-技术-资源-技术站-面向对象  \r\n * \r\n */\r\n$db = new PDO(''mysql:host=localhost;dbname=db'', ''root'', ''123456'');\r\n\r\n$db->query(''set names utf8'');\r\n\r\n$pdoStatement = $db->query(''SELECT * FROM id'');\r\n\r\n$iterator = new IteratorIterator($pdoStatement);\r\n\r\n$limitIterator = new LimitIterator($iterator,0,10);\r\n\r\n$tenRecordArray = iterator_to_array($limitIterator);\r\n\r\nprint_r($tenRecordArray);      ', NULL, 2009, '2009-09', 105, 2, ''),
(118, 'ecshop搜索功能的缺点改进', NULL, 'ecshop搜索功能的缺点改进:\r\n//author:PHP博客-技术-资源-技术站-面向对象\r\n	当输入 "24 Hour"时,ecshop系统将匹配出数据库包含24或Hour的数据\r\n这是我们不想看到的,而我们想看到的结果是包含24 Hour的数据...下面就是\r\n我改进的方法	\r\n\r\n\r\n找到search.php中下例代码:\r\n把中间的OR换成AND,(我这里是替换了的)\r\n\r\nif (!empty($_REQUEST[''keywords'']))\r\n    {\r\n        $arr = array();\r\n        if (stristr($_REQUEST[''keywords''], '' AND '') !== false)\r\n        {\r\n            /* 检查关键字中是否有AND，如果存在就是并 */\r\n            $arr        = explode(''AND'', $_REQUEST[''keywords'']);\r\n            $operator   = " AND ";\r\n        }\r\n        elseif (stristr($_REQUEST[''keywords''], '' AND '') !== false)\r\n        {\r\n            /* 检查关键字中是否有OR，如果存在就是或 */\r\n            $arr        = explode(''AND'', $_REQUEST[''keywords'']);\r\n            $operator   = " AND ";\r\n        }\r\n        elseif (stristr($_REQUEST[''keywords''], '' + '') !== false)\r\n        {\r\n            /* 检查关键字中是否有加号，如果存在就是并 */\r\n            $arr        = explode(''+'', $_REQUEST[''keywords'']);\r\n            $operator   = " AND ";\r\n        }\r\n        else\r\n        {\r\n            /* 检查关键字中是否有空格，如果存在就是或 */\r\n            $arr        = explode('' '', $_REQUEST[''keywords'']);\r\n            $operator   = " AND ";\r\n        }      ', NULL, 2009, '2009-09', 218, 2, ''),
(119, '使用RecursiveArrayIterator导出树形结构', NULL, '<?php\r\n/**\r\n * 使用RecursiveArrayIterator导出树形结构\r\n * @author:PHP博客-技术-资源-技术站-面向对象\r\n */\r\n		$array = array(\r\n						0=>''a'',\r\n						1=>array(''a'',''b'',''c''),\r\n						2=>''b'',\r\n						3=>array(''a'',''b'',''c''),\r\n						4=>''c'');\r\n		$it = new RecursiveArrayIterator($array);\r\n		print_r(iterator_to_array($it)).''<br/>'';				\r\n		\r\n	//输出结果:Array ( [0] => a [1] => Array ( [0] => a [1] => b [2] => c ) \r\n	//[2] => b [3] => Array ( [0] => a [1] => b [2] => c ) [4] => c ) \r\n?>     ', NULL, 2009, '2009-09', 80, 2, '');
INSERT INTO `article` (`id`, `caption`, `shortContent`, `content`, `tags`, `times`, `date`, `degree`, `cate_id`, `password`) VALUES
(120, '招聘PHP程序员', NULL, '  昨天,应公司要求,我面试了一名php程序员,他是刚从java转过来的\r\n,在交流的时候我问了他关于防止sql语句注入,\r\n也提到了多线程和缓存技术...\r\n   从中感到一点:许多学java的，结果工作不好找，反过来临时抱佛脚学PHP，\r\n这不是抢我们的饭碗么？O(∩_∩)O~\r\n   我在这里发布一条招聘信息,希望还没找到工作或想换换工作环境的的PHP程序员与我们联系!\r\n\r\n要求:熟悉php程序,mysql数据库,smarty模板引擎,zendFramework,div+css,javascript,英文熟练(因为是做外贸站)\r\n待遇:看能力(面议)\r\n联系人:重庆都亚科技发展有限公司 \r\n电话:67508285 电邮:ygh39@hotmail.com  \r\n地址:重庆市江北区加州一号13-14# \r\n  \r\n      \r\n      ', NULL, 2009, '2009-09', 152, 1, ''),
(121, 'ZendFramework身份验证实例', NULL, 'public function loginAction(){\r\n		/**\r\n		 * ZendFramework身份验证...实例代码\r\n		 * @author:PHP博客-技术-资源-技术站-面向对象 \r\n		 */\r\n		if ($this->getRequest()->isPost()){\r\n			//过滤字符串种的标签\r\n			$filter = array(\r\n				''name'' => ''StringTrim'',\r\n				''password''=>''StringTrim'');\r\n			\r\n			$validation = array(\r\n				''name'' => array(array(''StringLength'',1,5)),//字符串底限长度与最高长度\r\n				''password'' => array(array(''StringLength'',1,64)));//字符串底限长度与最高长度\r\n			\r\n			$zfi = new Zend_Filter_Input($filter,$validation,$this->getRequest()->getPost());//开始验证\r\n			\r\n			if ($zfi->isValid()){//若验证通过,则执行下面程序\r\n				\r\n				$db = Zend_Registry::get(''db'');//获取db对象\r\n				\r\n				$adapter = new Zend_Auth_Adapter_DbTable($db,''name'',''name'',''password'');\r\n				\r\n				$adapter->setIdentity($zfi->name)\r\n						->setCredential($zfi->password);\r\n						\r\n			    $auth = Zend_Auth::getInstance();\r\n			    \r\n			    $result = $auth->authenticate($adapter);\r\n			    \r\n			    if ($result->isValid()){\r\n			    	\r\n			    	$auth->getStorage()->write($adapter->getResultRowObject());//保存数据,以便下一页接收改数据集\r\n			    	$this->getHelper(''redirector'')->goto(''index'',''index'');//重定向至index控制器下的index方法\r\n			    	\r\n			    } else {\r\n			    	\r\n			    	$this->getHelper(''FlashMessenger'')\r\n			    		 ->addMessage("The login credentials provided are not valid");//发送错误信息\r\n			    		 \r\n			    }\r\n			} else {//若验证未通过,则执行下面程序\r\n			    	foreach ($zfi->getMessages() as $feild => $messages){\r\n			    		foreach ($messages as $message){\r\n			    			$this->getHelper(''FlashMessenger'')\r\n			    				 ->addMessage($feild.'':''.$message);//发送错误信息\r\n			    		}\r\n			    	}\r\n			    	$this->getHelper(''redirector'')->goto(''login'');//重定向本层控制器的login方法\r\n			    }		\r\n			}\r\n			$this->view->messages = $this->getHelper(''FlashMessenger'')->getMessages();\r\n\r\n	}      ', NULL, 2009, '2009-09', 152, 2, ''),
(122, 'ZendFramework插件类实例[角色控制]', NULL, '<?\r\n/**\r\n * ZendFramework插件类实例[角色控制]...\r\n * @author:PHP博客-技术-资源-技术站-面向对象 PHPCQ.com\r\n * \r\n *\r\n */\r\nclass Plugin_Security extends Zend_Controller_Plugin_Abstract{\r\n	\r\n	protected $_acl;\r\n	\r\n	public function __construct($acl){\r\n		$this->_acl = $acl;\r\n	}\r\n	\r\n	public function dispatchLoopStartup($request){\r\n		\r\n		$auth = Zend_Auth::getInstance();\r\n		\r\n		$role = ''guest'';\r\n		\r\n		if ($auth->hasIdentity()) {\r\n			\r\n			$role = $auth->getIdentity()->role;\r\n		}\r\n		$resource = $request->getActionName();\r\n		if ($this->_acl->has($resource)) {\r\n			\r\n			if (!$this->_acl->isAllowed($role,$resource)) {\r\n				\r\n				$session = new Zend_Session_Namespace(''ACLSecurity'');\r\n				\r\n				$session->uri = $request->getRequestUri();\r\n				\r\n				$request->setControllerName(''index'');\r\n				\r\n				$request->setActionName(''login'');\r\n			}\r\n			\r\n		}\r\n		\r\n		\r\n	}\r\n}\r\n?>      \r\n前端控制器注册插件\r\n$front->registerPlugin(new Plugin_Security($acl));     \r\n      \r\n      \r\n      \r\n      \r\n      ', NULL, 2009, '2009-09', 162, 2, ''),
(123, '明天就要离开公司了', NULL, '明天就要离开公司了,将接受更高的挑战了,这时的公司很沉闷...      ', NULL, 2009, '2009-09', 146, 1, ''),
(124, 'PHP/Python/Ruby运行机制', NULL, 'PHP/Python/Ruby的运行机制有一个本质区别：PHP是每次HTTP请求过来以后，初始化全部资源（例如创建数据库链接、加载系统类库，创建缓存等等），处理完毕，释放全部资源，这不像Python/Ruby之类带有GC的脚本语言，Python/Ruby是初次启动的时候初始化资源，随后的请求就不必再次初始化资源了。 \r\n\r\n这种机制的差异带来的区别就是： \r\n\r\n1、PHP极难出现严重的内存泄露问题，随便你代码写的多烂，反正每个请求一执行完毕，所有资源统统释放光。而Python/Ruby则需要依赖GC来回收内存，因此稍有不慎，还是会出现GC无法释放的内存泄露问题。 \r\n\r\n2、PHP每次请求都要初始化资源，这个开销非常大。所以尽管PHP解析器本身的运行速度是极快的，但是一旦使用复杂的PHP框架，那么由于需要每次请求的时候初始化整个框架，性能的下降非常厉害，你用一个很复杂的PHP框架的结果就是整体性能被Ruby远远甩开。这也是为什么PHP社区这么多年来，并不怎么倾向于使用框架的原因之一。 \r\n\r\n3、由于PHP这种每请求初始化资源的机制，也造成了PHP添加跨请求的高级特性相当困难，这是PHP本身一个很大的限制，但是反过来说，正是这种限制使得PHP始终保持在一个比较简单的web语言上面，而正是这一点才是PHP得以成为互联网第一Web编程语言的原因，因此也未必就不好。 \r\n\r\n总之，PHP和Ruby的差异还是很大的，不适合放在一起比较，其实应该比较的是Ruby和Python才对。 \r\n\r\n所以我觉得Rails这种框架性做法被PHP跟风以后，其实是把PHP带上了邪路，所以不如说是Rails在误导PHP的发展。顺便多说一句：DHH在编写basecamp之前，一直是用PHP的，并且自己还写了一个PHP的快速开发框架，他改用ruby以后，把当初自己写的PHP框架也移植过来了，这个框架实际上是Rails最初的原型。那么为什么DHH当初不直接基于PHP做Rails呢?非要改用ruby以后，才发表rails呢？你看看PHP这种运行机制就知道了，PHP做复杂的web开发框架并不是一条光明的道路。\r\n      ', NULL, 2009, '2009-09', 150, 2, ''),
(125, '服务器安全策略', NULL, '  服务器作为网站或WEB系统的核心载体，其安全性事至关重要的。这里的安全包括服务器物理安全、数据安全等多项内容。一个安全的服务器应该具有以下特性。\r\n  1、服务器应该位于一个稳定、洁净的环境中。灰尘、静电或其他杂质可能会导致服务器的系统故障，将服务器置于一个合适的位置可以保证服务器系统的正常运行。\r\n  2、服务器应该能避免电压冲击、雷击等外部干扰。因为电压的不稳定性和雷电的冲击都会造成服务器电子元件的损坏，所以服务器应该具有能避免这些外部干扰的能力。\r\n  3、服务器应该具有基于硬盘的用户身份验证功能，在物理层上实现对数据的保护。\r\n  4、数据保护应该使用底层微处理器按照64位或128位数据保护算法来实现。这样，即便出现硬盘丢失、系统被非法入侵等服务器攻击时，也不会泄露重要数据。\r\n  5、硬盘保护应该使用负磁道硬盘镜像策略。这样，一旦系统出现严重错误，管理员可以很容易地从镜像硬盘恢复数据。\r\n  6、在网络方面应该安装具有强大防护功能的软硬件防火墙。\r\n除了在技术面上实现对服务器的保护以外，在管理上应该实现对服务器的安全保护。\r\n 例如，在企业内部，应该对重要的服务器设专人维护，并对工作区使用单独锁定等管理方式。      ', NULL, 2009, '2009-09', 107, 2, ''),
(126, '博客站的排名终于稳定！', NULL, '  现在，这个站的排名终于稳定了...而且其快照都在短时间内更新,很不错,这还要多谢易兄的指点!\r\n  暂时不再管它，继续观望几天...接下来，该干点其他事情了...    \r\n      \r\n      ', NULL, 2009, '2009-09', 77, 1, ''),
(127, 'Cookie与Session的比较', NULL, '  Cookie与Session在实际应用中实现着类似的功能。但是，Cookie与Session的工作原理有着很大的区别。\r\n  Session是将Session的信息保存在服务器上，并通过一个Session ID来传递客户端的信息。服务器在接收到Session ID后根据这个ID提供相关的Session信息。Cookie是将所有的信息保存在客户端上，由浏览器进行管理。\r\n  实际上，Session ID也是作为Cookie保存在客户端的。\r\n  在运行方面，Cookie有一个很大的好处就是可以设置不同的保存周期。      ', NULL, 2009, '2009-09', 122, 2, ''),
(128, '给大家推荐一个免费的PHP空间', NULL, '想找一个免费空间是很容易的，但是想找一个功能强大并且比较稳定的空间就不那么容易了...下面这个免费空间就很稳定功能也比较强大..\r\nSummerhost.info 提供免费网页空间，1，000MB（1GB）空间与每月25GB的流量限制，\r\n足以应付大多数站点需求。Summerhost 所使用的控制台为常见的Vista Panel，\r\n支持繁体中文和简体中文等多国语言。\r\n除此之外，也支持FTP/PHP/MySQL资料库功能。\r\n\r\n空间小文件\r\n\r\n站点网址 ： http://www.summerhost.info/\r\n\r\n注册页面 ： http://www.summerhost.info/signup.php\r\n\r\n演示站点 ： http://freegroup.summerhost.info/\r\n\r\n站点空间 ：1，000MB\r\n\r\n每月流量 ：25GB（25，000MB）\r\n\r\n提供项目 ：MySQL*10个、FTP帐号一个、子网域名称*10个、资料库容量50MB、Email邮箱无限。\r\n\r\n显示广告 ：无广告。\r\n      ', NULL, 2009, '2009-09', 182, 1, ''),
(129, 'Python获取文件信息-PHP Blog', NULL, '\r\n\r\nimport os\r\nimport sys\r\nfrom UserDict import UserDict\r\n\r\ndef stripnulls(data):\r\n    "strip whitespace and nulls"\r\n    return data.replace("\\00", " ").strip()\r\n\r\nclass FileInfo(UserDict):\r\n    "store file metadata"\r\n    def __init__(self, filename=None):\r\n        UserDict.__init__(self)\r\n        self["name"] = filename\r\n    \r\nclass MP3FileInfo(FileInfo):\r\n    "store ID3v1.0 MP3 tags"\r\n    tagDataMap = {"title"   : (  3,  33, stripnulls),\r\n                  "artist"  : ( 33,  63, stripnulls),\r\n                  "album"   : ( 63,  93, stripnulls),\r\n                  "year"    : ( 93,  97, stripnulls),\r\n                  "comment" : ( 97, 126, stripnulls),\r\n                  "genre"   : (127, 128, ord)}\r\n    \r\n    def __parse(self, filename):\r\n        "parse ID3v1.0 tags from MP3 file"\r\n        self.clear()\r\n        try:\r\n            fsock = open(filename, "rb", 0)\r\n            try:\r\n                fsock.seek(-128, 2)\r\n                tagdata = fsock.read(128)\r\n            finally:\r\n                fsock.close()\r\n            if tagdata[:3] == ''TAG'':\r\n                for tag, (start, end, parseFunc) in self.tagDataMap.items():\r\n                    self[tag] = parseFunc(tagdata[start:end])\r\n        except IOError:\r\n            pass\r\n\r\n    def __setitem__(self, key, item):\r\n        if key == "name" and item:\r\n            self.__parse(item)\r\n        FileInfo.__setitem__(self, key, item)\r\n\r\ndef listDirectory(directory, fileExtList):\r\n    "get list of file info objects for files of particular extensions"\r\n    fileList = [os.path.normcase(f) for f in os.listdir(directory)]\r\n    fileList = [os.path.join(directory, f) for f in fileList \\\r\n                if os.path.splitext(f)[1] in fileExtList]\r\n    def getFileInfoClass(filename, module=sys.modules[FileInfo.__module__]):\r\n        "get file info class from filename extension"\r\n        subclass = "%sFileInfo" % os.path.splitext(filename)[1].upper()[1:]\r\n        return hasattr(module, subclass) and getattr(module, subclass) or FileInfo\r\n    return [getFileInfoClass(f)(f) for f in fileList]\r\n\r\nif __name__ == "__main__":\r\n    for info in listDirectory("/music/_singles/", [".mp3"]):\r\n        print "\\n".join(["%s=%s" % (k, v) for k, v in info.items()])\r\n        print\r\n      ', NULL, 2009, '2009-09', 122, 2, ''),
(130, 'Flex中实现一个可拖拽的窗口!', NULL, '<?xml version="1.0" encoding="utf-8"?>\r\n<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" \r\n\r\nlayout="absolute" applicationComplete="initApp()">\r\n<mx:Script>\r\n	<![CDATA[\r\n	import mx.managers.PopUpManager;\r\n	import mx.containers.Panel;\r\n	internal function initApp():void{\r\n	  var win:Panel = new Panel();\r\n	  win.width = 300;\r\n	  win.height = 240;\r\n	  win.title = "PopUp Panel";\r\n	  win.x = 20;\r\n	  win.y = 20;\r\n				PopUpManager.addPopUp(win,this,false);\r\n	}\r\n		]]>\r\n	</mx:Script>\r\n	<mx:Button x="130" y="280" label="Button" />\r\n</mx:Application>\r\n      \r\n      ', NULL, 2009, '2009-09', 120, 2, ''),
(131, '准备用Flex+PHP技术做一个小型博客系统', NULL, '  准备用Flex+PHP技术做一个小型博客系统,现正在筹划中...    ', NULL, 2009, '2009-09', 110, 2, ''),
(132, 'ActionScript3.0与JAVA的语法结构很相似', NULL, '  碰了几天的ActionScript3.0，感觉此语言与JAVA语法结构很相似...    继续观望中.', NULL, 2009, '2009-09', 99, 2, ''),
(133, '作品DVDorderstore', NULL, '前段时间在一个外贸公司所开展的工作:http://www.dvdorderstore.com 基于ecshop系统 二次开发      \r\n      \r\n      ', NULL, 2009, '2009-10', 101, 2, ''),
(134, '基于Flex+PHP+Mysql开发的留言本就快问世了', NULL, ' 一个基于Flex+PHP+Mysql开发的留言本，就快做出来了,它是我的第一个基于Flex技术开发的作品... 期待中! 实现了最基本的功能：留言数据的校验，数据分页的显示以及管理员的回复与删除...     ', NULL, 2009, '2009-10', 112, 2, ''),
(135, '基于MVC--FLex留言本已经完成!', NULL, '  FLex留言本已经完成!Flex高手你就飘过,,,O(∩_∩)O~ 演示地址:http://www.phpcq.com/guestbook/guestbook.html\r\n 提供代码下载,进入留言本后 单击右键View Source   就可以看到相关下载信息了  \r\n      \r\n      ', NULL, 2009, '2009-10', 135, 2, ''),
(136, 'Flex与php结合的上传功能', NULL, '<?xml version="1.0" encoding="utf-8"?>\r\n<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" \r\n	layout="absolute"  fontSize="12" creationComplete="initApp()">\r\n	<mx:Script>\r\n		<![CDATA[\r\n		/**\r\n		 * Flex与php结合的上传功能\r\n		 * Author:www.phpcq.com PHP技术博客\r\n		 */\r\n			import mx.controls.Text;\r\n			import mx.controls.Alert;\r\n			import flash.events.Event;\r\n			import flash.net.FileReference;\r\n			import flash.net.URLRequest;\r\n			import flash.net.FileFilter;\r\n			import flash.net.URLVariables;\r\n			import flash.events.ProgressEvent;\r\n			import mx.managers.CursorManager;\r\n			import mx.utils.StringUtil;\r\n			[Bindable]\r\n			private var file:FileReference;\r\n			private var fileName:String = "";\r\n			internal function initApp():void{\r\n				//FileReference 类提供了在用户计算机和服务器之间上载和下载文件的方法\r\n				file = new FileReference();\r\n				//选定文件后Event.SELECT事件触发\r\n				file.addEventListener(Event.SELECT,onSelect);\r\n				//获取上传进度\r\n				file.addEventListener(ProgressEvent.PROGRESS,progressHandler);			\r\n			}\r\n			internal function selectFile():void{ \r\n				//过滤文件\r\n				var imgType:FileFilter = new FileFilter("png","*.png");\r\n				var allType:Array = new Array(imgType);\r\n				//仅显示以上过滤后的文件\r\n				file.browse(allType);\r\n			}\r\n			internal function startUp():void{\r\n					var request:URLRequest = \r\n					new URLRequest("http://localhost/up/src/upload.php");//后台程序\r\n					fileName = new Date().getTime().toString()+".png";//文件重命名\r\n					request.data = new URLVariables("filename="+fileName);\r\n					if(StringUtil.trim(pic_txt.text) != ''''){//当文件不能为空时\r\n						file.upload(request);\r\n						CursorManager.setBusyCursor();//设置鼠标为忙碌状态\r\n					} else {\r\n						Alert.show("上传文件不能为空!");\r\n					}\r\n			}\r\n			internal function onSelect(evt:Event):void{\r\n					pic_txt.text = file.name;//将文件名保存至文本框里\r\n				\r\n			}\r\n			internal function progressHandler(e:ProgressEvent):void{\r\n				if(e.bytesLoaded == e.bytesTotal){//这里是至上传进度---上传成功后\r\n					CursorManager.removeBusyCursor();//取消忙碌状态\r\n					\r\n				} \r\n			}\r\n		]]>\r\n	</mx:Script>\r\n	<!--文本框被事件触发为平时所见的文本域-->\r\n	<mx:TextInput x="235.5" y="177" height="21" id="pic_txt" \r\n		width="227" editable="false"/>\r\n	<mx:Button x="470.5" y="177" label="选择文件" click="selectFile()"/>\r\n	<mx:Button x="556.5" y="177" label="上传文件" click="startUp()"/>\r\n	<mx:Text x="173.5" y="178" text="上传文件" />\r\n</mx:Application>\r\n后台程序upload.php中的代码如下:\r\n<?php\r\n$imgName = $_GET[''filename''];\r\n$file = $_FILES[''Filedata''][''tmp_name''];\r\nmove_uploaded_file($file,$imgName);      \r\n      \r\n      ', NULL, 2009, '2009-10', 204, 2, ''),
(137, '宁愿睡地板，也要做老板! (转载)', NULL, ' 发现很多朋友创业的心里很矛盾，既有创业单干的激情，同时又有担心失败后悲惨的命运！所以很多朋友思考了很长时间，最后还是决定等等再说，一月过了一月，一年过了又一年，岁月流逝，光阴不再，沉浸在打工的生涯中难以自拔，结婚供房，身上的经济枷锁日益沉重，无力再搏，最后只好认命，打工一辈子。 \r\n　　中国温州人号称中国最富有的人群，我认识好几个温州的年轻朋友，在她们还在上大学时，理念就与众不同，最喜欢挂在嘴边的话就是：“宁愿睡地板，也要做老板”或者“宁愿做生意一个月只赚1000元，不愿打工一月赚3000元”。这些理念相信是他们的长辈在生活中告诫他们的，潜移默化中成为他们心中做事情的原则。正是这样的理念使得温州人与众不同，成为中国最富有的人群。 \r\n“思路决定出路”！！！ \r\n　　说说80年代的温州人和四川人。 \r\n　　80年代的温州农民和四川农民都属于最早开始闯荡的人群，温州农民闯荡中国的方式是修理雨伞、钢笔、铁锅，或者倒卖点零用百货，总之到处的流浪。四川农民闯荡的方式是直接去广东打工。80年代敢于出来闯荡的人都是用勇气的人，因为那个时代信息不发达，交通不方便，人们对外面的世界抱以深深的恐惧。四川人和温州人都有勇气和魄力，但是由于思路的不同，走上了不同的发财致富道路。 \r\n29年过去了，温州农民已经成为中国最富有的人群，他们掌握了中国最先进的经商技能，他们的财富甚至可以让他们的后代走出国门，到欧洲去经商；而四川农民的第一代打工者已经退出了历史舞台，他们大多在四川老家继续贫寒的生活，而他们的晚辈循着父辈的足迹，继续一窝蜂的拥挤到广州接受老板们的残酷剥削，成为社会最贫穷的一类人。 \r\n    “宁做创业狼，不做打工狗”，是浙江一位经济学家说的。这话虽然不好听，但还是有道理的。 \r\n狼为了寻求自由，宁愿独立人格，自由思想，天天奔跑在大草原上，肆意的猎杀牛羊，尽可能的享受大自然提供的一切美味，吃饱后就躺在草地上，什么都不想，享受阳光和自由的空气，他们是草原的主宰，他们有的是尊严。不过当严寒来临时，他们必须学会抗拒暴风雪的寒冷，学会在厚厚的雪堆下面寻找猎物，时常忍受饥饿的痛苦，随时担心自己冻饿而死。狼的生活可谓一半是海水，一半是火焰。 \r\n　　狗的生活恰恰相反，平时狗只能吃主人剩下的残羹冷炙，被主人吆喝着到处忙活，没有自由，没有尊严，只有摇尾乞怜，狗的生活是有保证的，虽然从来吃不到什么美味，但是冬天到来时也不担心挨饿受冻，有主人的屁护，狗们感恩戴德，发誓下一辈子依旧为主人效忠，即便主人肆意的打骂狗们，狗们也多半不敢吭一声，因为听话和驯服是狗们的标志。委曲求全是狗们的标签，为了稳定的饭碗，为了自己老时有一份固定的口粮，一切都认了！ \r\n如果把现实生活中的人们进行比较，估计我们大多都是过着狗的生活，稳定安逸，但是永远吃不饱，想离开主人家的狗窝，但是缺乏破釜沉舟的勇气！ \r\n　　可能很多朋友会说，刚出校门的学生，哪里有资本和经验去创业呀？最好的选择就是去公司打工几年，储备点经验和资金，然后几年后有机会的话再自己创业。 \r\n　　其实这样的想法是很错误的，一个大学生单位工作几年后，不但赚不到创业所需要的钱，更是无法学到创业的经验与技能。打工生涯学到的东西对创业基本上是没有用的，因为两者的角度不同，思考方式不同，得到的经验体会也不同，只能这么说，打工几年后你唯一获得提高的是打工的技术技能，而创业最不需要的就是技术技能了。 \r\n　　更可怕的是，打工几年后，年轻人普遍会丧失创业的激情，丧失初生牛犊不怕虎的勇气，越来越沉湎于单位之中难以自拔，后来创业的念头只能永远的留在心底，成为永久的遗憾。等到年龄到了40多被老板辞退的时候，才后悔20年前为什么不出来自己创业呀！ \r\n　　那么做创业狼的要求究竟高不高？ \r\n　我的答案是:只要有做创业狼的理念，哪怕口袋里只有100元，照样可以创业成功！ 关键看你想不想做创业狼？ \r\n　　打工人生与创业人生一定是不一样的。 \r\n　　时间长了，打工者的性格与创业者的性格会有越来越大的差别。 \r\n　　打工者，害怕外面陌生的世界，害怕失业的危险，心灵变得越来越敏感和脆弱。心态不仅逐渐的疲惫和懒惰，整个人也没有了锐气和精神，只好安慰自己知足长乐，淡漠名利。但是生活变得越来越平庸，家庭的经济负担越来越沉重，房子和孩子教育日渐成为自己脖子上的经济绳索，勒的越来越紧，透不过气来，只好调整自己的心态，让自己逐渐适应城市小爬虫的定位，自己本来就是庸人，庸人何必自扰之，发财是人家的事情，咱没有那命。 \r\n　　最恐惧的第一件事情莫过于听到公司效益不好，要裁员的消息，最要紧的事情和领导搞好关系，坚持学习恭维逢迎拍马屁，入乡随俗嘛。思想麻木了，只好随大流，毕竟饭碗在领导或老板的手心里面， \r\n想让你滚蛋，就得滚蛋。 \r\n　　最恐惧的第二件事情，是看到自己年龄的日渐增长，可是自己的工作技能却没有获得任何提高，虽然靠着资历老工资也越来越多，可是看着那些新进来的年轻大学生，生龙活虎的干活，却只要那么一点的工资，老板的敲打在耳边响起，看人家年轻人吃的少干的多，你们这些老革命越老越不行了。难怪，打工生涯的结果是越老越贬值，尤其到了40-50年龄段，简直是事业最悲惨的阶段，时刻濒临深渊，如同趟地雷阵，动辄下岗失业。 \r\n所以说你现在有个稳定的工作，你觉得安全，其实等与在你身边按了颗定时炸弹，等到10多年后，它会爆炸，你那时失业的痛苦与代价恐怕要比现在残忍100倍。 \r\n　　那么创业人的性格特征是什么呢？ \r\n　　一个人创业的成功取决于三商，即智商、情商和胆商，但是一个真正的人才，他的三商重要性应该这样排列：胆商第一，情商第二，智商第三。目前中国教育培养出来的所谓人才是很片面的，仅仅在智商上优人一等，生产出来的毕业生产品大多是高分低能的庸才，虽然聪明，但是懦弱胆小，不擅交际，社会生存能力低下。聪明的人往往胆子小，而胆子大的人往往不是太聪明。 \r\n　创业的风险是失去近几年的预期打工收入，甚至破产后还得赔进去自己借的一部份钱，但是毕竟年轻，能够屡败屡战，从失败中汲取养分和经验，经商水平与能力一次比一次高，逐渐融入经商人士的群体后，眼界和经验日积月累，总有一个量变到质变的突破，只要真正的跨入了生意门，将来的事业基本上一片坦途。钱也越赚越多，财富积累越来越多，自身的价值也能得到最大的体现。相反，打工生涯持续下来，近几年确实平安无事，可你却是在不断的贬值和缩水，而不是越来越强健。打工的时间越长，你会越来越心虚，越来越胆怯，十几年后，稍有不慎，就可能被炒掉鱿鱼，失业下岗，你看看那个风险大呢？ \r\n　 理念决定了你如何选择，选择决定了你踏上哪一条路，走上哪一条路决定了你将来的人生过程和结果。 \r\n　　如果你选择了打工生涯，如果你绝对幸运，将来可以做上超金领，年收入不过几十万，如果你很不幸，做了低级白领，也许每个月只有一两千元，猪肉涨，鸡蛋一涨你家就少吃肉、蛋。即便这样卑微的生活，心中还常存恐惧，害怕失业。 \r\n　　如果你选择了创业生涯，如果你绝对的幸运，将来可以做中国富豪级人物，可以动辄捐助几个希望小学，时不时的享受高尔夫和私人游艇；如果你经商能力不行，只能开个杂货店，甚至在菜市场卖个豆腐，白菜什么的，你也能赚个一两千元，和低级白领过差不多的日子。但是你不怕失业，因为每天都有人来买豆腐，买白菜，这又是比白领生活强的地方。可见不同的理念，不同的选择；不同的结果，不同的人生。 \r\n中国人最不提倡的一种宝贵品质就是：冒险。 难怪中国普通百姓生活只能够觉得平庸与无聊，卑微而绝望。只有在生命中增加了冒险这剂良药，一个人才能恢复激情，恢复战斗力，才能在人生的竞技场中表现得像一名勇士！勇士都会得到上帝的垂青和奖赏！只要坚持屡败屡战，冒险的人最终的收获要比普通人大的多。 \r\n　　国内一位著名经济学专家说过:“为了维系正常的生活，打工者要想衣食无忧，过上正常、幸福的生活，一辈子到底得挣多少钱？” 　　假设在正常情况下, 我们从出生到成年大学毕业时22岁,我们有幸一直工作到60岁,这样我们打工人的一般职业生命为38年,那么这38年是为我们将来做准备而奋斗的，假如我们能够活到80岁，60岁到80岁这20年里，如果我们的每月1000元的生活必须开支，以及每月500元的医疗费用储备开支（因为在那个时候疾病会频繁的光顾和困扰我们），所以必须应该要有36万元的养老准备金，这还算不上我们超过80岁的那部分开支呢！这样一来，我们就知道了自己挣多少钱才够用。假定在货币价值稳定、没有通货膨胀的前提下，我们广大职业经理人为了维系简单的生活而生存，挣4000元就够了（还要有个前提就是基本的住房已经不是问题了），其中2000元用作目前的每月生活开支，1000元用作养老储备开支，500元用作年老时的医疗费用储备开支，500元用作子女的的教育费用投资。 \r\n　　如果打工人对于目前每月2000元的生活水准还充满恐惧，如果我们现在挣4000元还不够化的话，那么我们将来的生活到底会是怎么样的呢？如果我们还有打算项目投资、打算深造、打算住更大的漂亮住房、打算出国旅游，那么这个数目就远远不够了，现在我们的父辈有单位可以依靠，有我们这一代天良未泯的儿女锦薄相助，有同事朋友的余温，还有社会的关注和关怀，但是如果等到我们二三十年以后，等待我们的更会是什么样的状况呢？！ \r\n      朋友，看完这篇文章，有何想法呢？      ', NULL, 2009, '2009-10', 140, 1, ''),
(138, 'Flex中的行为与状态', NULL, '  在Flex程序中，引入了状态设计的概念。在一个程序中，按照功能的需求，将界面切分成独立的部分。运行过程中，随着用户交互，界面在各个部分之间切换。比如在购物车程序中，登录界面，选购商品，购物车，付款等界面，这些界面代表着不同的功能，显示当前程序的运行状态，每个界面便是一个状态。\r\n  在复杂程序设计中，将程序按照功能进行结构规划是相当重要，这样，问题会变得明了，这也是使用状态设计的原因。\r\n   其实，我们接触过很多的状态，只不过没有把它理论化。比如鼠标的点击动作，也是由几个状态组成：鼠标移上，鼠标按下，鼠标松开，鼠标移开。用这种角度来分析问题，条理就很清晰，不易让人陷入烦恼的逻辑纠纷中。\r\n  当状态发生改变时，我们可以为两个状态的切换添加变形动画。形变动画由若干个动画效果组成，可以理解为：状态的切换也是一种行为，因此，形变动画的创建和使用与行为一样，非常简单。\r\n  在Flex中，状态的创建也是很简单的。我们不需要花费很多的时间在界面设计上，也不用关心状态的运行方式，这些都由Flex来完成。\r\n  所有的组件都实现了状态机制，一般情况下，容器类组件或有容器特色的组件和状态机制是最佳组合，这样状态机制就可以控制程序的一个功能模块。   ', NULL, 2009, '2009-10', 104, 2, ''),
(139, '现在在写Flex 博客系统', NULL, ' 现在在写Flex 博客系统... 学校断网了...    \r\n      \r\n      ', NULL, 2009, '2009-10', 115, 1, ''),
(140, '就晓得D我的站!', NULL, ' 我和老A讲,把我的个人小站与论坛做链接，然后老A同意了，我很高兴，就去了论坛发个感谢的帖子，结果不知道哪个虾米先D论坛，然后D我的个人小站，结果害得我一直上不起。看来，我得换服务器了...\r\n \r\n      ', NULL, 2009, '2009-10', 107, 1, ''),
(141, 'Flex与后台结合的分页', NULL, '/*\r\n* 与服务器后端结合数据分页...本站原创,抄袭注意完整\r\n* Author:PHP技术博客,PHP博客 QQ:334192009\r\n*/\r\npublic var pageI:int = 1//分配给click事件,初始页码量为1\r\npublic function page(action:String,pageI:int):void{\r\nvar pageSize:int = 1;//每页显示的记录数\r\n//这里是总页数 根据这里的total.text数据总记录数(需要从服务器端获取) 取整\r\nvar maxRow:int = Math.ceil(int(total.text)/pageSize);\r\nif(action == ''first''){\r\nthis.pageI = 1;\r\n//调用服务器端得数据查询 参数如: LIMIT *,*\r\narticles.getAllArticles((this.pageI - 1) * pageSize,pageSize);\r\n}\r\nif(action == ''previous''){\r\nthis.pageI = this.pageI - 1;\r\nif(this.pageI < 1)\r\nthis.pageI = 1;\r\n//调用服务器端得数据查询 参数如: LIMIT *,*\r\narticles.getAllArticles((this.pageI - 1) * pageSize,pageSize);\r\n}\r\nif(action == ''next''){\r\nthis.pageI = this.pageI + 1;\r\nif(this.pageI > maxRow)\r\nthis.pageI = maxRow;\r\n//调用服务器端得数据查询 参数如: LIMIT *,*\r\narticles.getAllArticles((this.pageI - 1) * pageSize,pageSize);\r\n}\r\nif(action == ''last''){\r\nthis.pageI = maxRow;\r\n//调用服务器端得数据查询 参数如: LIMIT *,*\r\narticles.getAllArticles((this.pageI - 1) * pageSize,pageSize);\r\n}\r\n\r\n}\r\n]]>\r\n</mx:Script>\r\n<mx:Canvas width="100%" height="100%">\r\n<mx:List width="100%" height="100%" dataProvider="{instance.articles}" \r\nitemRenderer="views.listPage" \r\nthemeColor="#FCFCFC"/>\r\n<mx:Text text="文章总数:" x="3" y="371" fontSize="12"/>\r\n<mx:Label text="{instance.total}" id="total" y="371" x="57" fontSize="12"/>\r\n<mx:Label id="first" text="首 页" fontSize="12" x="161" y="371" click="page(''first'',this.pageI)"\r\n buttonMode="true" useHandCursor="true" mouseChildren="false" textDecoration="underline"/>\r\n<mx:Label id="previous" text="上一页" fontSize="12" x="192" y="371" click="page(''previous'',this.pageI)"\r\nbuttonMode="true" useHandCursor="true" mouseChildren="false" textDecoration="underline"/>\r\n<mx:Label id="next" text="下一页" fontSize="12" x="231" y="371" click="page(''next'',this.pageI)"\r\nbuttonMode="true" useHandCursor="true" mouseChildren="false" textDecoration="underline"/>\r\n<mx:Label id="last" text="未 页" fontSize="12" x="271" y="371" click="page(''last'',this.pageI)"\r\nbuttonMode="true" useHandCursor="true" mouseChildren="false" textDecoration="underline"/>\r\n</mx:Canvas>\r\n</mx:VBox>      ', NULL, 2009, '2009-10', 160, 2, ''),
(142, '博客搬家了', NULL, '  博客搬家了,已迁至到国外服务器，以前租用的红色主机也快过期了，红色主机的功能比较强大，费用也比较昂贵，但在抗DDos攻击方面做得不够完善,服务态度不是很好， 而且对用户也做流量限制，那些菜鸟及虾米找不到入侵的方式，就用DDOS攻击我的网站，所谓不能破门只能撞门，搞得几下子流量耗尽，网站超限。。。决定不再使用红色主机了...\r\n  \r\n      ', NULL, 2009, '2009-10', 96, 1, ''),
(143, 'Flex中单例模式', NULL, ' Flex中单例模式,常见的model层实例:\r\n  package models\r\n{\r\n	import flash.events.EventDispatcher;\r\n	\r\n	import mx.collections.ArrayCollection;\r\n	\r\n	import vo.articlesVO;\r\n	import vo.linksVO;\r\n	[Bindable]\r\n	public class ModelLocator extends EventDispatcher\r\n	{\r\n		public static var _instance:ModelLocator;\r\n		public static function getInstance():ModelLocator{\r\n			if(_instance == null){\r\n				_instance = new ModelLocator();\r\n			}\r\n			return _instance;\r\n		}\r\n		public var total:int;\r\n		public var isLogin:Boolean = false;\r\n		public var articles:ArrayCollection;\r\n		public var selectedArticle:articlesVO;\r\n		public var categories:ArrayCollection;\r\n		public var links:ArrayCollection;\r\n		public var selectedLink:linksVO;\r\n	}\r\n}\r\n类中自己完成了自身的实例。。\r\n<mx:Script>\r\n		<![CDATA[\r\n			import models.ModelLocator;\r\n			internal function initApp():void{\r\n				var instance:ModelLocator = ModelLocator.getInstance();\r\n				trace(instance.isLogin);//获得isLogin\r\n			}\r\n		]]>\r\n	</mx:Script>\r\n      ', NULL, 2009, '2009-10', 139, 2, ''),
(144, 'Flex数据绑定的概念', NULL, ' 从字面上看，“绑定”表示将若干个物体捆绑在一起。使用数据绑定时，Flex会把把一个对象的数据复制，提供给另一个对象使用，提供数据一方的称为数据源对象，(PHP博客，www.phpcq.com)使用数据的一方称为目标对象，当数据源对象发生改变时，目标对象的数据会自动更新，而不需要我们再编写代码去强制更新，这就是绑定的含义。数据绑定的这个特性非常实用，当程序要处理大量数据，而且要保持数据的实时更新，保持数据同步往往会令开发者大费周折，如今不用为这类问题而发牢骚了。\r\n 实际上，绑定的实现也是借用事件机制来完成。当对目标使用了数据绑定后，目标对象就会侦听数据源对象的某一固定事件，在以后的过程中，源对象发生变化时，数据源会派发改变事件，通知目标对象更新的数据。，(PHP博客，www.phpcq.com)只不过，这一事件流程都是由Flex自动处理。\r\n 绑定适用于各种类型的对象，只要参加绑定源对象的数据和目标对象的数据格式相同，就可以使用。下面几种情况中数据绑定使用得比较频繁：\r\n  1，将web service或remoting方式得到的数据绑定给控件\r\n  2，把控件数据绑定给后台通信的对象，发送给服务器端\r\n  3，后台返回数据和数据模型进行绑定\r\n  4，组件或对象属性的数据绑定\r\n\r\n 在绑定中作为数据源对象，该对象必须支持绑定，也就是，对象有派发改变事件的能力。Flex的组件提供了绑定接口，当然，并不是组件所有的属性及方法都可以用来作为数据源，一般来说，组件的重要属性都可用来作为绑定中的数据源。\r\n 尽管数据绑定功能非常强大，但并不是所有情况下都能使用，例如，有些情况下，数据的更新需要按照严格的先后顺序，不可同时更新，这时最好通过程序来设置数据改变。另外，一旦开始了绑定，每次源数据的改变都会导致目标对象的数据更新，而有时希望目标对象只在一定情况下才做出反应，，(PHP博客，www.phpcq.com)这时，绑定就不是一个好的解决办法。\r\n      \r\n      ', NULL, 2009, '2009-10', 219, 2, ''),
(145, '升级啦！', NULL, '    今天总算是升级啦！终于体会到拨开乌云见天明的那种喜悦了。   \r\n    这个站是我经常关顾的地方，但都是四处溜达溜达，根本没有挥笔的机会。今天没出太阳啊，这个站长却告诉我，我可以在这里面发表点日志。当然这个日志的范围很广，什么都可以。这个十年难得一遇的好机会，我怎么可能放过，二话不说，就开始了我这篇日志的创作。\r\n    虽然这只是一个开始，但是我希望是一个好的开始。\r\n      \r\n                                                   \r\n\r\n                                       Create By LiLi\r\n      \r\n      \r\n      \r\n      \r\n      \r\n      ', NULL, 2009, '2009-10', 85, 1, ''),
(146, '对QQ个性签名的解说', NULL, '    昨天，我将QQ个性签名改为“突然想重新做人”，当下都引起了很多朋友的疑问。有的问我:这个签名是不是太严肃；还有的问我:是不是犯什么错啦？为什么有这么严肃的感慨。其实他们都错了。我之所以有这样的感慨，是对现在生活的批判，对未来的感悟。\r\n    下面我就来说一下我的日常生活吧！\r\n    早上9：00上班，到了办公室打开电脑，由于没什么工作，就开始了我的偷菜之旅，沉浸于种菜与偷菜的喜悦之中。当然偷菜之余，还别忘了到QQ游戏基地玩上几把（挖金子是我最爱）。一天就这样浑浑噩噩的过了。下班回到家，看两部电影，做个美梦，新的一天又开始了。\r\n    朋友们都羡慕，我的工作轻松加愉快。可又有谁能了解，那轻松愉快后的空虚与庸俗。CC经常问我，是不是有心理疾病，整天沉迷于偷菜，可以把时间用来学点其他的东西。其实我又何尝不想，当我每次要确定方向时，却又相当的迷茫。安于现状的生活不是我想过的，我也想追求更好的，让日子过得充实而且有意义。\r\n    突然想重新做人只是想改变一下生活，改变一下心态。在此，我很想跟CC说一句：我没有对偷菜着魔哦，所以更不会有什么心理疾病。\r\n\r\n                                       \r\n\r\n\r\n                                      Create By LiLi\r\n    \r\n      \r\n      ', NULL, 2009, '2009-10', 140, 1, ''),
(147, '初试:一个基于ZendFramework+Smarty开发留言本程序', NULL, '  今天，初试了一公司...公司的技术人员给我出了一道编程题，并且相关人员声明：过了此关才有资格面试。。\r\n   题目如下： 完成一个基于ZendFramework+Smarty开发留言本程序，能够留言，显示留言列表（留言内容，留言人，IP，留言时间），简单的用户注册系统，留言必须登入才可以操作。写一个WebService接口，可以查询用户最近留言（服务端查询结果需要缓存一小时，下次查询时，不必再访问数据库)。。\r\n  程序我写出来了，不过ui做得很烂...空了，我会把代码贴出来！欢迎大家的批评。。。\r\n   我相信大家都能做出来...这只是第一关!!\r\n   ', NULL, 2009, '2009-10', 159, 1, ''),
(148, '每个女孩都是公主', NULL, '    昨晚看了一部名叫《小公主》的电视剧，特别喜欢里面的小主人公—萨拉•克鲁。她是一位印度公主，虽然家庭富有，但却一直独立，坚强的生活着。她的梦想是成为一位像她母亲那样独立并且坚强的淑女。\r\n    她和她母亲有着同样的口头禅：“每个女孩都是公主，不要总是说自己是这样或那样的人，要抬头挺胸高傲的活着。”这句话深深的感动着我。小萨拉还经常说：其实我一个人也会很孤独，很寂寞，但是我不会在离别的时候流眼泪，不会表现出不开心，我要抬头挺胸坚强的离开，让我身边的人放心。\r\n    这需要何等的勇气，她的人格是多么的独立与坚韧。华丽的外衣没有磨灭她，让她沉迷于骄傲自满，目中无人的世界里。反而让她越发光彩照人，深受众人喜爱。\r\n    小萨拉无疑是我们学习的楷模 ，你现在是不是还在因生活无助而嫌弃自己，因寂寞而放荡自己。看看小萨拉吧，心中铭记那句唤人深醒的话：每个女孩都是公主，我们要抬头挺胸高傲的活着。\r\n\r\n\r\n                                   Create  By  LiLi\r\n ', NULL, 2009, '2009-10', 98, 1, ''),
(149, 'PHP soap实例(一)', NULL, '  php提供了一个专门用于soap操作的扩展库，使用该扩展库后\r\n可以直接在php中进行soap操作。下面将介绍soap的基本操作。\r\n 一、soap扩展的使用方法\r\n  php的soap扩展库通过soap协议实现了客服端与服务器端的\r\n数据交互操作。从php5.0后，php就自带了soap的支持。使用\r\nsoap扩展库首先需要修改php安装目录下的配置文件php.ini\r\n来激活soap扩展库。\r\n 在php.ini文件中找到如下所示的一行代码，去掉前面的注释(;)。\r\n ;extension=php_soap.dll\r\n 修改后，重启web服务器即可激活soap扩展。在soap扩展库中，主要\r\n包括三种对象。\r\n 1、SoapServer \r\n  SoapServer用于创建php服务器端页面时定义可被调用的函数及返回\r\n响应数据。创建一个SoapServer对象的语法格式如下:\r\n  $soap = new SoapServer($wsdl,$array);\r\n 其中，$wsdl为shoap使用得wsdl文件，wsdl是描述Web Service的一种\r\n标准格式，若将$wsdl设置为null，则表示不使用wsdl模式。$array是\r\nSoapServer的属性信息，是一个数组。\r\n SoapServer对象的addFunction方法是用来声明哪个函数可以被客户端调用，\r\n语法格式如下：(php博客|php技术博客www.phpcq.com)\r\n $soap->addFunction($function_name);\r\n其中，$soap是一个SoapServer对象，$function_name是需要被调用的函数名。\r\n SoapServer对象的handle方法用来处理用户输入并调用相应的函数，最后返回\r\n给客户端处理的结果。语法格式如下:(php博客|php技术博客www.phpcq.com)\r\n $soap->handle([$soap_request]);\r\n其中，$soap是一个SoapServer对象,$soap_request是一个可选参数，用来表示\r\n用户的请求信息。如果不指定$soap_request，则表示服务器将接收用户的全部\r\n请求。\r\n 2、SoapCliet\r\n  SoapClient用于调用远程服务器上的SoapServer页面，并实现了对相应函数的调用\r\n。创建一个SoapClient对象的语法格式如下:\r\n  $soap = new SoapClient($wsdl,$array);\r\n  其中，参数$wsdl和$array与SoapServer相同。\r\n  创建SoapClient对象后，调用服务端页面中的函数相当于调用了SoapClient的方法，\r\n  创建语法如下:(php博客|php技术博客www.phpcq.com)\r\n  $soap->user_function($params);\r\n  其中，$soap是一个SoapClient对象，user_function是服务器端要调用的函数，$params\r\n是要传入函数的参数。\r\n 3、SoapFault\r\n   SoapFault用于生成soap访问过程中可能出现的错误。创建一个soapFault对象的语法格式\r\n如下：(php博客|php技术博客www.phpcq.com)\r\n $fault = new SoapFault($faultcode,$faultstring);\r\n 其中，$faultcode是用户定义的错误代码，$faultstring是用户自定义的错误信息。soapFault\r\n对象会在服务器端页面出现错误时自动生成，或者通过用户自行创建SoapFault对象时生成。对于\r\nSoap访问时出现的错误，客户端可通过捕捉SoapFalut对象来获得相应的错误信息。\r\n 在客户端捕获SoapFault对象后，可以通过下面的代码获得错误代码和错误信息。\r\n $fault->faultcode;//错误代码\r\n $fault->faultstring;//错误信息\r\n 其中，$fault是在前面创建的SoapFault对象。\r\n      ', NULL, 2009, '2009-10', 760, 2, ''),
(150, '你好久才能放手，麻烦别搞我博客了', NULL, ' 前段时间，黑基的那些虾米找不到入侵博客的方法，就采用DDOS攻击，搞得几下子博客流量耗尽，而导致挂站。\r\n 刚才看了我这个博客流量分析系统，在系统里看到了有人猜我的管理员后台，那人真是不厚道哈！想做不文明的事情，我博客上已经声明了程序是用php语言开发的，而且他还用login.asp等asp程序的命名方式来查找后台，，真是，雷人。。。   麻烦下次找一个 查找php网站后台的工具，你就别叼着那个asp的注入工具不放!O(∩_∩)O哈哈~\r\n \r\n      \r\n      \r\n      \r\n      ', NULL, 2009, '2009-10', 163, 1, ''),
(153, 'PHP soap实例(二)', NULL, ' 服务器端的编写\r\n 实现的Soap服务器端的功能是提供给客户端用来调用的函数，接受客户端传入的参数，并将\r\n处理结果返回客户端。函数的功能为返回参数的和，文件名为soapServer.php具体代码如下所示:\r\n <?php\r\n /**\r\n 	* @Soap实例二 服务端(Server)示例\r\n 	* @author PHP技术博客，PHP博客，WWW.PHPCQ.COM\r\n 	*/\r\n function soap_add($num1,$num2){\r\n	if (trim($num1) != (int)$num2 || trim($num2) != (int)$num2) {\r\n		return new SoapFault(''1'',''用户数据非法!'');\r\n	} else {\r\n		return $num1 + $num2;\r\n	}\r\n}\r\n$soapServer = new SoapServer(null,array(''url''=>''soap''));//创建SoapServer对象\r\n$soapServer->addFunction(''soap_add'');//注册服务函数\r\n$soapServer->handle();//处理并生成Soap\r\n上面代码编写了一个soap_add函数用于实现两个参数的和，并且该页面支持客户端远程调用。\r\n\r\n客户端的编写\r\n<?php\r\n /**\r\n 	* @Soap实例二 客户端(Client)示例\r\n 	* @author PHP技术博客，PHP博客，WWW.PHPCQ.COM\r\n 	*/\r\ntry {\r\n	\r\n	//创建客户端实例\r\n	$soapClient = new SoapClient(null,\r\n						array(''location''=>''http://www.phpcq.com/soapServer.php'',\r\n						''uri''=>''soap''));\r\n	$num1 = 1; $num2 = 2;\r\n	$sum = $soapClient->soap_add($num1,$num2);\r\n	echo $num1 + $num2 = $sum;					\r\n} catch (SoapFault $fault){\r\n	echo "错误[$fault->faultcode:$fault->faultstring]";\r\n}\r\n客户端代码使用try...catch()语句实现了Soap访问服务端过程中可能会出现的错误，并在错误发生时将错误\r\n以合适的格式输出。\r\n\r\n      \r\n      ', NULL, 2009, '2009-10', 208, 2, ''),
(157, '亲爱的，你忘了吗？', NULL, '  \r\n    我一直都很希望有个自己的熊熊，亲爱的曾说在我生日那天会送我一个，但是生日都过了很多天了，他却只字未提。我很失落。\r\n    终于明白什么叫希望越大，失望就越大。还记得我们许下承诺的那天，我心里都多么的高兴，多么的期待。现在我们才出来工作没多久，生活上应该拮据一点。我觉得如果继续去追问这个问题肯定也会让他很难堪，同时也不想让他误解我，但每每想起心里难免有点难受。\r\n    我真的很想问问：亲爱的，你忘了吗？\r\n        \r\n\r\n\r\n Create By LiLi\r\n      \r\n      \r\n      \r\n      \r\n      \r\n      ', NULL, 2009, '2009-10', 144, 1, 'lilix');
INSERT INTO `article` (`id`, `caption`, `shortContent`, `content`, `tags`, `times`, `date`, `degree`, `cate_id`, `password`) VALUES
(158, '对Web Service进行简单的介绍', NULL, ' 前两次提到了XML-RPC和SOAP调用类似，Web Service是一个远程Web Service是一个远程Web服务的提供者。\r\nWeb Wervice通过web页面向外界发布可以调用API接口，远程的客户端或者其他网站可以通过程编程来实现\r\n对这个接口的调用以操作服务器上的资源。\r\n 与传统的页面访问不同，web Service并不根据用户在浏览器上的输入来获得相应的运行结果，而是通过远程调用其API函数来进行处理。使用Web Service可以使远程客户端很容易获得服务器的运行结果并对其进行\r\n二次编程。\r\n  Web Service使用XML表示数据传输过程中的数据格式，一般Web Service会在服务器端定义可被调用函数参数的数据类型、返回值的数据类型以方便客户端调用。对于XML的数据类型，一般使用W3C组织制定的XSD标准来实施。\r\n  XSD是XML Schema的缩写，是专门用于定义XML数据类型的一套标准。Web Service就是使用XSD作为其数据类型标准的，在构造Web Service时，必须将程序中的数据类型转换成XSD标准。\r\n   Web Service一般使用SOAP协议来进行调用。由于SOAP也是基于XML和XSD构架的，因此，使用SOAP调用Web Service可以避免因为编程语言的不同而造成的数据类型紊乱。      ', NULL, 2009, '2009-10', 142, 2, ''),
(159, 'PHP与Web Service交互实例', NULL, '这里需要在网上下载一个nusoap类\r\n服务器端代码：求和函数\r\n<?php\r\n/*@name:Web Service求和 相关对象的用法请查看手册\r\n *@author:PHP博客|PHP技术博客 www.phpcq.com\r\n */\r\nrequire_once(''Nusoap/nusoap.php''); \r\n  \r\n$server = new soap_server(); \r\n  \r\n$server->configureWSDL(''My WebService''); //配置WSDL  \r\n//注册函数\r\n$server->register(''soap_add'',//要调用的函数 \r\n//传入参数的数据类型 \r\n    array(''num1'' => ''xsd:int'', ''num2'' => ''xsd:int''), \r\n    array(''return'' => ''xsd:int''));//返回值数据类型\r\n  \r\nfunction soap_add($num1, $num2) \r\n{\r\n//如果用户数据非法则抛出错误\r\n   if (trim($num1) != intval($num1) || trim($num2) \r\n!= intval($num2))\r\n   {\r\n      return new soap_fault(''1'', ''用户数据非法！'');\r\n   }\r\n   else\r\n   {\r\n      return $num1 + $num2;\r\n   }\r\n}\r\n  \r\n$server->service($HTTP_RAW_POST_DATA); \r\n?>\r\n客户端代码\r\n<?\r\ninclude(''Nusoap/nusoap.php'');\r\ntry\r\n{\r\n	$client = new soapclient(''\r\nhttp://localhost/soapserver.php?wsdl'', true);\r\n	\r\n	$params = array(''num1''=>10, ''num2''=>20);\r\n	$sum = $client->call(''soap_add'', $params);\r\n	echo "Summary: $sum";\r\n}\r\ncatch(soap_fault $fault)\r\n{\r\n	echo "错误：$fault->faultcode, \r\n$fault->faultstring";\r\n}\r\n?>      ', NULL, 2009, '2009-10', 211, 2, ''),
(160, '没事做整理了vi中常用的一些命令', NULL, 'vi filename 创建filename文件\r\ni a o  这三个指令都可以进入编辑状态\r\n:wq 保存退出\r\n:w 保存\r\n:x 保存退出\r\n:q! 不保存退出\r\nshift-6 光标到达行头\r\nshif -4 光标到达行尾\r\nshift+H 光标到达顶部 shift+M 光标到达中 shift+L 光标到达底 shift+G 光标到达尾\r\npage up 上翻 page down 下翻 \r\nu 撤销 \r\nndd 删除多行\r\n. 重复某个命令\r\nyy 复制一行\r\np 粘贴\r\n:r filename 复制文件\r\n/ 查找\r\n/\\ 查找转义 \r\n:s/old/new 替换\r\n:s/old/new/g 替换一行\r\n:%s/old/new/g 替换所有\r\n:%s/old/new/gc 询问替换所有\r\n:set nu 显示行号\r\n:set nonu取消显示行号\r\n      ', NULL, 2009, '2009-10', 105, 2, ''),
(161, 'WSDL的简单概述', NULL, '    WSDL是Web Service Description Language(Web服务描述语言)的缩写，WSDL使用XML文档来描述Web Service中的全部可调用的函数或方法、调用服务使用的协议和Web Service所在的位置信息。WSDL可以被程序员通过编程工具方便地阅读，一下优秀的编程工具都提供了根据WSDL文档自动生成调用Web Service代码的功能。\r\n    WSDL文档主要包括以下元素:\r\n    1、types:定义了Web Service中使用的全部数据类型的规范所在的位置，这些数据类型可被Web Service中的具体函数实现部分引用。一般来说，这些类型都遵循XSD规范。\r\n    2、message:定义了数据传输过程中的数据类型。例如，函数调用的参数数据类型和返回值的数据类型。\r\n    3、portType:定义了可被客户端调用的全部函数或方法的集合。这些函数或方法可以被客户端按照相应的格式进行调用。\r\n    4、operation：定义了某个函数或方法的名称、传入参数及返回值等信息。\r\n    5、binding：定义了将前面定义的抽象portType集合转换为具体实现的方法。例如，要被调用的函数所在页面的位置等。\r\n    6、service：定义了要被调用的函数或方法所在的源代码的位置。\r\n    7、port：定义了要某个包含被调用的函数或方法所在的源代码的位置和端口号等信息。可以看出，types、message和portType定义了Web Service的功能，binding定义了Web Service的实现方法和使用方法，service和port定义了Web Service所在的位置。上面的这些元素完整\r\n地表达了Web Service的全部内容。     ', NULL, 2009, '2009-10', 160, 2, ''),
(162, '不同数据库的差异', NULL, '  目前市场上流行的数据库有很多种，虽然这些数据库在开发时遵循同样的标准，但是，每种数据库都有一些与其他同类产品不一样的地方。\r\n一、ANSI SQL及常见关系型数据库的SQL扩展SQL语言是目前流行的一款专门用于操作关系型数据库的语言。现在流行的SQL语言标准为ANSI制定的ANSI SQL-92。ANSI是美国工商业集团组织，是ISO和IEC的成员之一。在1992年ISO和IEC共同公布SQL-92。随后，ANSI也发布了ANSI SQL-92，通常称为ANSI SQL。尽管市面上流行的各种关系型数据库与ANSI SQL版本有一些差异，但是基本上都是遵循ANSI SQL的标准。\r\n    1、ANSI SQL\r\n    ANSI SQL主要包括两种数据操作语言，一个是用于数据库元素定义的数据定义语言(DDL)，一个是用于数据库元素管理的数据管理语言(DML)。\r\n\r\n    ⑴数据定义语言(DDL)\r\n\r\n    DDL是用于定义和管理数据库元素的语言，主要用于数据库中的数据表、索引和视图的创建、修改和删除等。以下代码在数据库中创建了一个表。\r\n    CREATE TABLE MyTable\r\n    (user_id smallint,\r\n    username char(22),\r\n    password char(22),\r\n    email char(30));\r\n    以下代码对上面创建的表进行了修改操作。增加了一个新列。\r\n    ALTER TABLE MyTable\r\n    ADD tel_no char(22);\r\n    以下代码将删除上面创建的表。\r\n    DROP TABLE MyTable;\r\n    可以看到，上面的三条SQL语句实现了对数据库中元素的创建、修改和删除。其他数据库元素均可以使用相似的方法来完成这些操作。\r\n\r\n    ⑵数据管理语言(DML)\r\n\r\n    DML是用于数据库中数据管理的语言，主要用于数据库中数据的查询、插入、修改和删除等。例如，以下代码向数据库中MyTable表中插入了一条数据。\r\n    INSERT INTO MyTable\r\n    VALUES(100001,''Simon'',''123456'',''pch1982cn@yahoo.com.cn'');\r\n    以下代码对这条数据进行了修改。\r\n    UPDATE MyTable\r\n    SET username = "Elaine"\r\n    WHERE user_id = 100001;\r\n    以下代码删除了这条数据。\r\n    DELETE FROM MyTable\r\n    WHERS user_id =100001;\r\n    以下代码从数据库中查询这条数据。\r\n    SELECT * FROM MyTable\r\n    WHERE user_id =100001;\r\n    上面的例子均为ANSI SQL的典型例子。对于大多数关系型数据库产品来说，均可以使用ANSI SQL对数据库进行一般性操作。      \r\n      ', NULL, 2009, '2009-10', 119, 2, ''),
(163, '不同数据库的差异(MySQL对ANSI SQL的扩充)', NULL, ' 2、MySQL对ANSI SQL的扩充\r\n    MySQL包含了一些在ANSI SQL中找不到的功能。下面将简要介绍其中的几项。\r\n    ⑴ 注释\r\n    由于使用MySQL专门的SQL语句将导致SQL语句不再与其他的数据库管理系统兼容。因此，MySQL提供了一种注释形式，可以使用"/*!...*/"形式的注释将MySQL专门的代码写\r\n在注释内。这样，在其他的数据库管理系统上运行SQL时将不会被运行，而在MySQL中，注释内的代码也将被MySQL执行。例如以下代码将TEMPORARY关键字放入了注释中。\r\n    CREATE /*! TEMPORARY */ TABLE MyTable (coll int);\r\n    这时，在MySQL中实际上执行的SQL语句是没有注释的SQL，如下所示。\r\n    CREATE TEMPORARY TABLE MyTable (coll int);\r\n    而在其他的数据库管理系统中，实际上执行的SQL语句如下所示。\r\n    CREATE TABLE MyTable (coll int);\r\n    对于MySQL的不同版本，也可以通过注释的方法来实现区分。其方法是在叹号"!"后面写上版本号，这样，注释内的代码将只在该版本号以上的MySQL版本下运行，如以下代码\r\n所示。\r\n    CREATE /*!40102 TEMPORARY */ TABLE MyTable (coll int);\r\n    上面的SQL语句在MySQL版本大于等于4.1.2下运行时的SQL语句如下所示。\r\n    CREATE TEMPORARY TABLE MyTable (coll int);\r\n    而在更早期的版本中，实际上执行的SQL语句如下所示。\r\n    CREATE TABLE MyTable (coll int);\r\n    ⑵SELECT语句中的逻辑判断\r\n    MySQL提供了在SELECT语句中进行逻辑判断的功能。其逻辑判断操作符主要包括=、<>、<=、<、>=、>、AND、OR和LIKE等。当逻辑成立时，其返回值为1，否则为0。\r\n    ⑶Limit语句\r\n    MySQL提供了一个Limit子句用于选择查询结果中的记录，该子句一般放在SELECT或者DELETE语句的末尾，需要注意的是使用limit子句时，第一条记录的编号为0。      \r\n      ', NULL, 2009, '2009-11', 141, 2, ''),
(164, 'SQL Server的T-SQL和Oracle的PL/SQL', NULL, '3、SQL Server的T-SQL\r\n    T-SQL是SQL Server提供的基于SQL语言的一个增强型SQL语言。T-SQL提供了ANSI SQL的全部功能，并增加了扩展的函数、系统预存和程序设计结构等更多功能。下面将介绍几个常见的T-SQL的增强特点。\r\n    ⑴T-SQL提供了更丰富的数据类型\r\n    T-SQL提供了多种额外的数据类型，可以在数据库的一个属性中最多保存2GB的数据。并且还提供了XML数据类型用于专门存储XML数据。\r\n    ⑵错误处理机制\r\n    T-SQL提供了类似PHP中的try...catch语句的方法来捕获SQL代码运行时的异常，其语\r\n法格式如下所示。\r\n    BEGIN TRY\r\n    --SQL 代码\r\n    END TRY\r\n    BEGIN CATCH TRAN_ABORT\r\n    --错误处理\r\n    END CATCH\r\n\r\n 4、Oracle的PL/SQL\r\n    PL/SQL与T-SQL类似，是Oracle提供的SQL扩展。PL/SQL使用块语法来完成一个功能。PL/SQL的块语法格式如下所示。\r\n    [DECLARE]\r\n    ---定义部分\r\n    BEGIN\r\n    ---执行部分\r\n    [EXCEPTION]\r\n    ---异常处理部分\r\n    END\r\n    PL/SQL中的每条语句均以分号结束，可以再其中嵌入一条或者多条SQL语句。\r\n    Oracle提供四种类型的PL/SQL程序。\r\n    ⑴函数：函数可以接受若干个参数，并将处理后的变量返回，其语法格式如下所示。\r\n    FUNCTION name [{parameter1[,parameter2,...])] RETURN date_type IS\r\n    ---定义部分\r\n    BEGIN\r\n    ---执行部分\r\n    [EXCEPTION\r\n    ---异常处理部分   \r\n    END [name]\r\n    ⑵过程：过程与函数类似，其区别在于没有返回值，其语法格式如下所示。\r\n    PROCEDURE name [{parameter1[,parameter2,...])] IS\r\n    ---定义部分\r\n    BEGIN\r\n    ---执行部分\r\n    [EXCEPTION\r\n    ---异常处理部分\r\n    END [name]    \r\n    ⑶包：包是一个各种相关对象的集合，可以包括多个函数和过程。\r\n    ⑷触发器：用于接收来自数据库中的操作，并触发一段PL/SQL块。      ', NULL, 2009, '2009-11', 181, 2, ''),
(165, '正则表达式入门', NULL, '1.1 正则表达式的用途\r\n    正则表达式(regular expression,简称regex)是一种工具，和其他工具一样，它是人们为了解决某一类专门的问题而发明的。要想理解正则表\r\n达式及其功能，最好的办法是了解它们可以解决什么样的问题。\r\n    请考虑以下几个场景：\r\n    ◆你正在搜索一个文件，这个文件里包含着单词car（不区分字母大小写），但你并不想把包含着字符串car的其他单词（比如scar、carry和incarcerate，等等）也找出来。\r\n    ◆你打算用一种应用服务器来动态地生成一个Web网页以显示从某个数据库里检索出来的文本。在那些文本里可能包含着一些URL地址字符串，而你希望那些URL地址在最终生成的页面里是可点击的（也就是说，你打算生\r\n成一些合法的HTML代码-<A HREF></A>-而不仅仅是普通的文本）。\r\n    ◆你创建了一份包含着一张表单的Web页面，这张表单用来收集用户信息，其中包括一个电子邮件地址。你需要检查用户给出的电子邮件地址是否\r\n符合正确的语法格式。\r\n    ◆你正在编辑一段源代码并且要把所有的size都替换为isize，但这种替换仅限于单词size本身而不涉及那些包含着字符串size的其他单词。\r\n    ◆你正在显示一份计算机文件系统中所有文件的清单，但你只想把文件名里包含着Application字样的文件列举出来。\r\n    ◆你正在把一些数据导入应用程序。那些数据以制表符作为分隔符，但你的应用程序要支持CSV格式（每条记录独占一行，同一条记录里的各项数\r\n据之间用逗号分隔并允许被括在引号里面）。\r\n    ◆你需要在文件里搜索某个特定的文本，但你只想把出现在特定位置的（比如每行的开头或是每条语句的结尾）找出来。\r\n    以上场景都是大家在编写程序时经常会遇到的问题，用任何一种支持条件处理和字符串操作的编程语言都可以解决它们--但问题是你的解决方案将会变得十分复杂。比较容易得到的办法是，用一些循环来依次遍历那些单词或字符并在循环体里面用一系列if语句来进行测试，这往往意味着你需要使用大量的标志来标记你已经找到了什么，你还没有找到什么，还需要检查空白字符和特殊字符，等等。而这一切都需要以手工方式来进行。\r\n    另一种解决方案是使用正则表达式。上述问题都可以用一些精心构造的语句--或者说一些由文本和特殊指令构成的高度简练的字符串来解决，比如像下面这样的语句：\r\n    \\b[Cc][Aa][Rr]\\b      ', NULL, 2009, '2009-11', 134, 2, ''),
(174, '匹配纯文本', NULL, '2.1  匹配纯文本\r\n    Ben是一个正则表达式。因为本身是纯文本，所以看起来可能不像是一个正则表达式，但它的确是。正则表达式可以包含纯文本（甚至可以只包含纯文本）。当然。像这样使用正则表达式是一种浪费，但把它作为\r\n我们学习正则表达式的起点还是很不错的。\r\n    我们来看一个例子：\r\n    文本\r\n    Hello,my name is Ben.pLease visit\r\n    my website at http://www.forta.com/.\r\n    正则表达式\r\n    Ben\r\n    结果\r\n    Hello,my name is (Ben).Please visit\r\n    my website at http://www.forta.com/.\r\n    分析\r\n    这里使用的正则表达式是纯文本，它将匹配原始文本里的Ben。\r\n    我们再来看一个例子，它使用了与刚才相同的原始文本和另外一个正则表达式：\r\n    文本\r\n    Hello,my name is Ben.Please visit\r\n    my website at http://www.forta.com/.\r\n    正则表达式\r\n    my\r\n    结果\r\n    Hello,(my) name is Ben.Please visit\r\n    (my) website at http://www.forta.com/.\r\n    分析\r\n    my也是静态文本，它在原始文本里找到了两个匹配结果。\r\n2.1.1 有多个匹配结果\r\n    绝大多数正则表达式引擎的默认行为是只返回第一个匹配结果。具体到上面那个例子，原始文本里的第一个my通常是一个，但第二个往往不是。\r\n    怎样才能把两个或更多个匹配结果都找出来呢？绝大多数正则表达式的实现都提供了一种能够把所有的匹配结果全部找出来的机制（通常返回为一个数组或是其他的专用格式）。比如说，在JavaScript里，可选的g（意思\r\n是“global”,全局）标志将返回一个包含所有匹配的结果数组。\r\n2.1.2 字母的大小写问题\r\n    正则表达式是区分字母大小写的，所以Ben不匹配ben。不过，绝大多数的正则表达式实现也支持不区分字母大小写的匹配操作。比如说，JavaScript用户可以用i标志来强制执行一次不区分字母大小写的搜索。      ', NULL, 2009, '2009-11', 131, 2, ''),
(175, '正则表达式-匹配任意字符', NULL, ' 匹配任意字符\r\n\r\n    前面见到的正则表达式都是些静态的纯文本，它们根本体现不出正则表\r\n达式的威力。下面，我们一起来看看如何使用正则表达式去匹配不可预知的\r\n字符。\r\n    在正则表达式里，特殊字符（或字符集合）用来给出要搜索的东西。.字\r\n符（英文句号）可以匹配任何一个单个的字符。\r\n    提示：如果你曾经使用过DOS的文件搜索功能，你将发现正则表达式里的\r\n.字符相当于DOS的?字符。SQL用户将注意到正则表达式里的.字符相当于SQL中\r\n的_（下划线）字符。\r\n    于是，用正则表达式c.t进行的搜索将匹配到cat和cot（还能匹配到一些\r\n毫无意义的单词）。\r\n    文本\r\n    sales1.xls\r\n    orders3.xls\r\n    sales2.xls\r\n    sales3.xls\r\n    apac1.xls\r\n    europe2.xls\r\n    na1.xls\r\n    na2.xls\r\n    sa1.xls\r\n    正则表达式\r\n    sales.\r\n    结果\r\n    (sales1).xls\r\n    orders3.xls\r\n    (sales2).xls\r\n    (sales3).xls\r\n    apac1.xls\r\n    europe2.xls\r\n    na1.xls\r\n    na2.xls\r\n    sa1.xls\r\n    分析\r\n    正则表达式sales.将把由字符串sales和另外一个字符构成的文件名查找出来。\r\n9个文件里有3个与这个模式（pattern）相匹配。\r\n    提示：人们常用模式表示实际的正则表达式。\r\n    注意：正则表达式可以用来匹配包含着字符串内容的模式。匹配的并不总是整\r\n个字符串，而是与某个模式相匹配的字符——即使它们只是整个字符串的一部分。在\r\n上面的例子里，我们使用的正则表达式并不能匹配整个文件名，它只匹配了文件名的\r\n一部分。如果你需要把某个正则表达式的匹配结果传递到其他代码或应用程序里做进\r\n一部处理，就必须记住这一细节差异。\r\n    .字符可以匹配任何单个的字符、字母、数字甚至是.字符本身。\r\n    文本\r\n    sales.xls\r\n    sales1.xls\r\n    orders3.xls\r\n    sales2.xls\r\n    sales3.xls\r\n    apac1.xls\r\n    europe2.xls\r\n    na1.xls\r\n    na2.xls\r\n    sa1.xls\r\n    正则表达式\r\n    sales.\r\n    结果\r\n    (sales).xls\r\n    (sales1).xls\r\n    orders3.xls\r\n    (sales2).xls\r\n    (sales3).xls\r\n    apac1.xls\r\n    europe2.xls\r\n    na1.xls\r\n    na2.xls\r\n    sa1.xls\r\n    分析\r\n    这个例子比上一个多了一个sales.xls文件。因为，能够匹配任何一个\r\n单个的字符，所以这个文件也与模式sales.相匹配。\r\n    在同一个正则表达式里允许使用多个.字符，它们既可以连续出现（一\r\n个接着一个——..将匹配任意两个字符），也可以间隔着出现在模式的不同\r\n位置。我们再来看一个使用了相同原始文本的例子：把以na（表示北美）或\r\nsa（表示南美）开头的文件（不管它们后面跟着一个什么数字）找出来。\r\n    文本\r\n    sales1.xls\r\n    orders3.xls\r\n    sales2.xls\r\n    sales3.xls\r\n    apac1.xls\r\n    europe2.xls\r\n    na1.xls\r\n    na2.xls\r\n    sa1.xls\r\n    正则表达式\r\n    .a.\r\n    结果\r\n    (sal)es1.xls\r\n    orders3.xls\r\n    (sal)es2.xls\r\n    sales3.xls\r\n    a(pac)1.xls\r\n    europe2.xls\r\n    (na1).xls\r\n    (na2).xls\r\n    (sa1).xls\r\n    分析\r\n    正则表达式.a.把na1、na2、sa1找了出来，但它同时还找到了4个预料之外的匹配结果\r\n。为什么会这样？因为我们使用的模式将与第2个字符是a的任意3个字符相匹配。\r\n    我们真正需要的是后面再紧跟着一个英文句号的.a.的模式。我们再来试一次：\r\n    文本\r\n    sales1.xls\r\n    orders3.xls\r\n    sales2.xls\r\n    sales3.xls\r\n    apac1.xls\r\n    europe2.xls\r\n    na1.xls\r\n    na2.xls\r\n    sa1.xls\r\n    正则表达式\r\n    .a..\r\n    结果\r\n    (sale)s1.xls\r\n    orders3.xls\r\n    (sale)s2.xls\r\n    (sale)s3.xls\r\n    a(pac1).xls\r\n    europe2.xls\r\n    (na1.)xls\r\n    (na2.)xls\r\n    (sa1.)xls\r\n    分析\r\n    .a..并不比.a.好多少；新增加的，将匹配任何一个多出来的字符（不管它是什么）\r\n。既然.是一个能够与任何一个单个字符相匹配的特殊字符，我们怎样才能搜索.本身呢？', NULL, 2009, '2009-11', 328, 2, ''),
(176, '正则表达式-匹配特殊字符', NULL, '匹配特殊字符\r\n   .字符在正则表达式里有着特殊的含义。如果模式里需要一个.，就要想办法来告诉正\r\n则表达式你需要的是.字符本身而不是它在正则表达式里的特殊含义。为此，你必须在.的\r\n前面加上一个\\（反斜杠）字符来对它进行转义。\\是一个元字符（metacharacter，表示\r\n“这个字符有特殊的含义，而不是字符本身含义”）。\r\n    我们再来验证一次刚才的例子，这次我们使用了\\对.进行转义：\r\n    文本\r\n    sales1.xls\r\n    orders3.xls\r\n    sales2.xls\r\n    sales3.xls\r\n    apac1.xls\r\n    europe2.xls\r\n    na1.xls\r\n    na2.xls\r\n    sa1.xls\r\n    正则表达式\r\n    .a.\\.xls\r\n    结果\r\n    sales1.xls\r\n    orders3.xls\r\n    sales2.xls\r\n    sales3.xls\r\n    apac1.xls\r\n    europe2.xls\r\n    (na1.xls)\r\n    (na2.xls)\r\n    (sa1.xls)\r\n    分析\r\n    .a.\\.xls解决了问题。第一个.匹配n（在前两个匹配结果里）或s（\r\n在第3个匹配结果里），第2个.匹配1（在第1个和第3个匹配结果里）或2（\r\n在第2个匹配结果里）。接下来，\\.匹配文件名与扩展名之间的分隔符.本身\r\n，最后的xls匹配它本身。（事实上，即使没有最后面的xls，这次搜索的结\r\n果也会与我们预想的一样；加上xls可以避免匹配到诸如sa3.doc之类的文件\r\n名。）\r\n    在正则表达式里，\\字符永远出现在一个有着特殊含义的字符序列的开头\r\n，这个序列可以由一个或多个字符构成。刚才看到的是\\.序列，后面还会看到\r\n更多使用了\\字符的例子。\r\n    注意:如果需要搜索\\本身，就必须对\\字符进行转义；相应的转义序列是\r\n两个连续的反斜杠字符\\\\。\r\n    提示：我们刚才说到的，.可以匹配任何一个字符，这一说法并非绝对正确\r\n。在绝大多数的正则表达式实现利里，.只能匹配除换行符以外的任何单个字符。\r\n      \r\n      ', NULL, 2009, '2009-11', 249, 2, ''),
(177, 'komodo中文(汉化版-内带破解补丁)下载', NULL, ' Komodo是跨平台的IDE编程工具, 拥有支持Windows, Mac和Linux操作系统平台的多个版本; 支持多种语言, 包括但不限于C++, Python, Perl, PHP, Ruby, JavaScript, CSS, Tcl, XML, HTML多种编程语言.\r\n\r\n 个人认为它比zend studio跑起更流畅。。。\r\n komodo中文(汉化版-内带破解补丁)下载地址:\r\n\r\n http://www.PHPDesigner.org/Download/Komode-IDE-v5.2.1.zip\r\n      \r\n      ', NULL, 2009, '2009-11', 441, 3, ''),
(178, 'Python面向对象编程-继承', NULL, '继承是面向对象的重要特性之一。继承是相对两个类而言的父子关系，子类继承了父类所以的公共特性。继承实现了代码的重用。Python不提供过度的包装，所以封装性在Python程序中体现得比较弱，实际上继承和多态已经足够好用。\r\n下面就是Python程序中最简单的继承例子:\r\n#!/usr/bin/env python\r\nclass Fruit:\r\n    def __init__(self,color):\r\n        self.color = color\r\n        print "fruit''s color:%s"% self.color\r\n        \r\n    def grow(self):\r\n        print "grow..."\r\n        \r\nclass Apple(Fruit):\r\n    def __init__(self,color):\r\n        Fruit.__init__(self,color)\r\n        print "apple''s color:%s"% self.color\r\n    \r\nclass Banana(Fruit):\r\n    def __init__(self,color):\r\n        Fruit.__init__(self,color)\r\n        print "banana''s color:%s"% self.color\r\n    \r\n    def grow(self):\r\n        print "banana grow..."\r\n        \r\nif __name__ == "__main__":\r\n    apple = Apple("red")\r\n    apple.grow()\r\n    banana = Banana("yellow")\r\n    banana.grow()\r\n      \r\n      ', NULL, 2009, '2009-11', 136, 2, ''),
(179, 'Flex留言本下载地址', NULL, ' 应网友要求，现提供Flex留言本的下载地址,因为本人也是初学Flex，很多地方都不完善，请大家见谅！\r\n\r\nFlex留言本下载地址: \r\nhttp://www.PHPDesigner.org/Download/guestbook.zip    \r\n      ', NULL, 2009, '2009-11', 253, 3, ''),
(180, 'Python内部类的使用', NULL, 'Python内部类的使用\r\n Java可以在类的内部定义类，Python同样存在这种语法。例如，汽车由门，车轮等部件\r\n组成，可以设计出汽车、门、车轮等3个类。而门，车轮是汽车的一部分，因此把门、车轮\r\n表示的类放到汽车的内部。这种在某个类内部定义的类称之为内部类。\r\n 注意:内部类不适合描述类之间的组合关系，而应把Door，Wheel类的对象作为类的属性使用\r\n。内部类容易造成程序结构的复杂，不建议使用。\r\n\r\n#!/usr/bin/env python\r\nclass Car:\r\n    class Door:\r\n        def open(self):\r\n            print "open door"\r\n    class Wheel:\r\n        def run(self):\r\n            print "car run"\r\n            \r\nif __name__ == "__main__":\r\n    car = Car()\r\n    backDoor = Car.Door();\r\n    frontDoor = Car.Door();\r\n    backDoor.open()\r\n    frontDoor.open()\r\n    \r\n    wheel = Car.Wheel()\r\n    wheel.run()      ', NULL, 2009, '2009-11', 156, 2, ''),
(181, 'PHP中合理使用静态方法可以提高程序的执行效率', NULL, 'PHP中合理使用静态方法可以提高程序的执行效率,一段小例子:\r\n\r\n/**\r\n *@name 测试你就知道了\r\n *@author PHP编程|PHP博客 WWW.PHPCQ.COM\r\nclass bench {\r\n    public function a() { return 1; }\r\n    public static function b() { return 1; }\r\n}\r\n$s = microtime(1);\r\nfor ($i = 0; $i < 100000; $i++) bench::a();\r\n$e = microtime(1);\r\necho "Dynamic Static Method: ".($e - $s)."\\n";\r\n\r\n$s = microtime(1);\r\nfor ($i = 0; $i < 100000; $i++) bench::b();\r\n$e = microtime(1);\r\n\r\necho "Declared Static Method: ".($e - $s)."\\n";\r\n      \r\n      \r\n      \r\n      ', NULL, 2009, '2009-11', 238, 2, ''),
(182, 'Python模拟抽象类', NULL, 'Python2.5本身没有提供抽象类的语法,但可以通过NotImplementedError类来\r\n模拟抽象类\r\n\r\n#!/usr/bin/env python\r\ndef abstract():\r\n    raise NotImplementedError("abstract")\r\n    \r\nclass Car:\r\n    def __init__(self):\r\n        if self.__class__ is Car:\r\n            abstract()\r\n        print "Car"\r\n            \r\nclass bmw(Car):\r\n    def __init__(self):\r\n        Car.__init__(self)\r\n        print "bmw"\r\n            \r\nif __name__ == "__main__":\r\n    bmw = bmw()\r\n    Car()       #这里实例会报错      \r\n      ', NULL, 2009, '2009-11', 143, 2, ''),
(183, '软件工程--瀑布模式(文章来源:Zend中国)', NULL, ' 提到“瀑布开发”的时候，大部分人们可能会联想到尼亚加拉瀑布下要进行房地产开发，然后，设想一下，当您告诉他们实际上瀑布开发是一种包含多个阶段的反复叠代的软件开发模型时，他们会多么惊讶。这篇文章将为您提供一份关于瀑布模型的简要介绍，解释它是什么，应当怎样工作以及可能导致项目失败的原因。\r\n\r\n概述\r\n       瀑布模型其实并不新，它在1970年前后就已经出现了，但是大部分开发者对瀑布模型只有一个模糊的概念。从本质来讲，它是一个软件开发架构，开发过程是通过一系列阶段顺序展开的，从系统需求分析开始直到产品发布和维护，每个阶段都会产生循环反馈，因此，如果有信息未被覆盖或者发现了问题，那么最好“返回” 上一个阶段并进行适当的修改，开发进程从一个阶段“流动”到下一个阶段，这也是瀑布开发名称的由来。\r\n这一模型存在很多变体，每种只是在阶段名称上略有区别，但是，总体来讲，瀑布开发模型可以分为六个不同的阶段，其定义如下：\r\n1.需求分析：虽然是第一步，但是这一步至关重要，因为它包含了获取客户需求与定义的信息，以及对需要解决的问题所能达到的最清晰的描述。分析包含了理解客户的商业环境与约束，产品必需实现的功能，产品必需达到的性能水平，以及必需实现兼容的外部系统。\r\n       在这一阶段所使用的技术包括采访客户、使用案例和软件特色的“购物清单”。分析阶段的结果通常是一份正式的需求说明书，这也是下一阶段的起始信息资料。\r\n\r\n2.设计：这一步包括了“定义硬件和软件架构、组件、模块、界面和数据等来满足指定的需求(Wikipedia)。”它包括了硬件和软件架构的定义，确定性能和安全参数，设计数据存储容器和限制，选择集成开发环境（IDE）和编程语言，并指定异常处理、资源管理和界面连接性的策略。\r\n       这一阶段还强调了用户接口的设计，包括与浏览和可用性相关的问题，这一阶段的输出结果是一份或多份设计说明书，这些说明书将在下一阶段使用。\r\n\r\n3.实现：这一步包含了根据设计说明书来构建产品，通常，这一阶段是由开发团队来执行的，开发团队包括了程序员、界面设计师和其他的专家，他们使用的工具包括编译软件、调试软件、解释软件和媒体编辑软件。\r\n       这一阶段将生成一个或多个产品组件，它们是根据每一条编码标准而编写的，并且经过了调试、测试并进行集成以满足系统架构的需求。对于大型开发团队而言，我建议使用版本控制工具来追踪代码树的变化，这样在出现问题的时候可以还原以前的版本。\r\n\r\n4.测试：在这一阶段，独立的组件和集成后的组件都将进行系统性验证以确保没有错误并且完全符合第一阶段所制定的需求。一个独立的质量保证小组将定义“测试实例”来评估产品是完全实现了需求还是只有部分满足。\r\n       有三种测试方法可以使用：对独立的代码模块进行单元测试；对集成产品进行系统测试；以及客户参与的验收测试。如果发现了缺陷，将会对问题进行记录并向开发团队反馈以进行修正。在这一阶段，还有产品文档会经过准备、评估并发布，比如用户手册等。\r\n\r\n5.安装：在产品通过测试并且被鉴定为符合需求的产品后，就会进入到安装阶段，这一阶段包括了在客户站点进行系统或产品的安装和使用，这可以通过互联网或者物理媒介进行，通常交付使用的产品都带有正式的版本号，这为今后的产品升级提供了便利。\r\n\r\n6.维护：这一阶段发生在安装之后，包括了对整个系统或某个组件进行修改以改变属性或者提升性能，这些修改可能源于客户的需求变化或者系统使用中没有覆盖到的缺陷，通常，在维护阶段对产品的修改都会被记录下来并产生新的发布版本（称作“维护版本”并伴随升级了的版本号）以确保客户可以从升级中获益。\r\n\r\n优势\r\n       上述的瀑布模型为软件开发人员提供了众多优势，首先，这个阶段性的软件开发模型规定了以下规则：每个阶段都有指定的起点和终点，过程最终可以被客户和开发者识别（通过使用里程碑），在编写第一行代码之前充分强调了需求和设计，这避免了时间的浪费以及跳票的风险，同时还可以尽可能地保证实现客户的预期需求。\r\n       提取需求和设计提高了产品质量，因为在设计阶段捕获并修正可能存在的漏洞要比测试阶段容易很多，毕竟在组件集成之后来追踪特定的错误要复杂很多。最后，因为前两个阶段生成了规范的说明书，当团队成员分散在不同地点的时候，瀑布模型可以帮助实现有效的知识传递。\r\n\r\n缺点\r\n       除了看上去很明显的这些优势，瀑布模型近来也受到了很多批评，最突出的一点是围绕需求分析的，通常客户一开始并不知道他们需要的是什么，而是在整个项目进程中通过双向交互不断明确的；而瀑布模型是强调捕获需求和设计的，但在这种情况下，现实世界的反复无偿就显得瀑布模型有些不切实际了。\r\n       除此以外，即使给定了客户需求，根据这些需求在一定的精确性范围内（瀑布模型所建议的）估算时间和成本是非常困难的。因此，建议在客户需求可以在最初阶段明确的情况下并且相对稳定的项目中使用瀑布模型。\r\n       另外的批评指出瀑布模型还假定设计可以被转换为真实的产品，这往往导致开发者在工作时陷入困境，通常，看上去合理可行的设计方案在现实中往往代价昂贵或者异常艰难，从而需要重新设计，这样就破坏了传统瀑布模型中清晰的阶段界限。\r\n       有些批评还指出瀑布模型暗示了清晰的分工，将参与开发的人员分为“设计师”、“程序员”和“测试员”，但是在现实中，这样的分工对于软件公司而言既不现实也没有效率。\r\n\r\n客户需求\r\n       尽管瀑布模型招致了很多批评，但是它对很多类型的项目而言依然是有效的，如果正确使用，可以节省大量的时间和金钱。对于您的项目而言，是否使用这一模型主要取决于您是否能理解客户的需求以及在项目的进程中这些需求的变化程度，对于经常变化的项目而言，瀑布模型毫无价值，对于这种情况，您可以考虑其他的架构来进行项目管理，比如名为螺旋模型（spiral model）的方法，当然，这是另外一码事了，也许我们以后会讲到这些方法。      \r\n      ', NULL, 2009, '2009-11', 175, 2, ''),
(184, 'Mysql锁表', NULL, 'LOCK TABLES为当前线程锁定表。UNLOCK TABLES释放被当前线程持有的任何锁。当线程发出另外一个LOCK TABLES时，或当服务器的连接被关闭时，当前线程锁定的所有表自动被解锁。\r\n\r\n如果一个线程获得在一个表上的一个READ锁，该线程(和所有其他线程)只能从表中读。如果一个线程获得一个表上的一个WRITE锁，那么只有持锁的线程READ或WRITE表，其他线程被阻止。\r\n\r\n每个线程等待(没有超时)直到它获得它请求的所有锁。\r\n\r\nWRITE锁通常比READ锁有更高的优先级，以确保更改尽快被处理。这意味着，如果一个线程获得READ锁，并且然后另外一个线程请求一个WRITE 锁, 随后的READ锁请求将等待直到WRITE线程得到了锁并且释放了它。当线程正在等待WRITE锁时，你可以使用LOW_PRIORITY WRITE允许其他线程获得READ锁。如果你肯定终于有个时刻没有线程将有一个READ锁，你应该只使用LOW_PRIORITY WRITE。\r\n\r\n当你使用LOCK TABLES时，你必须锁定你将使用的所有表！如果你正在一个查询中多次使用一张表(用别名)，你必须对每个别名得到一把锁！这条政策保证表锁定不会死锁。\r\n\r\n注意你应该不锁定任何你正在用INSERT DELAYED使用的表，这是因为在这种情况下，INSERT被一个不同的线程执行。\r\n\r\n通常，你不必锁定表，因为所有单个UPDATE语句是原语；没有其他线程能防碍任何其它正在执行SQL语句的线程。当你想锁定表，有一些情况：\r\n\r\n如果你将在一堆表上运行许多操作，锁定你将使用的表是较快的。当然缺点是，没有其他线程能更新一个READ锁定的表并且没有其他线程能读一个WRITE-锁定的表。\r\nMySQL不支持事务环境，所以如果你想要保证在一个SELECT和一个UPDATE之间没有其他线程到来，你必须使用LOCK TABLES。下面显示的例子要求LOCK TABLES以便安全地执行：\r\nmysql> LOCK TABLES trans READ, customer WRITE;\r\nmysql> select sum(value) from trans where customer_id= some_id;\r\nmysql> update customer set total_value=sum_from_previous_statement\r\n           where customer_id=some_id;\r\nmysql> UNLOCK TABLES;\r\n没有LOCK TABLES，另外一个线程可能有一个机会在执行SELECT和UPDATE语句之间往trans表中插入一个新行。\r\n\r\n通过使用渐增更改(UPDATE customer SET value=value+new_value)或LAST_INSERT_ID()函数，在很多情况下你能使用LOCK TABLES来避免。\r\n\r\n你也可以使用用户级锁定函数GET_LOCK()和RELEASE_LOCK()解决一些情况，这些锁保存在服务器的一张哈希表中并且用pthread_mutex_lock()和pthread_mutex_unlock()实现以获得高速度      ', NULL, 2009, '2009-12', 227, 2, ''),
(185, 'PHP分页类', NULL, '下面是我自己的分页类,可适当的修改\r\n<?php\r\n/**\r\n * @name Pager''s class\r\n * @author Refer\r\n * @copyright www.phpcq.com\r\n * @version Alpha 1.0\r\n * @todo 下拉菜单分页---From表单传值...可以根据自己的情况(采用GET传值)\r\n *\r\n */\r\nclass Pager{\r\n	/**\r\n	 * startRow\r\n	 *\r\n	 * @var Int\r\n	 */\r\n	public $startRow;\r\n	/**\r\n	 * 页面的总数\r\n	 *\r\n	 * @var Int\r\n	 */\r\n	public $pageTotal;\r\n	/**\r\n	 *翻页值\r\n	 *\r\n	 * @var Int\r\n	 */\r\n	public $offset;\r\n	/**\r\n	 * 每页所显示记录数\r\n	 *\r\n	 * @var Int\r\n	 */\r\n	public $pageSize;\r\n	/**\r\n	 * get参数\r\n	 *\r\n	 * @var Int\r\n	 */\r\n	public $get;\r\n	/**\r\n	 * post参数\r\n	 *\r\n	 * @var Int\r\n	 */\r\n	public $post;\r\n	/**\r\n	 * 构造函数--初始化翻页类\r\n	 *\r\n	 * @param Int $total\r\n	 * @param Int $pageSize\r\n	 */\r\n	public function __construct($total,$pageSize){\r\n		$this->get = (int)$_GET[''startRow''];\r\n		$this->post = (int)$_POST[''pageNums''];\r\n		$this->pageSize = $pageSize;\r\n		$this->pageTotal = ceil($total / $pageSize);\r\n		switch ($_GET[''method'']){\r\n			default:\r\n				$this->startRow = 1;\r\n				$this->offset = 0;\r\n			break;\r\n			case ''first'':\r\n				$this->first();\r\n			break;	\r\n			case ''previous'':\r\n				$this->previous();\r\n			break;	\r\n			case ''next'':\r\n				$this->next();\r\n			break;	\r\n			case ''last'':\r\n				$this->last();\r\n			break;	\r\n		}\r\n	} \r\n	/**\r\n	 * 首页方法\r\n	 *\r\n	 */\r\n	public function first(){\r\n		$this->startRow = 1;\r\n		$this->offset = ($this->startRow - 1) * $this->pageSize;\r\n	}\r\n	/**\r\n	 * 上一页方法\r\n	 *\r\n	 */\r\n	public function previous(){\r\n		$this->startRow = $this->get - 1;\r\n		if ($this->startRow < 1) {\r\n			$this->startRow = 1;\r\n		}\r\n		$this->offset = ($this->startRow - 1) * $this->pageSize;\r\n	}\r\n	/**\r\n	 * 下一页方法\r\n	 *\r\n	 */\r\n	public function next(){\r\n		$this->startRow = $this->get + 1;\r\n		if ($this->startRow > $this->pageTotal) {\r\n			$this->startRow = $this->pageTotal;\r\n		}\r\n		$this->offset = ($this->startRow - 1) * $this->pageSize;\r\n	}\r\n	/**\r\n	 * 最后页方法\r\n	 *\r\n	 */\r\n	public function last(){\r\n		$this->startRow = $this->pageTotal;\r\n		$this->offset = ($this->startRow - 1) * $this->pageSize;\r\n	}\r\n	/**\r\n	 * 下拉菜单翻页\r\n	 *\r\n	 * @return Int\r\n	 */\r\n	public function numPages(){\r\n		if ($this->post) {\r\n			$pageNums = "<option>$this->post</option>";\r\n			$this->startRow = $this->post;\r\n			$this->offset = ($this->post - 1) * $this->pageSize;\r\n		}\r\n		for ($i = 1; $i <= $this->pageTotal;$i++){\r\n			if ($i != $this->post) {\r\n				$pageNums .= "<option>$i</option>";\r\n			}\r\n		}\r\n		return $pageNums;\r\n	}\r\n	/**\r\n	 * 当前是第几页\r\n	 *\r\n	 * @return Int\r\n	 */\r\n	public function noncePage(){\r\n		if ($this->post) {\r\n			return $this->startRow = $this->post;\r\n		} else {\r\n			return $this->startRow = $this->startRow;\r\n		}\r\n	}\r\n}\r\n\r\n调用方法:\r\n$total = $total->total();//总记录\r\n			$pageSize = 15;//每页显示的记录\r\n			$pager = new Pager($total,$pageSize);\r\n			if ($pager->post){$startRow = $pager->noncePage();}\r\n			$startRow = $pager->startRow;\r\n			$pager->numPages();\r\n			$article->query("SELECT * FROM `categories` as c,`articles` as n WHERE c.id = n.pid\r\n					ORDER BY n.id DESC LIMIT $pager->offset,$pageSize");\r\n			while ($article->fetchArray()) {\r\n				$article->data[''content''] = mb_substr(strip_tags($article->data[''content'']),0,40,''utf-8'');\r\n				$articleIndex[] = $article->data;			\r\n			}\r\n			$article->free();\r\n		} else {\r\n			header("location:?act=login");\r\n		}\r\n		$view->view->assign(''startRow'',$startRow);//caption\r\n		$view->view->assign(''total'',$total);//caption\r\n		$view->view->assign(''pageNums'',$pager->numPages());//pageNums\r\n		$view->view->assign(''noncePage'',$pager->noncePage());//pageNums\r\n		$view->view->assign(''pageTotal'',$pager->pageTotal);//pageTotal \r\n\r\n模板页面:\r\n  <!--{if $pageTotal > 1}-->\r\n <form action="" method="post">\r\n <div id="projectpages" class="fontpage">\r\n Pager:\r\n <select name="pageNums" onchange="javascript:submit();" style="height:20px;">\r\n    	 <!--{$numPages}-->\r\n   </select>\r\n <a href="?act=blog&method=first&startRow=<!--{$startRow}-->">First</a> \r\n <a href="?act=blog&method=previous&startRow=<!--{$startRow}-->">Previous</a> \r\n <a href="?act=blog&method=next&startRow=<!--{$startRow}-->">Next</a>\r\n <a href="?act=blog&method=last&startRow=<!--{$startRow}-->">Last</a>\r\n </div>\r\n </form>\r\n <!--{/if}-->    ', NULL, 2009, '2009-12', 277, 2, ''),
(186, '高效的模型设计', NULL, ' 很多人都认为性能是在编写代码的过程中优化出来的，其实这是一个非常大的误区。真正\r\n影响性能的部分多是在设计中就已经产生了，很多时候后期的优化所能带来的改善都只是\r\n解决前期所遗留下来的问题而已，而且能解决的问题通常也比较有限。\r\n  最规范的不一定是最合理的。\r\n 在数据库Schema设计理论方面，一直有一个被大家奉为“葵花宝典”的规范化范式理论。\r\n通过范式理论所设计的数据库Schema逻辑清晰、关系明确、扩展方便，就连存储的数据量\r\n也做到了尽可能的少，尤其是当范式级别较高时，几乎找不到任何的冗余数据库。在很多\r\n人眼里，数据库的Schema满足的范式级别越高则该Schema设计得越优秀。\r\n 但是，很多人忽略了一点，那就是产生该理论的时期和出发点。关系型数据库的规范化范式\r\n理论诞生于20世纪70年代初，最根本的目的是让数据库中尽量去除冗余数据，保持数据的一致，\r\n使数据易于修改。\r\n 实际上，尽量去除冗余的数据不仅是为了让我们在查询相同的数据量时能够多返回几条记录，还有\r\n一个很重要的原因就是在当时的那个年代，数据的存储空间极其昂贵，而且存储设备的容量又非常小\r\n，不过在硬件存储设备发展如此迅速的今天，空间大小已经不再是个大问题了。\r\n 而保证范式理论中的数据一致性和使数据易于修改主要依靠在数据库中添加各种约束，而各种约束\r\n对于数据库来说本身就是一件非常消耗资源的事情。\r\n 所以，对于基于性能的数据库Schema设计，并不能完全以规范化范式理论为唯一的指导，在设计过程\r\n中，应该从实际需求出发，以性能提升为根本目标来展开设计工作，很多时候为了尽可能提高性能，\r\n必须做反范式设计。      ', NULL, 2009, '2009-12', 181, 2, ''),
(187, 'PHPDesigner7.0', NULL, 'PHPDesigner7.0下载地址：\r\nhttp://www.PHPcq.com/Download/PHPDesigner.zip\r\n      \r\n      ', NULL, 2009, '2009-12', 422, 3, ''),
(188, '关于工信部备案（转载）', NULL, ' 其实网站备案是好事，并不是什么坏事。可以有效过滤色情及各类违法网站，但为什么现在效果却恰恰相反?一个正规的企业站，要想上线，起码等20天，期间，如果资料有误，退回修改，那就继续再等20天。所以现在有些企业干脆使用国外的空间了。其实，换一个角度想一下，真正打算做色情、违法网站的人，会傻到把服务器放在国内?如果是我，我不会。\r\n  针对工信部的网站备案，本人在工作中，接触并总结以下一些建议\r\n  1、备案审核时效太长，审核速度跟不上提交速度。一般备案提交后需要20天来审核，工信部及各省通信管理局如果加大审核力度，比如我今天提交的备案信息，今天或明天就马上通过了。我想，做正规网站的用户都会主动去备案，不会拖拖拉拉的。就好比领身份证一样，没有人不要身份证吧。\r\n  2、备案审核通过后，再次添加域名及修改资料，麻烦!当用户需要再次添加修改ICP账号中的资料，往往会遇到许多的问题。比如，找不到接入商、接入商不给你添加修改等问题。如果说，将这权限下放至用户，用户可以自由的添加、修改ICP备案资料，然后再提交，由接入商审核。那样会大大方便用户和接入商。因为以上原因造成了很多的问题，比如我自己的身份证已经用过了，现在又无法添加域名。那我只能找别人的身份证或干脆瞎编下，再去注册一个账号备案，再去提交备案。这样就又造成了资料不实的情况出现。\r\n  3、缺乏专业知识。各省市的通信管理局，不少所谓的专业人员，连通过域名查IP都不会。\r\n  4、网站未备案通过前不能上线。不知道工信部的工作人员是怎么审核备案信息的，网站都打不开，不晓得在审核一些什么东西。提交的资料真假是可以审核，但提交的对应网站却不知所以然。我提交的是XX文学网，现在因为没备案，所以关着，无法访问。那工信部怎么知道我这个就是文学网呢?怎么知道我放的不是色情站呢?所以现在有些诈骗网站都有备案号。这也许就是其中的原因，网站关着也能备案。\r\n  5、备案信息量大，服务器跟不上需求。作为国家的一个大部，三天两头出现备案网站无法打开的情况。我不知道那些技术是干什么吃的呢?人家百度信息量比你大多了，也不见得有打不开的时候。\r\n  如果工信部的工作人员能看到，希望你们能考虑下我们的建议。\r\n     ', NULL, 2009, '2009-12', 160, 1, ''),
(189, '重庆市通信管理局--工作不认真', NULL, '以下就是我的遭遇:\r\n\r\n   重庆通信管理局审核备案的人 完全是脑子进水了的  我备的cdma2000.info域名 结果 他给我打回来的原因是 尊敬的用户[康云川]，很遗憾的通知您，您的ICP备案申请(phpcq.com)，经[重庆市通信管理局3]审核，不符合备案要求，现退回修改，原因请登陆系统查询    。。。\r\n  真是郁闷----我真想提把杀猪刀，把他们割了', NULL, 2009, '2009-12', 209, 1, '');
INSERT INTO `article` (`id`, `caption`, `shortContent`, `content`, `tags`, `times`, `date`, `degree`, `cate_id`, `password`) VALUES
(190, '关于PHPDesigner', NULL, '  PHP Designer----php程序和WEB开发的最好编辑器和PHP IDE。快速，省时，强大。稳定！phpDesigner不仅是一个功能强大，速度超快的PHP IDE和PHP编辑器，也是一个功能丰富的CSS和JavaScript编辑器，它既适合新手也适合经验丰富的开发人员。 phpDesigner 能帮你编辑分析，测试，发布程序和由php，HTML或其它WEB语言驱动的站点。不管您是PHP网页设计高手，或者是刚入门的新手，您都可以使用此软件来帮您设计网页程序(SQL、HTML 亦支持)。   \r\n  PHP Designer特色\r\n提升了你编写程序的效率 \r\nPHP Designer提升了你编写程序的效率和简化了复杂的编码项目，同时还含有许多加快开发速度的功能 \r\n\r\n支持PHP,HTML, CSS, JavaScript等 \r\nphpDesigner不仅是一个功能强大的PHP IDE和编辑器还是一个HTML, XHTML, MySQL,XML, CSS, JavaScript, Smarty, VBScript, Java, C#, Perl, Python，Ruby编辑器! \r\n\r\n智能化语法加亮功能 \r\nPHP, HTML, CSS, JavaScript内自动切换语法加亮区域，这取决于鼠标在文档内的位置同时还淡化剩下的代码，这样你就更容易保持注意力集中----这十分适合Ajax开发者。 \r\n\r\nphp内的面向对象编程 \r\nPHP内可进行面向对象编程并支持整体代码嵌套和高级代码注解! \r\n\r\n使用Xdebug来测试和分析程序 \r\n使用断点，排查，计算来逐步分析你的代码. 找出瓶颈的地方或哪块代码减慢了并能使用分析器来做个加速 \r\n\r\n学习PHP \r\n内置PHP手册使你能够学习和研究PHP。这缩短了你学习php的路径。 \r\n\r\n易于学习，使用PHP Designer是一种享受 \r\nphpDesigner背后的理念是通过提供直观、可定制、易于操作、TAB形式的界面和工作区来让开发者或新手在使用PHP Designer数小时后觉得是一种享受。 \r\n\r\nPHP Designer重点功能\r\n闪电般速度且易于学习和使用! \r\n成熟的PHP, HTML, CSS和JavaScript编辑器 \r\n主题支持的直观，可定制工作区 \r\nPHP, HTML, CSS, JS 语法加亮 \r\n代码查看器,整体代码和代码注解 \r\n项目管理器和工作区 \r\n以直观的方式来找寻项目内的申明 \r\nXdebug来测试和分析PHP代码 \r\nPHP, HTML和CSS实时错误检测 \r\n远程FTP编辑 \r\n高级搜索和替代 \r\n代码块库和模板 \r\n支持TortoiseSVN \r\nPHP, HTML和CSS代码美化工具 \r\n显示匹配符和丢失的括弧及标签 \r\n利用内置的php手册来学习php \r\n  ', NULL, 2009, '2009-12', 339, 2, ''),
(191, '设置PHPdesigner代码补全时间', NULL, '  新手在使用PHPdesigner时总是抱怨它的代码补全时间过于延长（反应迟钝）...\r\n  实际上PHPdesigner中这些都可以自行设定的，下面我将自己的设置贴出来让大家参考下\r\n\r\n  PHPdesigner菜单中工具->配置->编辑->代码完成\r\n\r\n 在右边的版面找到高级 \r\n  将自动计时器(毫秒)改为250   \r\n  毫不拖延地在剖析(MS)的 250    \r\n  在一个解析前延迟(毫秒)0    \r\n  解析器线程优先级 最高     \r\n\r\n OK，重启PHPdesigner 代码补全迟钝解决了！\r\n\r\n 其中代码补全的延迟主要取决于其中(将自动计时器(毫秒))此 选项\r\n      ', NULL, 2009, '2009-12', 239, 2, ''),
(192, 'www.phpdesigner.org', NULL, '  前段时间无意中注册了一个www.phpdesigner.org域名，在这时一朋友就告诉我phpdesigner就是一个开发工具，我是很惊讶---心想这次可以帮MPsoftware做免费推广了，其实心里也有点怪怪的：是不是抢注了人家的域名。后来想了想，我现在是为MPsoftware宣传phpdesigner软件，并没恶意!\r\n  \r\n  下面来段广告：\r\n\r\n   强烈推荐PHPdesigner开发工具，以前一直用zendstudio,发现zendstudio很占内存，而且PHPdesigner占用空间不大，\r\n功能比zendstudio强大N倍，还可以实现sql语句的自动生成，自从用了PHPdesigner，电脑不卡了，连JavaScript，jQuery\r\n等都可以实现代码补全了，写代码越来越舒畅了!\r\n\r\n      \r\n      ', NULL, 2009, '2009-12', 268, 1, ''),
(193, '合理地利用应用层cache机制', NULL, '  对于web应用，活跃数据的数量总不会特别大，有些活跃的数据更是很少变化。对于这类数据，是否有必要每次都到数据库中去查询吗？如果能够将变化相对较少的部分活跃数据通过应用层\r\n的cache机制缓存至内存中，(www.phpcq.com)对性能的提升肯定是成数量级的，而且由于是活跃数据，对系统整体性能的影响也会很大。\r\n  当然，通过cache机制成功的案例数不胜数，但是失败的案例同样并不少见。如何合理的通过cache技术让系统性能得到较大的提升也不是通过寥寥几笔就能说清楚的，下面就举几个简单案例--什么样的数据适合通过cache技术来提高系统性能。\r\n\r\n 1、系统各种配置及规则数据\r\n 由于这些配置信息变动的频率非常低，访问概率有很高，所以非常适合使用cache。\r\n\r\n 2、活跃用户的基本信息数据\r\n 虽然我们经常会听到某某网站的用户量达到成百上千万，但是系统的活跃用户量很少能够达到这个数量级。也很少有用户每天没事干去将自己的基本信息改来改去。(www.phpcq.com)更为重要的一点是用户的基本信息在应用系统中的访问率极其频繁。所以用户基本信息的cache，很容易让整个应用系统的性能得到更高的提升。\r\n\r\n 3、活跃用户的个性化定制信息数据\r\n 虽然用户个性化定制的数据从访问率来看，可能并没有用户的基本信息那么频繁，但相当于系统的整体来说，也占了很大的比例，而且变更频率一样不会太多。(www.phpcq.com)从易趣的贝宝通过MYSQL的Memory存储引擎实现个性化定制数据的成功案例就能看出，对这部分信息进行cache的价值。虽然通过MYSQL的Memory存储引擎并不像传统意义层面的cache机制，但正是对cache技术的合理利用和扩充造就了项目整体的成功。\r\n \r\n 4、准实时的统计信息数据\r\n 所谓准实时的统计数据，实际上就是基于时间段的统计数据。这种数据不会实时更新，也很少须要增量更新，只有当重新构建该数据的时候才须要做一次全量更新操作。虽然这种数据即使通过数据库来读取效率也会比较高，但是执行效率很高之后，同样会消耗不少资源。既然数据库服务器的资源非常珍贵，我们为什么不能放在与应用相关的内存cache中呢。\r\n \r\n 5、其它一些访问频繁但变更很少的数据\r\n 在各种系统环境中肯定还会有各种各样的变更较少但是访问很频繁的数据。只要合适，实际项目上的需求，都可以将对他们的访问从数据库移动到cache中。\r\n\r\n \r\n\r\n      \r\n      ', NULL, 2009, '2009-12', 295, 2, ''),
(194, '80后是最悲惨的一代', NULL, '当我们读小学的时候，读大学不要钱;\r\n当我们读大学的时候，读小学不要钱；\r\n当我们考大学的时候，千军万马过独木桥；\r\n当我们大学毕业了，大学不用考了，文凭基本靠买了；\r\n当我们还不能上大学的时候，有大学文凭的是人天之骄子好工作都让他们找了；\r\n当我们上大学的时候，文凭贬值了，大学生不值钱了，工作不好找了；\r\n当我们还没能工作的时候，工作也是分配的；\r\n当我们可以工作的时候，撞得头破血流才勉强找份饿不死人的工作做；\r\n当我们不能挣钱的时候，房子是分配的;\r\n当我们能挣钱的时候，却发现房子已经买不起了；\r\n当我们不到结婚的年龄的时候，骑单车就能娶媳妇;\r\n当我们到了结婚年龄的时候，没有洋房汽车娶不了媳妇；\r\n当我们没有进入股市的时候,傻瓜都在赚钱;\r\n当我们兴冲冲地闯进去的时候,才发现自己成了傻瓜；      ', NULL, 2010, '2010-01', 159, 1, ''),
(195, '博客暂时不再更新技术日志！', NULL, '  博客正在改版中，所以不再更新技术日志！敬请关注!\r\n      \r\n      ', NULL, 2010, '2010-01', 79, 1, ''),
(196, '献给正在郁闷的人们', NULL, '一头老驴，掉到了一个废弃的陷阱里，很深，根本爬不上来，主人看他是老驴，懒得去救他了，让他在那里自生自灭。那头驴一开始也放弃了求生地希望。每天还不断地有人往陷阱里面倒垃圾，按理说老驴应该很生气，应该天天去抱怨，自己倒霉掉到了陷阱里，他的主人不要他，就算死也不让他死得舒服点，每天还有那么多垃圾扔在他旁边。可是有一天，他决定改变他的人生态度（驴生态度更确切点），他每天都把垃圾踩到自己的脚下，从垃圾中找到残羹来维持自己的生命，而不是被垃圾所淹没，终于有一天，他重新回到了地面上。 \r\n\r\n不要抱怨你的专业不好，不要抱怨你的学校不好，不要抱怨你住在破宿舍里，不要抱怨你的男人穷你的女人丑，不要抱怨你没有一个好爸爸，不要抱怨你的工作差，工资少，不要抱怨你空怀一身绝技没人赏识你，现实有太多的不如意，就算生活给你的是垃圾，你同样能把垃圾踩在脚底下，登上世界之巅。这个世界只在乎你是否在到达了一定的高度，而不在乎你是踩在巨人的肩膀上上去的，还是踩在垃圾上上去的。而事实上，踩在垃圾上上去的人更值得尊重。\r\n\r\n \r\n\r\n 年轻没有失败，看驴生豪迈，不过从头再来...... \r\n      ', NULL, 2010, '2010-03', 88, 1, ''),
(197, '上海初中物理题 如此销魂', NULL, '有一只熊掉到一个陷阱里,陷阱深19.617米，下落时间正好2秒。求熊是什么颜色的?\r\nA：白色，北极熊\r\nB：棕色，棕熊\r\nC：黑色，黑熊\r\nD：黑棕色，马来熊\r\nE：灰色，灰熊\r\n\r\n解答：\r\n易算出g=9.8085 并不像有人说的是极地地区.北极是9.832,远远大于该数值. 赤道不过也有9.780,怎么能说一定是极地呢?\r\n然后查了下表,大概是44度左右..根据熊的地理分布,南半球没有熊,可以得知应该是北纬44度.\r\n根据题目，既然是掉到陷阱，又是熊可以掉进的陷阱。因为陆地上少有比熊还巨大的珍贵动物，所以可以推出，此陷阱是为熊所设计。\r\n其次，既然为熊设计地面陷阱， 一定是陆栖熊。而且大部分陆栖熊视力不好，难以分辨陷阱，所以容易掉入陷阱。\r\n至此，可选答案有：棕熊和美洲黑熊/亚洲黑熊鉴于题目只有棕熊和黑熊，那只剩这两个答案。\r\n既然陷阱深19。617米，土质一定为冲击母质，这样才易于挖掘。\r\n棕熊虽然有地理分布，但多为高海拔地区，而且凶悍，捕杀的危险系数大，价值没有黑熊高。而一般的熊掌、熊胆均取自黑熊。\r\n又因为黑熊的地理分布与棕熊基本不重合。可以判定，该题正确答案为黑熊。      ', NULL, 2010, '2010-03', 86, 1, ''),
(199, 'imagick之图片合并', NULL, '由于这些日子太忙了，新版博客还没完成。。。 \r\n现继续使用旧版博客与大家共同分享web技术\r\n<?php \r\n/**\r\n * 使用Imagick--图片合并\r\n * @author :Refer Con www.phpcq.com\r\n *\r\n */\r\n$canvas = new imagick( \\"1.jpg\\" ); \r\n$canvas->adaptiveResizeImage( 300, 300 ); \r\n$canvas->setImageFormat( \\"png\\" ); \r\n$paths = array( \\"2.jpg\\", \\"3.jpg\\", \\"4.jpg\\", \\"5.jpg\\" ); \r\n// 创建一个空的 ImagickDraw 对象（使用默认设置，偏振) \r\n$bg = new ImagickDraw(); \r\n//创建一些随机图片 \r\n$images = new Imagick($paths); \r\n//循环图像，覆盖在该画布上 \r\nforeach ( $images as $key => $image ) \r\n{ \r\n    //缩略图宽100，设置背景颜色为白色 \r\n    $image->thumbnailImage( 100, null ); \r\n    $image->setImageBackgroundColor( new ImagickPixel( \\"black\\" ) ); \r\n    //使用一个随机角度 \r\n    $angle = mt_rand( 1, 45 ); \r\n  \r\n    if ( mt_rand( 1, 2 ) % 2 === 0 ) \r\n    {    \r\n        $angle = $angle * -1; \r\n    } \r\n    //创建偏振 \r\n    $image->polaroidImage( $bg, $angle ); \r\n    //在画布上组合，，，并到随机位置 \r\n    $canvas->compositeImage( $image, Imagick::COMPOSITE_OVER,  \r\n                               mt_rand( 10, 150 ), mt_rand( 10, 150 ) ); \r\n    //释放                            \r\n    $image->removeImage(); \r\n} \r\nheader(\\"Content-Type: image/png\\"); \r\necho $canvas;   \r\n', NULL, 2010, '2010-03', 125, 2, ''),
(201, 'Imagick实现图片偏振', NULL, '<?php\r\n/**\r\n * Imagick实现图片偏振\r\n * @author :Refer Con www.phpcq.com\r\n *\r\n */\r\n//创建对象\r\n$im = new Imagick(\\"1.png\\");\r\n \r\n//创建ImagickDraw对象\r\n\r\n$draw = new ImagickDraw();\r\n \r\n//设置填充颜色会浅蓝色\r\n$draw->setFillColor( new ImagickPixel(\\"light blue\\"));\r\n \r\n//创建图片\r\n$im->polaroidImage(\\"$draw, 20\\" );\r\n \r\n//输出图片\r\nheader(\\"Content-Type: image/png\\" );\r\necho $im;\r\n       \r\n      \r\n      ', NULL, 2010, '2010-03', 78, 2, ''),
(202, '利用Imagick画一朵鲜花', NULL, '<?php\r\n /**\r\n  * 利用Imagick画一朵鲜花\r\n  * @author :Refer Con www.phpcq.com\r\n  * 由于时间问题，没写注释，请见谅！\r\n  */\r\nclass Flower extends ImagickDraw\r\n{\r\n    private $ImagickPixel;\r\n \r\n    public function __construct()\r\n    {\r\n        $this->ImagickPixel = new ImagickPixel();\r\n    }\r\n \r\n    public function drawFlower()\r\n    {\r\n        $this->createStraw();\r\n        $this->createPetals();\r\n        $this->createLeafs();\r\n    }\r\n \r\n    private function createPetals()\r\n    {\r\n        $this->ImagickPixel->setColor( \\\\\\''red\\\\\\'' );\r\n        $this->setFillColor( $this->ImagickPixel );\r\n \r\n        $this->ImagickPixel->setColor( \\\\\\''black\\\\\\'' );\r\n        $this->setStrokeColor( $this->ImagickPixel );\r\n        $this->setStrokeWidth( 0.5 );\r\n \r\n        $this->circle( 40, 90, 70, 110 );\r\n        $this->circle( 85, 50, 115, 70 );\r\n        $this->circle( 125, 90, 155, 110 );\r\n        $this->circle( 85, 130, 115, 150 );\r\n \r\n        $this->ImagickPixel->setColor( \\\\\\''white\\\\\\'' );\r\n        $this->setFillColor( $this->ImagickPixel );\r\n \r\n        $this->circle( 85, 90, 115, 110 );\r\n    }\r\n \r\n    private function createStraw()\r\n    {\r\n        $this->ImagickPixel->setColor( \\\\\\''transparent\\\\\\'' );\r\n        $this->setFillColor( $this->ImagickPixel );\r\n \r\n        $this->ImagickPixel->setColor( \\\\\\''green\\\\\\'' );\r\n        $this->setStrokeColor( $this->ImagickPixel );\r\n        $this->setStrokeWidth( 4 );\r\n \r\n        $this->bezier( array(\r\n                             array( \\\\\\''x\\\\\\'' => 85, \\\\\\''y\\\\\\'' => 150 ),\r\n                             array( \\\\\\''x\\\\\\'' => 105, \\\\\\''y\\\\\\'' => 190 ),\r\n                             array( \\\\\\''x\\\\\\'' => 55, \\\\\\''y\\\\\\'' => 400 ),\r\n                             array( \\\\\\''x\\\\\\'' => 75, \\\\\\''y\\\\\\'' => 500 ),\r\n                             )\r\n                      );\r\n    }\r\n \r\n    private function createLeafs()\r\n    {\r\n        $this->ImagickPixel->setColor( \\\\\\''green\\\\\\'' );\r\n        $this->setFillColor( $this->ImagickPixel );\r\n        $this->setStrokeColor( $this->ImagickPixel );\r\n \r\n        $this->bezier( array(\r\n                             array( \\\\\\''x\\\\\\'' => 75, \\\\\\''y\\\\\\'' => 370 ),\r\n                             array( \\\\\\''x\\\\\\'' => 65, \\\\\\''y\\\\\\'' => 250 ),\r\n                             array( \\\\\\''x\\\\\\'' => 25, \\\\\\''y\\\\\\'' => 270 ),\r\n                             array( \\\\\\''x\\\\\\'' => 15, \\\\\\''y\\\\\\'' => 290 ),\r\n                             array( \\\\\\''x\\\\\\'' => 25, \\\\\\''y\\\\\\'' => 310 ),\r\n                             array( \\\\\\''x\\\\\\'' => 35, \\\\\\''y\\\\\\'' => 330 ),\r\n                             array( \\\\\\''x\\\\\\'' => 55, \\\\\\''y\\\\\\'' => 350 ),\r\n                             )\r\n                      );\r\n \r\n        $this->bezier( array(\r\n                             array( \\\\\\''x\\\\\\'' => 75, \\\\\\''y\\\\\\'' => 365 ),\r\n                             array( \\\\\\''x\\\\\\'' => 95, \\\\\\''y\\\\\\'' => 250 ),\r\n                             array( \\\\\\''x\\\\\\'' => 135, \\\\\\''y\\\\\\'' => 270 ),\r\n                             array( \\\\\\''x\\\\\\'' => 145, \\\\\\''y\\\\\\'' => 280 ),\r\n                             array( \\\\\\''x\\\\\\'' => 145, \\\\\\''y\\\\\\'' => 290 ),\r\n                             array( \\\\\\''x\\\\\\'' => 135, \\\\\\''y\\\\\\'' => 310 ),\r\n                             array( \\\\\\''x\\\\\\'' => 125, \\\\\\''y\\\\\\'' => 320 ),\r\n                            )\r\n                     );\r\n    }\r\n}\r\n \r\n$Flower = new Flower();\r\n$Flower->drawFlower();\r\n \r\n$Imagick = new Imagick();\r\n$Imagick->newPseudoImage( 175, 500, \\\\\\"gradient:pink-white\\\\\\" );\r\n$Imagick->setImageFormat( \\\\\\''png\\\\\\'' );\r\n \r\n$Imagick->drawImage( $Flower );\r\n \r\nheader( \\\\\\"Content-Type: image/{$Imagick->getImageFormat()}\\\\\\" );\r\necho $Imagick;\r\n       \r\n      ', NULL, 2010, '2010-03', 136, 2, ''),
(203, 'Imagick分析图像属性', NULL, '<?php\r\n /** \r\n  * Imagick分析图像属性\r\n  * @author :Refer Con www.phpcq.com \r\n  * 由于时间问题，没写注释，请见谅！ \r\n  */ \r\n$im = new Imagick( \\"fujifilm-dx10.jpg\\" );\r\n$identify = $im->identifyImage();\r\n \r\necho \\''Image geometry: \\'' , $identify[\\''geometry\\''][\\''width\\''] , \\''x\\'' , $identify[\\''geometry\\''][\\''height\\''] , \\''<br />\\''; \r\necho \\''Image format: \\'' , $identify[\\"format\\"] , \\''<br />\\'';\r\necho \\''Image type: \\'' , $identify[\\"type\\"] , \\''<br />\\'';\r\necho \\''Image compression: \\'' , $identify[\\"compression\\"] , \\''<br />\\'';\r\necho \\''Image size: \\'' , $identify[\\"fileSize\\"] , \\''<br />\\'';\r\n \r\necho \\''<br /><br />\\'';\r\n \r\necho \\''<b>All image properties:</b> <br />\\'';\r\n \r\n\r\nforeach ( $im->getImageProperties() as $k => $v )\r\n{\r\n    echo $k , \\'' => \\'' , $v , \\''<br />\\'';\r\n}\r\n \r\necho \\''<br /><br />\\'';\r\n \r\n\r\nforeach ( $im->getImageProfiles() as $k => $v )\r\n{\r\n    echo \\"Profile name: \\", $k , \\" (size: \\", strlen( $v ) ,\\") <br />\\";\r\n}\r\n \r\n?>       ', NULL, 2010, '2010-03', 108, 2, ''),
(204, 'rsync同步', NULL, 'tar -zxvf rsync.tar.gz 解压rsync软件包\r\n./configure  编译\r\nmake && make install \r\n\r\n1、vi /etc/rsyncd.conf 增加配置文件--内容如下:\r\n uid=root\r\n gid=root\r\n use chroot=no\r\n max connections=4\r\n pid file=/var/run/rsyncd.pid\r\n lock file=/var/run/rsync.lock\r\n log file=/var/log/rsyncd.log\r\n [down]\r\n path=/home/wwwroot/\r\n auth user=root\r\n uid=root\r\n gid=root\r\n read only=no\r\n secrets file=/etc/rsyncd.secrets 如(root:123456)\r\n\r\n2、vi /etc/rsyncd.secrets  增加密码文件\r\n3、chmod 600 /etc/rsyncd.secrets  //修改文件权限\r\n4、/usr/local/bin/rsync --daemon --config=/etc/rsyncd.conf 启动rsync主服务器端\r\n5、rsync -vzrtopg --delete --progress root@192.168.5.131::down /wwwroot/ 主服务器备份至备份服务器\r\n5、rsync -vzurtopg --delete --progress root@192.168.5.131::down /wwwroot/ 主服务器备份至备份服务器（增量）\r\n6、rsync -av --progress /wwwroot/ root@192.168.5.131::down  备份服务器备份至主服务器      ', NULL, 2010, '2010-04', 81, 2, ''),
(205, '欢迎交换友情链接！', NULL, ' 欢迎 PR >= 3 的各类网站（交换友情链接！）\r\n 联系QQ：334192009\r\n Email：admin@PHPdesigner.org\r\n   ', NULL, 2010, '2010-04', 67, 1, ''),
(206, '一朋友与网友的对白', NULL, ' 我也是大学生，刚毕业，我看到的和你想的不一样，尽管现在大学生压力大，可你随便到哪个大学去转转，没有一个学生走在路上时愁眉苦脸的，他们从来都不愁吃不愁穿，尽管家里不富裕花钱也从不吝涩，他们想上课时就上课，不想上就不去，他们在寝室玩游戏，从来不去想自己的未来怎么样，从来不去考虑社会需要什么人才，老师们也从不体现出一个做老师的责任，教完课就赶车回家，学生学到什么，学会没有，跟他们一分钱关系都没有。中国的教育该如何是好！   \r\n      ', NULL, 2010, '2010-04', 120, 1, ''),
(207, '跨服务器Session共享', NULL, '伴随网站业务规模和访问量的逐步发展，原本由单台服务器、单个域名的迷你网站架构已经无法满足发展需要。\r\n\r\n此时我们可能会购买更多服务器，并且启用多个二级子域名以频道化的方式，根据业务功能将网站分布部署在独立的服务器上；或通过负载均衡技术（如：DNS轮询、Radware、F5、LVS等）让多个频道共享一组服务器。\r\n\r\n\r\n\r\nOK，头脑中我们已经构思了这样的解决方案，不过进入深入开发后新的技术问题又随之而来：\r\n\r\n我们把网站程序分布部署到多台服务器上，而且独立为几个二级域名，由于Session受实现原理的局限（PHP中Session默认以文件的形式保 存在本地服务器的硬盘），使得我们的网站用户不得不经常在几个频道间来回输入用户名、密码登入，导致用户体验大打折扣；另外，原本程序可以直接从用户 Session变量中读取的资料（如：昵称、积分、登入时间等），因为无法跨服务器同步更新Session变量，迫使开发人员必须实时读写数据库，从而增 加了数据库的负担。\r\n\r\n于是，解决网站跨服务器之间的Session共享方案需求变得迫切起来，最终催生了多种解决方案，下面列举4种较为可行的方案进行对比探讨：\r\n\r\n1. 基于NFS的Session共享\r\n\r\nNFS是Net FileSystem的简称，最早由Sun公司为解决Unix网络主机间的目录共享而研发。\r\n\r\n这个方案实现最为简单，无需做过多的二次开发，仅需将共享目录服务器mount到各频道服务器的本地session目录即可，缺点是NFS依托于复 杂的安全机制和文件系统，因此并发效率不高，尤其对于session这类高并发读写的小文件， 会由于共享目录服务器的io-wait过高，最终拖累前端WEB应用程序的执行效率。\r\n\r\n\r\n\r\n\r\n2. 基于数据库的Session共享\r\n\r\n首选当然是大名鼎鼎的Mysql数据库，并且建议使用内存表Heap，提高session操作的读写效率。这个方案的实用性比较强，相信大家普遍在 使用，它的缺点在于session的并发读写能力取决于Mysql数据库的性能，同时需要自己实现session淘汰逻辑，以便定时从数据表中更新、删除 session记录，当并发过高时容易出现表锁，虽然我们可以选择行级锁的表引擎，但不得不否认使用数据库存储Session还是有些杀鸡用牛刀的架势。\r\n\r\n\r\n\r\n3. 基于Cookie的Session共享\r\n\r\n这个方案我们可能比较陌生，但它在大型网站中还是比较普遍被使用。原理是将全站用户的Session信息加密、序列化后以Cookie的方式，统一 种植在根域名下（如：.host.com），利用浏览器访问该根域名下的所有二级域名站点时，会传递与之域名对应的所有Cookie内容的特性，从而实现 用户的Cookie化Session 在多服务间的共享访问。\r\n\r\n这个方案的优点无需额外的服务器资源；缺点是由于受http协议头信心长度的限制，仅能够存储小部分的用户信息，同时Cookie化的 Session内容需要进行安全加解密（如：采用DES、RSA等进行明文加解密；再由MD5、SHA-1等算法进行防伪认证），另外它也会占用一定的带 宽资源，因为浏览器会在请求当前域名下任何资源时将本地Cookie附加在http头中传递到服务器。\r\n\r\n\r\n\r\n4. 基于Memcache的Session共享\r\n\r\nMemcache由于是一款基于Libevent多路异步I/O技术的内存共享系统，简单的Key + Value数据存储模式使得代码逻辑小巧高效，因此在并发处理能力上占据了绝对优势，目前本人所经历的项目达到2000/秒 平均查询，并且服务器CPU消耗依然不到10%。\r\n\r\n另外值得一提的是Memcache的内存hash表所特有的Expires数据过期淘汰机制，正好和Session的过期机制不谋而合，降低了过期Session数据删除的代码复杂度，对比“基于数据库的存储方案”，仅这块逻辑就给数据表产生巨大的查询压力。\r\n\r\n\r\n\r\n基于Memcache 的存储是这几个方案中推荐选用的！\r\n\r\n其它方案依然有其使用的场合，具体选用哪套需要开发人员的根据当前的服务器资源、网站并发压力等综合评估。      ', NULL, 2010, '2010-04', 164, 2, ''),
(208, '商界财视网抢8抽奖系统', NULL, '才去商界财视网开发的第一个项目: \r\nhttp://www.caistv.com/luckdraw/LuckyDraw.php    ', NULL, 2010, '2010-04', 62, 1, ''),
(209, '商界财视网直播系统', NULL, '在商界财视网开发的第二个项目\r\n演示地址：\r\nhttp://live.caistv.com/Html/2010-03-30.php       \r\n      ', NULL, 2010, '2010-04', 78, 1, ''),
(210, '商界财视网广告联盟', NULL, '在商界财视网开发的第三个项目\r\n演示地址：\r\nhttp://union.caistv.com/\r\n      ', NULL, 2010, '2010-04', 82, 1, ''),
(212, '感谢各位的支持', NULL, '  这些天，发现PHP博客的一些关键词在百度和谷歌都排在很前面，很多网友也通过这些关键词来到PHP博客，也给我提了大量的建议，一些朋友说博客看起太小气了，建议我使用wordpress来改版，多抽时间更新文章，尽量保持博客原有数据，把博客做大做强。其实这些我都考虑过，本人近期工作不顺，才跳槽，空余时间太少，连写日志的时间都没有，等空了，我会改进的，在这里我感谢各位网友的支持与建议，希望大家常来逛逛，多多提意见，也非常高兴与大家共同探讨web编程技术！      \r\n      \r\n      ', NULL, 2010, '2010-04', 78, 1, ''),
(213, 'Yii框架 Active Record与DAO的性能测试对比', '<p>出差</p>', '<p>因公司最近一项目准备基于Yii框架构建，</p>\r\n<p>现将数据层做了一些简单的测试  测试结果如下</p>\r\n<p>：  Yii框架 Active Record与DAO的性能测试对比   Active Record与DAO都是使用的PDO抽象层</p>\r\n<p>AR插入1W条数据 花费时间15.833298921585 times AR删除1W条数据 花费时间0.04245400428772 times  AR查询1W条数据 花费时间0.60363000869751 times   DAO插入1W条数据 花费时间6.3882400989532 times DAO删除1W条数据 花费时间0.0076189041137695 times DAO查询1W条数据 花费时间0.048065900802612 times        作者：www.phpcq.com</p>', 'Yii', NULL, '', NULL, 2, ''),
(245, '我是', '', '', '', NULL, '', 1, NULL, '111'),
(246, '222', '<p>&nbsp;11xxxx错错错相信踩踩踩踩踩踩</p>', '<p>&nbsp;333333测试1111</p>', '测试,django', NULL, '', 117, 2, ''),
(247, '测试相信1', '<p><span style="background-color: rgb(255, 153, 0); ">&nbsp;让人柔柔弱弱柔柔弱弱</span></p>', '<p><span style="color: rgb(255, 0, 0); ">&nbsp;&nbsp; &nbsp; &nbsp;1111111111事实上生生死死相信</span></p>', '测试,django', 1284881288, '', 18, 1, '');

-- --------------------------------------------------------

--
-- 表的结构 `categories`
--

CREATE TABLE IF NOT EXISTS `categories` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `orderId` tinyint(3) unsigned NOT NULL COMMENT '排序',
  `cateName` varchar(50) CHARACTER SET utf8 NOT NULL COMMENT '分类名称',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=14 ;

--
-- 导出表中的数据 `categories`
--

INSERT INTO `categories` (`id`, `orderId`, `cateName`) VALUES
(1, 1, '心情日志'),
(2, 2, '技术文章'),
(3, 3, '常用下载');

-- --------------------------------------------------------

--
-- 表的结构 `links`
--

CREATE TABLE IF NOT EXISTS `links` (
  `id` smallint(6) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `linkName` varchar(200) CHARACTER SET utf8 NOT NULL COMMENT '链接名称',
  `linkAdr` varchar(200) CHARACTER SET utf8 NOT NULL COMMENT '链接地址',
  `linkRemark` varchar(200) CHARACTER SET utf8 NOT NULL COMMENT '链接备注',
  `orderId` smallint(5) unsigned NOT NULL COMMENT '排序',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=3 ;

--
-- 导出表中的数据 `links`
--

INSERT INTO `links` (`id`, `linkName`, `linkAdr`, `linkRemark`, `orderId`) VALUES
(1, 'php博客', 'http://www.phpcq.com', '中国最大的博客', 1);

-- --------------------------------------------------------

--
-- 表的结构 `manager`
--

CREATE TABLE IF NOT EXISTS `manager` (
  `id` tinyint(4) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `username` varchar(200) CHARACTER SET utf8 NOT NULL COMMENT '用户名',
  `password` varchar(200) CHARACTER SET utf8 NOT NULL COMMENT '密码',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=2 ;

--
-- 导出表中的数据 `manager`
--

INSERT INTO `manager` (`id`, `username`, `password`) VALUES
(1, 'admin', '90b9aa7e25f80cf4f64e990b78a9fc5ebd6cecad');

-- --------------------------------------------------------

--
-- 表的结构 `photo`
--

CREATE TABLE IF NOT EXISTS `photo` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `cate_id` smallint(6) NOT NULL COMMENT '图片分类id',
  `picAdr` varchar(200) CHARACTER SET utf8 NOT NULL COMMENT '图片地址',
  `picName` varchar(200) CHARACTER SET utf8 NOT NULL COMMENT '图片名称',
  `picRemark` text CHARACTER SET utf8 NOT NULL COMMENT '图片备注',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=12 ;

--
-- 导出表中的数据 `photo`
--

INSERT INTO `photo` (`id`, `cate_id`, `picAdr`, `picName`, `picRemark`) VALUES
(11, 5, 'upload/1286875722.png', '学习', '差v');

-- --------------------------------------------------------

--
-- 表的结构 `photocategories`
--

CREATE TABLE IF NOT EXISTS `photocategories` (
  `id` smallint(6) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `orderId` smallint(5) unsigned NOT NULL COMMENT '排序',
  `cateName` varchar(200) CHARACTER SET utf8 NOT NULL COMMENT '分类名称',
  `remark` varchar(200) CHARACTER SET utf8 NOT NULL,
  `bgImage` varchar(200) CHARACTER SET utf8 NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=6 ;

--
-- 导出表中的数据 `photocategories`
--

INSERT INTO `photocategories` (`id`, `orderId`, `cateName`, `remark`, `bgImage`) VALUES
(1, 1, '走过岁月xx', '呵呵！ccccx', 'upload/1285401159.png'),
(4, 2, '测试', '测试测试', 'upload/1285732866.png'),
(5, 3, '测试2', '测试2测试2测试2测试2', 'upload/1285732938.png');
